var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddChannelCardComponent.html",[0,0.122,1,0.558]],["body/components/AddChannelCardComponent.html",[0,0.195,1,0.834,2,0.672,3,0.125,4,0.125,5,0.481,6,0.481,7,0.481,8,0.109,9,2.293,10,3.271,11,3.463,12,1.138,13,5.374,14,0.976,15,4.942,16,2.211,17,0.432,18,1.217,19,1.281,20,1.096,21,3.647,22,0.672,23,0.715,24,0.708,25,3.014,26,5.032,27,5.032,28,5.032,29,5.032,30,5.032,31,2.491,32,2.007,33,1.187,34,0.708,35,3.647,36,0.708,37,3.647,38,0.078,39,0.232,40,1.493,41,1.765,42,2.719,43,1.051,44,2.214,45,5.918,46,1.851,47,1.461,48,0.361,49,2.007,50,4.239,51,3.257,52,0.388,53,1.346,54,2.485,55,4.546,56,1.533,57,0.459,58,2.879,59,0.461,60,0.019,61,0.453,62,0.334,63,0.466,64,4.239,65,3.064,66,2.476,67,2.353,68,0.361,69,2.227,70,3.647,71,2.879,72,0.506,73,0.475,74,0.475,75,1.608,76,2.539,77,1.78,78,4.239,79,2.539,80,3.324,81,2.227,82,2.539,83,2.539,84,4.239,85,2.879,86,2.879,87,2.879,88,2.879,89,2.879,90,1.325,91,2.879,92,2.879,93,2.476,94,0.434,95,1.611,96,2.476,97,0.174,98,1.724,99,2.879,100,2.879,101,2.879,102,1.209,103,0.858,104,1.346,105,1.512,106,1.611,107,1.611,108,1.039,109,0.679,110,1.512,111,1.425,112,0.756,113,0.88,114,2.476,115,0.647,116,0.712,117,0.125,118,0.125,119,1.028,120,4.239,121,2.879,122,1.724,123,2.879,124,2.879,125,1.982,126,1.148,127,2.879,128,2.879,129,1.512,130,1.092,131,1.425,132,2.879,133,2.211,134,1.512,135,1.724,136,1.611,137,1.425,138,1.425,139,2.476,140,3.883,141,2.732,142,4.239,143,3.647,144,4.239,145,4.239,146,4.239,147,4.239,148,4.239,149,3.883,150,4.239,151,4.239,152,4.239,153,4.239,154,4.239,155,3.257,156,4.239,157,3.257,158,4.239,159,4.776,160,2.965,161,2.965,162,2.732,163,3.257,164,3.647,165,4.239,166,3.647,167,0.481,168,0.708,169,0.672,170,0.387,171,0.88,172,0.481,173,0.708,174,0.432,175,0.481,176,0.432,177,0.481,178,0.456,179,0.708,180,0.432,181,0.456,182,0.481,183,0.432,184,0.481,185,0.432,186,0.481,187,0.432,188,0.672,189,0.432,190,0.708,191,0.432,192,0.432,193,0.481,194,0.432,195,0.637,196,0.481,197,0.409,198,0.432,199,0.432,200,0.708,201,0.432,202,0.841,203,0.432,204,0.481,205,0.432,206,0.481,207,0.432,208,0.708,209,0.708,210,0.432,211,0.432,212,0.481,213,0.432,214,0.481,215,0.432,216,0.93,217,0.432,218,0.481,219,0.432,220,0.481,221,0.432,222,0.481,223,0.432,224,0.432,225,0.456,226,0.481,227,0.432,228,0.343,229,0.481,230,0.456,231,0.481,232,0.481,233,0.432,234,0.481,235,0.481,236,0.456,237,0.708,238,0.481,239,0.432,240,0.481,241,0.432,242,0.456,243,0.481,244,0.432,245,0.481,246,0.432,247,0.343,248,0.456,249,0.481,250,0.456,251,0.409,252,0.456,253,0.481,254,0.01,255,0.01]],["title/components/AddMemberCardComponent.html",[0,0.122,112,0.558]],["body/components/AddMemberCardComponent.html",[0,0.157,1,0.394,2,0.627,3,0.114,4,0.114,5,0.438,6,0.438,7,0.438,8,0.099,9,2.378,10,3.391,11,3.59,12,1.165,13,5.571,14,0.332,15,5.072,16,2.014,17,0.394,18,1.209,19,1.272,20,1.056,21,3.402,22,0.627,23,0.677,24,0.661,31,2.357,32,1.899,33,1.123,34,0.661,35,3.402,36,0.661,37,3.402,38,0.071,39,0.216,40,1.473,41,1.697,43,0.932,44,2.115,46,1.809,47,1.428,48,0.336,52,0.362,53,1.226,54,2.389,56,1.474,57,0.479,59,0.486,60,0.019,61,0.412,62,0.346,63,0.417,66,2.256,68,0.509,72,0.795,73,0.638,74,0.638,90,1.236,93,2.256,94,0.415,97,0.159,102,1.101,103,0.782,108,0.947,109,0.618,112,0.796,113,1.219,115,0.59,116,0.648,117,0.114,118,0.114,119,0.535,125,2.226,129,1.378,130,0.995,131,1.298,140,2.766,167,0.438,168,0.661,169,0.627,170,0.352,171,0.84,172,0.438,173,0.661,174,0.394,175,0.438,176,0.394,177,0.438,178,0.416,179,0.661,180,0.394,181,0.416,182,0.438,183,0.394,184,0.438,185,0.394,186,0.438,187,0.394,188,0.627,189,0.394,190,0.661,191,0.394,192,0.394,193,0.438,194,0.394,195,0.594,196,0.438,197,0.373,198,0.394,199,0.394,200,0.661,201,0.394,202,0.795,203,0.394,204,0.438,205,0.394,206,0.438,207,0.394,208,0.661,209,0.661,210,0.394,211,0.394,212,0.438,213,0.394,214,0.438,215,0.394,216,0.898,217,0.394,218,0.438,219,0.394,220,0.438,221,0.394,222,0.438,223,0.394,224,0.394,225,0.416,226,0.438,227,0.394,228,0.313,229,0.438,230,0.416,231,0.438,232,0.438,233,0.394,234,0.438,235,0.438,236,0.416,237,0.661,238,0.438,239,0.394,240,0.438,241,0.394,242,0.416,243,0.438,244,0.394,245,0.438,246,0.394,247,0.85,248,0.416,249,0.438,250,0.416,251,0.754,252,0.416,253,0.438,254,0.009,255,0.009,256,3.402,257,3.955,258,4.761,259,3.955,260,3.955,261,4.761,262,3.979,263,3.33,264,5.69,265,3.979,266,3.116,267,5.69,268,3.99,269,5.302,270,4.073,271,3.038,272,3.038,273,4.073,274,2.766,275,3.955,276,2.622,277,2.622,278,3.038,279,3.038,280,2.622,281,3.955,282,0.81,283,2.622,284,3.979,285,2.622,286,2.622,287,2.622,288,2.622,289,2.622,290,2.622,291,2.622,292,2.622,293,1.074,294,2.622,295,2.622,296,2.622,297,1.226,298,2.014,299,1.69,300,1.834,301,1.834,302,1.468,303,2.622,304,2.014,305,2.014,306,3.658,307,2.622,308,2.014,309,2.014,310,3.038,311,2.014,312,2.622,313,2.622,314,2.014,315,2.622,316,2.014,317,2.014,318,2.622,319,1.57,320,4.073,321,3.582,322,3.955,323,3.038,324,3.955,325,3.955,326,3.955,327,2.347,328,3.417,329,2.786,330,2.967,331,4.909,332,2.786,333,3.038]],["title/components/AppComponent.html",[0,0.122,174,0.558]],["body/components/AppComponent.html",[0,0.181,1,0.507,2,0.753,3,0.146,4,0.146,5,0.563,6,0.563,7,0.563,8,0.128,12,0.872,14,0.427,17,0.507,18,1.229,19,1.295,20,0.947,22,0.753,23,0.675,24,0.794,34,0.794,36,0.794,38,0.092,39,0.26,40,1.423,41,1.878,43,1.008,46,1.774,47,1.514,48,0.404,52,0.309,56,1.632,57,0.486,59,0.435,60,0.019,61,0.418,62,0.335,63,0.374,68,0.556,72,0.801,73,0.378,74,0.378,90,1.054,94,0.414,97,0.204,103,1.006,109,0.795,112,0.507,113,0.753,116,0.834,117,0.146,118,0.146,129,2.497,130,1.802,137,1.669,167,0.563,168,0.794,169,0.753,170,0.453,171,0.947,172,0.563,173,0.794,174,0.897,175,0.563,176,0.507,177,0.563,178,0.534,179,0.794,180,0.507,181,0.534,182,0.563,183,0.507,184,0.563,185,0.507,186,0.563,187,0.507,188,0.753,189,0.507,190,0.794,191,0.507,192,0.507,193,0.563,194,0.507,195,0.714,196,0.563,197,0.479,198,0.714,199,0.507,200,0.794,201,0.507,202,0.919,203,0.507,204,0.563,205,0.507,206,0.563,207,0.897,208,0.919,209,0.794,210,0.507,211,0.507,212,0.563,213,0.507,214,0.563,215,0.507,216,0.981,217,0.507,218,0.563,219,0.507,220,0.563,221,0.507,222,0.563,223,0.507,224,0.507,225,0.534,226,0.563,227,0.507,228,0.402,229,0.563,230,0.534,231,0.563,232,0.563,233,0.507,234,0.563,235,0.563,236,0.534,237,0.794,238,0.563,239,0.507,240,0.563,241,0.507,242,0.534,243,0.563,244,0.507,245,0.563,246,0.507,247,0.402,248,0.534,249,0.563,250,0.534,251,0.479,252,0.534,253,0.563,254,0.011,255,0.011,282,0.427,334,2.901,335,1.802,336,5.502,337,4.752,338,4.752,339,5.502,340,5.502,341,3.309,342,2.573,343,5.974,344,4.178,345,5.974,346,2.508,347,5.974,348,4.752,349,3.651,350,4.752,351,1.577,352,3.848,353,4.178,354,2.788,355,4.752,356,2.901,357,3.602,358,3.373,359,4.752,360,3.373,361,3.373,362,3.373,363,3.373,364,3.373,365,4.752,366,2.174,367,4.752,368,3.373,369,3.373,370,2.846,371,3.373,372,3.373,373,3.373,374,2.359,375,2.891,376,2.02,377,2.901,378,2.359,379,2.359,380,1.888,381,1.772,382,1.772,383,1.669,384,0.834,385,3.373,386,4.752,387,2.901,388,4.752,389,3.373,390,3.373,391,4.752,392,5.502,393,2.846,394,1.297,395,3.373,396,3.373,397,3.373,398,3.373,399,2.901,400,1.669,401,2.359,402,3.373,403,3.373,404,2.359,405,3.373,406,2.174,407,2.591,408,2.591,409,2.901,410,2.901,411,2.359,412,2.359,413,2.359,414,1.772,415,2.359,416,2.359,417,2.359]],["title/components/AvatarComponent.html",[0,0.122,176,0.558]],["body/components/AvatarComponent.html",[0,0.17,1,0.454,2,0.696,3,0.131,4,0.131,5,0.504,6,0.504,7,0.504,8,0.166,12,0.82,14,0.383,17,0.454,18,1.221,19,1.285,20,0.9,22,0.696,23,0.807,24,0.733,33,1.22,34,0.733,36,0.733,38,0.082,39,0.24,43,0.976,46,1.71,47,1.393,48,0.374,49,2.063,52,0.277,57,0.491,59,0.474,60,0.019,61,0.418,62,0.337,63,0.407,68,0.587,72,0.823,73,0.677,74,0.677,90,1.373,94,0.393,97,0.183,109,0.712,112,0.454,113,0.696,115,0.679,116,0.746,117,0.131,118,0.131,119,1.16,126,1.204,137,1.495,163,3.373,167,0.504,168,0.733,169,0.9,170,0.406,171,0.9,172,0.504,173,0.733,174,0.454,175,0.504,176,0.853,177,0.504,178,0.479,179,0.733,180,0.454,181,0.479,182,0.504,183,0.454,184,0.504,185,0.454,186,0.504,187,0.454,188,0.696,189,0.454,190,0.733,191,0.454,192,0.454,193,0.504,194,0.454,195,0.659,196,0.504,197,0.429,198,0.454,199,0.454,200,0.733,201,0.454,202,0.864,203,0.454,204,0.504,205,0.454,206,0.504,207,0.454,208,0.733,209,0.733,210,0.454,211,0.454,212,0.504,213,0.454,214,0.504,215,0.454,216,0.946,217,0.454,218,0.504,219,0.454,220,0.504,221,0.454,222,0.504,223,0.454,224,0.454,225,0.479,226,0.504,227,0.454,228,0.36,229,0.504,230,0.479,231,0.504,232,0.504,233,0.454,234,0.504,235,0.504,236,0.479,237,0.733,238,0.504,239,0.454,240,0.504,241,0.454,242,0.479,243,0.504,244,0.454,245,0.504,246,0.659,247,0.823,248,0.82,249,0.504,250,0.479,251,0.429,252,0.479,253,0.504,254,0.01,255,0.01,282,0.765,293,1.192,330,1.69,342,2.419,344,3.973,346,2.385,351,1.412,352,3.619,353,3.973,357,1.587,375,1.587,379,2.112,380,1.69,381,1.587,383,1.495,384,1.279,400,2.173,404,2.112,406,2.83,411,2.112,412,3.619,413,2.112,415,2.112,416,2.112,417,2.112,418,4.155,419,2.598,420,5.68,421,4.391,422,4.391,423,4.451,424,3.335,425,4.451,426,4.451,427,5.174,428,5.174,429,3.777,430,5.68,431,5.68,432,4.363,433,4.363,434,5.68,435,4.363,436,3.777,437,3.619,438,3.661,439,4.391,440,3.02,441,2.307,442,3.02,443,3.02,444,3.02,445,3.02,446,3.02,447,3.02,448,3.02,449,3.02,450,3.02,451,3.777,452,3.02,453,3.777,454,6.075,455,3.777,456,3.777,457,3.777,458,3.777,459,3.777,460,3.777,461,3.02,462,3.02,463,3.02,464,4.391,465,3.02,466,3.02,467,1.585,468,3.02,469,3.02,470,3.02,471,2.32,472,2.598,473,3.02,474,3.02,475,2.32,476,3.02,477,4.391,478,3.02,479,2.32,480,2.598,481,3.777,482,2.598,483,6.034,484,3.02,485,3.777,486,3.02,487,2.598,488,2.32,489,1.946,490,3.02,491,3.02,492,3.02,493,2.32,494,3.02,495,3.02,496,3.02,497,2.32,498,2.32,499,3.02,500,2.32,501,2.32,502,2.32,503,2.32,504,2.32,505,3.02,506,2.32,507,4.391,508,4.391,509,4.391,510,4.391,511,2.83,512,4.391,513,4.391,514,3.373,515,4.391,516,3.777,517,3.777,518,3.777]],["title/interfaces/Channel.html",[14,0.471,519,1.739]],["body/interfaces/Channel.html",[3,0.235,4,0.235,8,0.205,14,0.821,38,0.148,39,0.354,60,0.018,61,0.476,62,0.371,75,2.721,76,4.296,77,3.012,79,4.296,81,3.769,82,4.296,83,4.296,94,0.328,105,3.769,106,3.034,107,3.034,117,0.235,254,0.015,255,0.015,282,0.992,441,3.639,519,2.535,520,3.494,521,4.664]],["title/injectables/ChannelFirebaseService.html",[56,0.963,522,0.797]],["body/injectables/ChannelFirebaseService.html",[3,0.11,4,0.11,8,0.096,14,0.958,38,0.069,39,0.211,48,0.328,49,2.997,52,0.427,56,0.999,57,0.494,59,0.638,60,0.019,61,0.479,62,0.358,63,0.548,68,0.61,69,3.324,72,0.557,73,0.662,74,0.662,75,2.458,76,3.358,77,2.355,79,3.358,81,3.225,82,3.358,83,3.536,94,0.339,97,0.153,104,1.186,105,1.333,106,1.42,107,1.42,117,0.11,118,0.11,119,1.456,125,3.03,126,2.523,141,3.806,216,0.381,254,0.009,255,0.009,274,1.775,282,0.971,327,2.615,335,0.962,342,2.438,394,1.67,424,1.635,425,2.183,467,1.393,522,0.827,523,1.012,524,2.183,525,3.647,526,4.667,527,3.536,528,4.667,529,4.667,530,4.667,531,3.857,532,3.857,533,3.857,534,5.214,535,3.857,536,5.214,537,5.214,538,3.857,539,3.857,540,3.857,541,3.647,542,2.698,543,3.857,544,3.857,545,3.857,546,3.857,547,3.857,548,3.857,549,3.857,550,3.857,551,2.537,552,3.857,553,4.667,554,2.537,555,3.857,556,2.537,557,2.537,558,3.857,559,2.537,560,3.139,561,2.537,562,2.537,563,3.857,564,2.537,565,1.519,566,3.857,567,2.537,568,1.775,569,3.857,570,5.214,571,2.537,572,3.857,573,2.537,574,3.857,575,2.537,576,3.857,577,2.537,578,3.857,579,2.537,580,1.949,581,3.857,582,2.537,583,3.857,584,2.537,585,3.139,586,3.857,587,2.537,588,3.857,589,5.214,590,2.537,591,2.794,592,2.537,593,2.537,594,4.014,595,2.537,596,3.857,597,2.537,598,2.31,599,2.537,600,2.537,601,4.824,602,2.537,603,1.256,604,1.949,605,1.775,606,1.949,607,1.635,608,1.949,609,2.183,610,2.537,611,2.963,612,2.183,613,1.42,614,2.537,615,2.537,616,1.012,617,3.857,618,2.537,619,2.537,620,4.667,621,2.537,622,2.537,623,2.537,624,2.698,625,1.635,626,5.214,627,3.857,628,2.537,629,2.537,630,2.537,631,1.519,632,2.537,633,2.537,634,2.537,635,4.294,636,3.857,637,2.537,638,4.667,639,2.537,640,3.857,641,2.537,642,2.537,643,1.775,644,2.537,645,1.949,646,2.183,647,2.537,648,2.537,649,1.949,650,2.537,651,2.537,652,2.537,653,2.537,654,1.775,655,1.949,656,3.857,657,4.308,658,1.949,659,1.949,660,1.949,661,1.949,662,2.537,663,2.537,664,2.537,665,1.949,666,5.214,667,2.537,668,2.537,669,5.214,670,2.963,671,2.537,672,2.537,673,2.537,674,2.537,675,2.537,676,2.537,677,2.183,678,2.537,679,1.775,680,2.537,681,2.537,682,2.537,683,2.537,684,2.537,685,4.667,686,2.537,687,2.537,688,2.537,689,2.537,690,2.537,691,2.537,692,2.537,693,2.537,694,4.667,695,2.537,696,2.537,697,2.537,698,2.537,699,2.537,700,2.537,701,2.537,702,2.537,703,2.537,704,2.537,705,2.537,706,2.537,707,2.537,708,2.537,709,2.537,710,1.775,711,2.183,712,2.537,713,3.857,714,2.537,715,2.537,716,2.537]],["title/components/CheckEmailComponent.html",[0,0.122,180,0.558]],["body/components/CheckEmailComponent.html",[0,0.184,1,0.52,2,0.767,3,0.15,4,0.15,5,0.579,6,0.579,7,0.579,8,0.131,12,0.885,14,0.439,17,0.52,18,1.231,19,1.297,20,0.958,22,0.767,23,0.688,24,0.809,32,2.227,33,1.316,34,0.809,36,0.809,38,0.094,39,0.265,43,1.016,46,1.789,48,0.412,52,0.317,57,0.449,59,0.317,60,0.019,61,0.401,62,0.237,63,0.273,68,0.514,72,0.721,73,0.543,74,0.543,90,1.746,94,0.424,97,0.21,108,1.251,112,0.52,113,0.767,115,0.779,116,0.857,117,0.15,118,0.15,119,0.707,137,1.715,149,4.228,155,4.644,162,3.121,167,0.579,168,0.809,169,0.958,170,0.465,171,0.958,172,0.579,173,0.809,174,0.52,175,0.579,176,0.52,177,0.579,178,0.549,179,0.809,180,0.908,181,1.072,182,0.579,183,0.52,184,0.579,185,0.52,186,0.579,187,0.52,188,0.767,189,0.52,190,0.809,191,0.52,192,0.52,193,0.579,194,0.52,195,0.727,196,0.579,197,0.492,198,0.727,199,0.838,200,0.809,201,0.52,202,0.933,203,0.52,204,0.579,205,0.52,206,0.579,207,0.52,208,0.809,209,0.809,210,0.52,211,0.52,212,0.579,213,0.52,214,0.579,215,0.52,216,0.99,217,0.52,218,0.579,219,0.52,220,0.579,221,0.52,222,0.579,223,0.52,224,0.52,225,0.549,226,0.579,227,0.52,228,0.413,229,0.579,230,0.549,231,0.579,232,0.579,233,0.52,234,0.579,235,0.579,236,0.549,237,0.809,238,0.579,239,0.52,240,0.579,241,0.52,242,0.549,243,0.579,244,0.52,245,0.579,246,0.52,247,0.413,248,0.549,249,0.579,250,0.549,251,0.492,252,0.549,253,0.579,254,0.011,255,0.011,282,0.614,341,2.934,344,4.228,351,1.62,352,3.905,353,3.905,354,2.676,375,1.821,377,2.981,378,2.424,379,2.424,380,1.939,381,1.821,382,1.821,383,1.715,384,1.197,400,1.715,406,2.233,410,2.981,411,2.424,412,3.387,413,2.424,415,2.424,416,2.424,417,2.424,418,3.863,432,4.644,435,4.644,497,2.662,498,2.662,500,2.662,501,2.662,502,2.662,503,2.662,504,2.662,506,2.662,717,5.302,718,5.937,719,2.981,720,4.166,721,4.843,722,4.843,723,3.599,724,5.583,725,5.2,726,4.843,727,3.465,728,3.465,729,3.465,730,3.465,731,3.465,732,3.465,733,3.465,734,3.465,735,2.981,736,2.981,737,3.465,738,3.465,739,2.981,740,4.228,741,4.166,742,4.166,743,4.166,744,4.133,745,4.133,746,3.896,747,3.72,748,3.387,749,3.72,750,3.72,751,4.166,752,6.045,753,4.843,754,4.843,755,3.72,756,4.843,757,4.166,758,4.843]],["title/injectables/CustomDialogService.html",[42,1.483,522,0.797]],["body/injectables/CustomDialogService.html",[0,0.161,3,0.152,4,0.152,8,0.133,38,0.096,39,0.267,40,1.386,42,1.947,43,1.056,44,2.24,48,0.415,52,0.321,54,2.682,55,4.907,57,0.473,59,0.622,60,0.019,61,0.451,62,0.344,63,0.534,65,3.561,67,2.841,68,0.577,72,0.67,73,0.547,74,0.393,94,0.34,97,0.212,102,1.472,117,0.152,118,0.152,119,0.716,134,3.842,135,4.578,136,4.163,137,3.726,138,1.735,254,0.012,255,0.012,282,0.902,293,0.952,319,2.923,335,1.329,394,1.658,414,3.889,493,4.315,519,1.639,522,1.046,523,1.398,591,3.961,616,1.398,759,5.527,760,2.692,761,4.882,762,4.882,763,4.882,764,4.667,765,4.882,766,4.882,767,4.882,768,3.505,769,4.882,770,4.199,771,3.505,772,6.497,773,4.199,774,3.505,775,4.249,776,4.199,777,3.505,778,5.226,779,3.505,780,4.199,781,5.495,782,3.505,783,3.505,784,3.929,785,3.505,786,4.199,787,5.838,788,3.505,789,3.505,790,3.915,791,3.015,792,2.259,793,3.015,794,3.015,795,4.907,796,3.015,797,3.015,798,3.015,799,4.199,800,3.015,801,3.015,802,3.015,803,3.015,804,3.015,805,3.015,806,4.199,807,5.226,808,3.015,809,3.015,810,4.199,811,5.495,812,4.199,813,5.838,814,3.015,815,3.015,816,2.692]],["title/components/DialogAddMemberComponent.html",[0,0.122,183,0.558]],["body/components/DialogAddMemberComponent.html",[0,0.166,1,0.434,2,0.674,3,0.125,4,0.125,5,0.483,6,0.483,7,0.483,8,0.109,9,2.372,12,0.799,14,0.705,17,0.434,18,1.217,19,1.281,20,1.222,22,0.674,23,0.604,24,0.71,31,2.497,32,2.012,33,1.189,34,0.71,36,0.71,38,0.079,39,0.232,40,1.429,41,1.768,43,1.062,44,2.219,47,1.463,48,0.362,52,0.389,53,1.351,54,2.489,56,1.536,57,0.477,59,0.462,60,0.019,61,0.412,62,0.343,63,0.397,68,0.504,72,0.814,73,0.665,74,0.665,94,0.406,95,2.823,97,0.175,102,1.214,103,0.862,104,1.351,108,1.043,109,0.681,112,0.434,113,0.881,115,0.65,117,0.125,118,0.125,119,0.868,125,1.988,131,1.431,167,0.483,168,0.71,169,0.674,170,0.388,171,0.881,172,0.483,173,0.71,174,0.434,175,0.483,176,0.434,177,0.483,178,0.458,179,0.71,180,0.434,181,0.458,182,0.483,183,0.835,184,0.483,185,0.434,186,0.483,187,0.434,188,0.674,189,0.434,190,0.71,191,0.434,192,0.434,193,0.483,194,0.434,195,0.639,196,0.483,197,0.411,198,0.434,199,0.434,200,0.71,201,0.434,202,0.842,203,0.434,204,0.483,205,0.434,206,0.483,207,0.434,208,0.71,209,0.71,210,0.434,211,0.434,212,0.483,213,0.434,214,0.483,215,0.434,216,0.931,217,0.434,218,0.483,219,0.434,220,0.483,221,0.434,222,0.483,223,0.434,224,0.434,225,0.458,226,0.483,227,0.434,228,0.345,229,0.483,230,0.458,231,0.483,232,0.483,233,0.434,234,0.483,235,0.483,236,0.458,237,0.71,238,0.483,239,0.434,240,0.483,241,0.434,242,0.458,243,0.483,244,0.434,245,0.483,246,0.434,247,0.873,248,0.458,249,0.483,250,0.458,251,0.411,252,0.458,253,0.483,254,0.01,255,0.01,262,4.146,263,3.528,265,3.528,268,4.087,270,4.273,271,3.266,272,3.266,273,4.273,278,3.266,279,3.266,282,0.539,284,2.974,297,1.351,298,2.22,299,1.863,304,3.266,305,2.22,306,4.273,308,2.22,309,2.22,310,3.266,311,2.22,314,2.22,316,2.22,317,2.22,320,3.266,321,3.331,327,2.463,328,3.585,329,2.923,330,3.587,331,5.052,332,2.923,333,3.266,346,2.336,511,1.863,525,3.528,723,1.863,817,4.332,818,5.06,819,2.486,820,2.74,821,4.252,822,4.252,823,5.099,824,2.89,825,2.89,826,2.89,827,2.89,828,2.89,829,2.89,830,2.89,831,3.251,832,2.89,833,2.89,834,2.89,835,2.89,836,2.89,837,2.89,838,2.89,839,2.89,840,2.486,841,2.486,842,3.658,843,2.486,844,3.875,845,2.486,846,2.486,847,2.486,848,2.486,849,2.486,850,2.486,851,2.486,852,2.486,853,3.658,854,3.658]],["title/components/DialogAddMemberMobileComponent.html",[0,0.122,185,0.558]],["body/components/DialogAddMemberMobileComponent.html",[0,0.187,1,0.391,2,0.624,3,0.113,4,0.113,5,0.435,6,0.435,7,0.435,8,0.099,9,2.375,12,0.752,14,0.67,17,0.391,18,1.208,19,1.271,20,1.223,22,0.624,23,0.56,24,0.658,31,2.348,32,1.892,33,1.119,34,0.658,36,0.658,38,0.071,39,0.215,40,1.441,41,1.692,42,2.654,43,1.051,44,2.108,47,1.426,48,0.335,52,0.361,53,1.219,54,2.383,56,1.47,57,0.479,59,0.484,60,0.019,61,0.411,62,0.343,63,0.416,65,2.348,67,2.472,68,0.527,72,0.835,73,0.636,74,0.636,94,0.419,97,0.158,102,1.094,103,0.777,104,1.219,108,0.941,109,0.615,110,1.369,111,1.29,112,0.391,113,1.219,115,0.586,117,0.113,118,0.113,119,0.969,125,1.841,131,1.29,133,2.002,134,1.369,138,1.29,167,0.435,168,0.658,169,0.624,170,0.35,171,0.838,172,0.435,173,0.658,174,0.391,175,0.435,176,0.391,177,0.435,178,0.413,179,0.658,180,0.391,181,0.413,182,0.435,183,0.591,184,0.435,185,0.794,186,0.435,187,0.391,188,0.624,189,0.391,190,0.658,191,0.391,192,0.391,193,0.435,194,0.391,195,0.794,196,0.435,197,0.674,198,0.391,199,0.391,200,0.658,201,0.391,202,0.792,203,0.391,204,0.435,205,0.391,206,0.435,207,0.391,208,0.658,209,0.658,210,0.391,211,0.391,212,0.435,213,0.391,214,0.435,215,0.391,216,0.896,217,0.391,218,0.435,219,0.391,220,0.435,221,0.391,222,0.435,223,0.391,224,0.391,225,0.413,226,0.435,227,0.391,228,0.311,229,0.435,230,0.413,231,0.435,232,0.435,233,0.391,234,0.435,235,0.435,236,0.413,237,0.658,238,0.435,239,0.391,240,0.435,241,0.391,242,0.413,243,0.435,244,0.391,245,0.435,246,0.391,247,0.86,248,0.413,249,0.435,250,0.413,251,0.37,252,0.413,253,0.435,254,0.009,255,0.009,262,3.969,263,3.318,265,3.318,268,3.984,270,4.06,271,3.024,272,3.024,273,4.06,278,3.024,279,3.024,282,0.719,284,2.753,297,1.219,298,2.002,299,1.68,304,3.644,305,2.002,306,4.06,308,2.002,309,2.002,310,3.024,311,2.002,314,2.002,316,2.002,317,2.002,320,3.024,321,3.165,327,2.34,328,3.407,329,2.777,330,3.467,331,4.9,332,2.777,333,3.024,342,1.219,346,2.219,384,0.644,414,1.369,511,1.68,525,3.318,723,1.68,816,3.024,817,4.339,818,1.823,823,4.882,831,3.058,840,2.242,841,2.242,842,3.387,843,2.242,844,3.644,845,2.242,846,2.242,847,2.242,848,2.242,849,2.242,850,2.242,851,2.242,852,2.242,853,3.387,854,3.387,855,5.566,856,2.242,857,3.937,858,3.937,859,3.387,860,5.286,861,3.71,862,2.606,863,2.606,864,2.606,865,2.606,866,2.606,867,2.606,868,3.937,869,2.606,870,2.606,871,2.606,872,2.606,873,2.606,874,2.606,875,2.606,876,2.606,877,2.606,878,2.606,879,2.606,880,2.606,881,2.002,882,2.242,883,2.002,884,1.68,885,2.002,886,2.606,887,2.606,888,2.002]],["title/components/DialogEditChannelComponent.html",[0,0.122,187,0.558]],["body/components/DialogEditChannelComponent.html",[0,0.182,1,0.369,2,0.597,3,0.107,4,0.107,5,0.41,6,0.41,7,0.41,8,0.093,9,2.417,12,0.725,14,0.83,17,0.369,18,1.202,19,1.265,20,0.924,22,0.597,23,0.65,24,0.629,31,2.265,32,1.825,33,1.079,34,0.629,36,0.629,38,0.067,39,0.206,40,1.426,41,1.649,42,2.613,43,1.039,44,2.045,46,1.648,47,1.404,48,0.32,49,2.561,51,2.892,52,0.345,53,1.149,54,2.322,56,1.432,57,0.488,59,0.419,60,0.019,61,0.416,62,0.342,63,0.36,65,2.265,67,1.76,68,0.567,69,3.064,70,3.238,72,0.747,73,0.575,74,0.575,80,1.472,90,2.007,94,0.409,95,2.561,97,0.149,102,1.032,103,0.733,108,0.887,109,0.579,110,1.291,111,1.216,112,0.369,113,0.813,115,0.553,116,0.607,117,0.107,118,0.107,119,0.769,122,1.472,126,1.501,129,1.291,130,0.932,131,1.863,133,1.888,134,1.291,135,1.472,136,1.375,137,1.216,138,1.216,160,2.633,161,2.633,166,3.238,167,0.41,168,0.629,169,0.597,170,0.33,171,0.813,172,0.41,173,0.629,174,0.369,175,0.41,176,0.369,177,0.41,178,0.389,179,0.629,180,0.369,181,0.389,182,0.41,183,0.369,184,0.41,185,0.687,186,0.41,187,0.77,188,1.226,189,0.369,190,0.629,191,0.369,192,0.369,193,0.41,194,0.369,195,0.565,196,0.41,197,0.349,198,0.369,199,0.369,200,0.629,201,0.369,202,0.764,203,0.369,204,0.41,205,0.369,206,0.41,207,0.369,208,0.629,209,0.629,210,0.369,211,0.369,212,0.41,213,0.369,214,0.41,215,0.369,216,0.876,217,0.369,218,0.41,219,0.369,220,0.41,221,0.369,222,0.41,223,0.369,224,0.369,225,0.389,226,0.41,227,0.369,228,0.293,229,0.41,230,0.389,231,0.41,232,0.41,233,0.369,234,0.41,235,0.41,236,0.389,237,0.629,238,0.41,239,0.369,240,0.41,241,0.369,242,0.389,243,0.41,244,0.369,245,0.41,246,0.369,247,0.546,248,0.389,249,0.41,250,0.389,251,0.349,252,0.389,253,0.41,254,0.009,255,0.009,282,0.844,293,1.7,321,2.254,323,3.939,328,2.426,329,1.978,330,2.107,332,2.404,342,1.149,346,2.153,366,1.584,384,0.931,394,1.209,542,3.587,631,1.472,635,1.719,817,4.414,820,2.426,831,1.584,855,1.888,889,5.662,890,2.114,891,4.576,892,3.765,893,3.765,894,4.576,895,3.936,896,5.529,897,5.529,898,3.443,899,3.515,900,4.576,901,4.576,902,5.128,903,5.128,904,5.128,905,5.128,906,3.765,907,5.128,908,5.128,909,5.128,910,4.576,911,5.128,912,3.765,913,2.458,914,2.458,915,2.458,916,2.458,917,3.765,918,2.458,919,2.458,920,2.458,921,2.458,922,2.458,923,2.458,924,2.458,925,4.576,926,3.765,927,2.458,928,2.458,929,2.458,930,2.458,931,2.458,932,2.458,933,2.458,934,2.458,935,2.458,936,2.458,937,2.458,938,1.888,939,2.458,940,2.458,941,2.458,942,2.458,943,2.458,944,1.584,945,4.576,946,4.576,947,3.765,948,3.765,949,2.458,950,1.888,951,2.458,952,2.458,953,2.458,954,2.458,955,2.458,956,2.458,957,2.458,958,3.765,959,2.458,960,2.458,961,2.458,962,2.458,963,3.515,964,2.458,965,2.458,966,2.458,967,2.458,968,2.458,969,2.458,970,2.458,971,1.719,972,2.114,973,2.458,974,2.458,975,2.458,976,2.458,977,2.458,978,5.128,979,3.939,980,4.411,981,3.765,982,3.765,983,3.765,984,3.238,985,3.765,986,3.765,987,3.238,988,3.765,989,3.238,990,3.765]],["title/components/DialogEditProfileComponent.html",[0,0.122,189,0.558]],["body/components/DialogEditProfileComponent.html",[0,0.156,1,0.39,2,0.623,3,0.113,4,0.113,5,0.434,6,0.434,7,0.434,8,0.149,12,0.751,14,0.329,17,0.39,18,1.208,19,1.271,20,0.837,22,0.623,23,0.847,24,0.656,31,2.345,32,1.889,33,1.117,34,0.656,36,0.656,38,0.071,39,0.215,40,1.398,43,1.04,44,2.106,46,1.805,47,1.425,48,0.334,49,2.814,52,0.36,53,1.216,54,2.38,57,0.486,59,0.519,60,0.019,61,0.46,62,0.342,63,0.446,68,0.566,72,0.63,73,0.668,74,0.715,90,1.993,94,0.385,95,2.651,97,0.157,102,1.092,108,1.419,109,0.613,112,0.39,113,0.623,115,0.585,116,0.643,117,0.113,118,0.113,119,1.157,126,2.378,129,1.366,130,0.986,131,1.945,160,2.748,161,2.748,167,0.434,168,0.656,169,0.623,170,0.349,171,0.837,172,0.434,173,0.656,174,0.39,175,0.434,176,0.39,177,0.434,178,0.412,179,0.656,180,0.39,181,0.412,182,0.434,183,0.39,184,0.434,185,0.39,186,0.434,187,0.39,188,1.225,189,0.793,190,0.656,191,0.39,192,0.39,193,0.434,194,0.39,195,0.59,196,0.434,197,0.37,198,0.39,199,0.98,200,0.656,201,0.39,202,0.791,203,0.39,204,0.434,205,0.39,206,0.434,207,0.39,208,0.656,209,0.656,210,0.39,211,0.39,212,0.434,213,0.39,214,0.434,215,0.39,216,0.895,217,0.39,218,0.434,219,0.39,220,0.434,221,0.39,222,0.434,223,0.39,224,0.39,225,0.412,226,0.434,227,0.39,228,0.31,229,0.434,230,0.412,231,0.434,232,0.434,233,0.39,234,0.434,235,0.434,236,0.412,237,0.656,238,0.434,239,0.39,240,0.434,241,0.39,242,0.412,243,0.434,244,0.39,245,0.434,246,0.39,247,0.469,248,0.412,249,0.434,250,0.412,251,0.37,252,0.412,253,0.434,254,0.009,255,0.009,282,0.669,293,1.731,341,2.978,346,2.217,354,2.51,357,1.366,382,1.366,394,1.245,423,4.075,426,4.075,429,5.325,436,3.38,441,2.489,451,3.38,454,5.89,455,3.38,456,3.38,457,3.38,458,3.38,459,3.38,460,3.38,467,2.152,480,2.237,481,3.38,482,2.237,485,3.38,487,2.237,489,1.676,514,3.019,517,3.38,679,1.819,744,2.353,745,2.353,746,2.533,820,2.533,884,4.732,979,3.019,980,3.38,991,5.64,992,1.997,993,3.38,994,4.737,995,3.38,996,3.38,997,4.737,998,4.755,999,4.737,1000,3.93,1001,3.93,1002,3.93,1003,5.279,1004,5.279,1005,5.279,1006,5.279,1007,5.279,1008,3.38,1009,3.93,1010,2.6,1011,3.93,1012,2.6,1013,4.541,1014,3.93,1015,2.6,1016,2.6,1017,2.6,1018,2.6,1019,2.237,1020,2.6,1021,2.6,1022,2.6,1023,2.6,1024,2.6,1025,2.237,1026,4.737,1027,4.876,1028,5.279,1029,3.38,1030,4.737,1031,3.93,1032,2.6,1033,2.237,1034,2.237,1035,3.38,1036,2.6,1037,2.6,1038,2.237,1039,2.6,1040,2.6,1041,2.6,1042,2.237,1043,2.6,1044,2.6,1045,4.737,1046,3.38,1047,2.6,1048,2.6,1049,2.6,1050,2.6,1051,4.737,1052,2.6,1053,5.669,1054,3.93,1055,2.6,1056,2.6,1057,2.6,1058,2.6,1059,3.93,1060,2.6,1061,2.6,1062,2.6,1063,2.6,1064,2.6,1065,3.38,1066,2.6,1067,3.38,1068,3.019,1069,3.93,1070,3.93]],["title/components/DialogEmojiPickerComponent.html",[0,0.122,191,0.558]],["body/components/DialogEmojiPickerComponent.html",[0,0.2,1,0.612,2,0.857,3,0.177,4,0.177,5,0.681,6,0.681,7,0.681,8,0.154,9,2.12,12,0.962,14,0.516,17,0.612,18,1.242,19,1.309,20,1.025,22,0.857,23,0.769,24,0.904,31,3.005,34,0.904,36,0.904,38,0.111,39,0.296,40,1.104,43,1.123,44,2.58,48,0.46,52,0.373,53,1.906,54,2.826,57,0.403,59,0.495,60,0.018,61,0.447,62,0.297,63,0.426,68,0.347,72,0.486,94,0.367,97,0.246,102,1.711,112,0.612,113,0.857,117,0.177,118,0.177,119,0.832,167,0.681,168,0.904,169,0.857,170,0.547,171,1.025,172,0.681,173,0.904,174,0.612,175,0.681,176,0.612,177,0.681,178,0.646,179,0.904,180,0.612,181,0.646,182,0.681,183,0.612,184,0.681,185,0.612,186,0.681,187,0.612,188,0.857,189,0.612,190,0.904,191,0.971,192,1.142,193,0.681,194,0.612,195,0.812,196,0.681,197,0.579,198,0.612,199,0.612,200,0.904,201,0.612,202,1.014,203,0.612,204,0.681,205,0.612,206,0.681,207,0.612,208,0.904,209,0.904,210,0.612,211,0.612,212,0.681,213,0.612,214,0.681,215,0.612,216,1.039,217,0.612,218,0.681,219,0.612,220,0.681,221,0.612,222,0.681,223,0.612,224,0.612,225,0.646,226,0.681,227,0.612,228,0.486,229,0.681,230,0.646,231,0.681,232,0.681,233,0.612,234,0.681,235,0.681,236,0.646,237,0.904,238,0.681,239,0.612,240,0.681,241,0.612,242,0.646,243,0.681,244,0.612,245,0.681,246,0.612,247,0.486,248,0.646,249,0.681,250,0.646,251,0.579,252,0.646,253,0.681,254,0.013,255,0.013,357,2.141,792,2.627,817,3.873,1071,4.968,1072,3.506,1073,4.653,1074,6.072,1075,5.41,1076,5.41,1077,5.41,1078,4.076,1079,5.41,1080,4.076,1081,4.076,1082,3.506,1083,3.506,1084,4.076,1085,4.076]],["title/interfaces/DialogParams.html",[519,1.739,784,2.601]],["body/interfaces/DialogParams.html",[0,0.216,3,0.182,4,0.182,8,0.159,38,0.115,39,0.302,40,0.859,42,1.678,43,1.048,44,1.678,54,2.59,55,4.244,60,0.019,62,0.342,63,0.515,65,3.614,67,3.18,72,0.502,73,0.472,94,0.373,97,0.254,102,1.767,117,0.182,118,0.182,119,0.859,134,3.902,135,4.539,136,4.183,137,3.614,138,3.242,254,0.013,255,0.013,282,0.782,319,3.308,335,1.596,394,1.722,414,3.836,493,4.738,519,1.967,520,2.712,522,1.184,616,1.678,759,3.232,760,3.232,764,3.232,770,3.619,772,6.339,773,3.619,776,3.619,778,4.752,780,3.619,781,5.851,784,3.864,786,3.619,787,6.21,790,3.56,791,3.619,792,2.712,793,3.619,794,3.619,795,5.225,796,3.619,797,3.619,798,3.619,799,4.752,800,3.619,801,3.619,802,3.619,803,3.619,804,3.619,805,3.619,806,4.752,807,5.634,808,3.619,809,3.619,810,4.752,811,5.851,812,4.752,813,6.12,814,3.619,815,3.619,816,3.232]],["title/components/DialogShowMembersComponent.html",[0,0.122,194,0.558]],["body/components/DialogShowMembersComponent.html",[0,0.196,1,0.506,2,0.752,3,0.146,4,0.146,5,0.562,6,0.562,7,0.562,8,0.128,9,2.284,12,0.871,14,0.756,17,0.506,18,1.229,19,1.294,20,1.035,22,0.752,23,0.675,24,0.793,31,2.721,32,2.193,33,1.296,34,0.793,36,0.793,38,0.172,39,0.259,40,1.472,41,1.877,42,2.816,43,1.099,44,2.381,47,1.513,48,0.404,51,4.586,52,0.435,53,1.575,54,2.643,56,1.631,57,0.455,59,0.308,60,0.019,61,0.396,62,0.32,63,0.265,67,1.575,68,0.404,72,0.656,73,0.378,74,0.378,81,2.494,94,0.427,97,0.204,102,1.414,103,1.004,104,1.575,108,1.216,109,0.794,110,1.769,111,1.667,112,0.506,113,0.946,115,0.757,117,0.146,118,0.146,119,0.688,131,2.35,138,1.667,139,2.897,167,0.562,168,0.793,169,0.752,170,0.452,171,0.946,172,0.562,173,0.793,174,0.506,175,0.562,176,0.506,177,0.562,178,0.534,179,0.793,180,0.506,181,0.534,182,0.562,183,0.826,184,0.562,185,0.506,186,0.562,187,0.506,188,0.752,189,0.506,190,0.793,191,0.506,192,0.506,193,0.562,194,0.897,195,1.146,196,0.562,197,0.479,198,0.506,199,0.506,200,0.793,201,0.506,202,0.918,203,0.506,204,0.562,205,0.506,206,0.562,207,0.506,208,0.793,209,0.793,210,0.506,211,0.506,212,0.562,213,0.506,214,0.562,215,0.506,216,0.981,217,0.506,218,0.562,219,0.506,220,0.562,221,0.506,222,0.562,223,0.506,224,0.506,225,0.534,226,0.562,227,0.506,228,0.402,229,0.562,230,0.534,231,0.562,232,0.562,233,0.506,234,0.562,235,0.562,236,0.534,237,0.793,238,0.562,239,0.506,240,0.562,241,0.506,242,0.534,243,0.562,244,0.506,245,0.562,246,0.506,247,0.402,248,0.534,249,0.562,250,0.534,251,0.848,252,0.534,253,0.562,254,0.011,255,0.011,300,2.355,301,2.355,321,2.843,323,4.586,329,2.494,414,1.769,525,3.845,817,4.172,818,2.355,831,3.059,859,5.135,882,2.897,1086,5.993,1087,2.897,1088,4.747,1089,4.747,1090,4.747,1091,3.367,1092,3.367,1093,3.367,1094,3.367,1095,3.367,1096,3.367,1097,3.367,1098,3.367,1099,2.355,1100,3.367,1101,4.747,1102,4.747,1103,4.747,1104,4.747,1105,6.53,1106,5.97,1107,3.32,1108,3.059]],["title/components/DialogShowProfileComponent.html",[0,0.122,197,0.529]],["body/components/DialogShowProfileComponent.html",[0,0.193,1,0.424,2,0.662,3,0.122,4,0.122,5,0.471,6,0.471,7,0.471,8,0.107,12,0.788,14,0.779,17,0.424,18,1.215,19,1.279,20,0.871,22,0.662,23,0.593,24,0.697,31,2.461,33,1.172,34,0.697,36,0.697,38,0.077,39,0.228,40,1.422,41,1.75,42,2.536,43,1.057,44,2.192,46,1.727,47,1.454,48,0.355,49,2.451,52,0.382,53,1.319,54,2.464,56,1.52,57,0.467,59,0.503,60,0.019,61,0.443,62,0.332,63,0.433,65,2.461,67,1.319,68,0.523,69,2.194,72,0.7,73,0.468,74,0.468,75,1.584,76,2.5,77,1.753,79,2.5,80,2.5,81,2.194,82,2.5,83,2.5,94,0.426,95,2.783,97,0.171,102,1.184,103,0.841,104,1.319,105,1.482,106,1.578,107,1.578,109,0.665,110,1.482,111,1.396,112,0.424,113,0.662,115,0.634,116,0.697,117,0.122,118,0.122,119,0.853,126,1.665,130,1.584,131,2.067,134,1.482,135,1.689,136,1.578,138,1.396,167,0.471,168,0.697,169,0.662,170,0.379,171,0.871,172,0.471,173,0.697,174,0.424,175,0.471,176,0.424,177,0.471,178,0.447,179,0.697,180,0.424,181,0.447,182,0.471,183,0.424,184,0.471,185,0.424,186,0.471,187,0.424,188,0.871,189,0.747,190,0.697,191,0.424,192,0.424,193,0.471,194,0.424,195,1.149,196,0.471,197,0.781,198,0.424,199,0.424,200,0.697,201,0.424,202,0.83,203,0.424,204,0.471,205,0.424,206,0.471,207,0.424,208,0.697,209,0.697,210,0.424,211,0.424,212,0.471,213,0.424,214,0.471,215,0.424,216,0.923,217,0.424,218,0.471,219,0.424,220,0.471,221,0.424,222,0.471,223,0.424,224,0.424,225,0.447,226,0.471,227,0.424,228,0.336,229,0.471,230,0.447,231,0.471,232,0.471,233,0.424,234,0.471,235,0.471,236,0.447,237,0.697,238,0.471,239,0.424,240,0.471,241,0.424,242,0.447,243,0.471,244,0.424,245,0.471,246,0.424,247,0.759,248,0.447,249,0.471,250,0.447,251,0.401,252,0.447,253,0.471,254,0.01,255,0.01,282,0.779,293,1.134,297,1.319,342,1.953,346,2.308,384,1.229,387,3.592,394,0.985,414,1.482,467,1.795,560,3.284,565,1.689,585,3.076,625,2.691,744,2.5,745,2.5,746,2.691,790,3.543,820,2.691,861,3.808,881,2.166,883,2.166,884,4.613,885,2.166,888,2.166,950,2.166,979,3.208,991,5.455,992,2.166,993,3.592,995,3.592,996,3.592,1008,2.426,1019,2.426,1025,2.426,1033,2.426,1034,2.426,1038,2.426,1068,3.208,1099,1.972,1109,4.277,1110,3.173,1111,3.543,1112,3.592,1113,4.176,1114,5.993,1115,3.592,1116,2.82,1117,3.592,1118,2.82,1119,4.176,1120,2.82,1121,2.82,1122,3.592,1123,2.82,1124,3.82,1125,3.592,1126,2.82,1127,2.82,1128,1.578,1129,2.82,1130,2.426,1131,2.82,1132,3.592,1133,2.426,1134,2.82,1135,1.972,1136,2.426,1137,3.592,1138,2.426,1139,2.166,1140,2.426,1141,2.426,1142,2.426,1143,2.426,1144,1.818,1145,1.689,1146,4.176,1147,4.176,1148,3.592,1149,4.176,1150,4.176,1151,4.176,1152,3.592,1153,4.176,1154,3.592]],["title/components/EmailSnackbarComponent.html",[0,0.122,198,0.558]],["body/components/EmailSnackbarComponent.html",[0,0.206,1,0.653,2,0.894,3,0.188,4,0.188,5,0.726,6,0.726,7,0.726,8,0.165,12,0.993,14,0.551,17,0.653,18,1.246,19,1.313,20,1.051,22,0.894,23,0.802,24,0.726,34,0.943,36,0.943,38,0.119,39,0.308,43,1.077,57,0.289,60,0.018,61,0.416,73,0.487,74,0.487,94,0.341,97,0.263,112,0.653,113,0.894,117,0.188,118,0.188,167,0.726,168,0.943,169,0.894,170,0.584,171,1.051,172,0.726,173,0.943,174,0.653,175,0.726,176,0.653,177,0.726,178,0.689,179,0.943,180,0.653,181,0.689,182,0.726,183,0.653,184,0.726,185,0.653,186,0.726,187,0.653,188,0.894,189,0.653,190,0.943,191,0.653,192,0.653,193,0.726,194,0.653,195,0.848,196,0.726,197,0.618,198,0.996,199,1.077,200,0.943,201,0.653,202,1.047,203,0.653,204,0.726,205,0.653,206,0.726,207,0.653,208,0.943,209,0.943,210,0.653,211,0.653,212,0.726,213,0.653,214,0.726,215,0.653,216,1.058,217,0.653,218,0.726,219,0.653,220,0.726,221,0.653,222,0.726,223,0.653,224,0.653,225,0.689,226,0.726,227,0.653,228,0.519,229,0.726,230,0.689,231,0.726,232,0.726,233,0.653,234,0.726,235,0.726,236,0.689,237,0.943,238,0.726,239,0.653,240,0.726,241,0.653,242,0.689,243,0.726,244,0.653,245,0.726,246,0.653,247,0.519,248,0.689,249,1.047,250,0.689,251,0.618,252,0.689,253,0.726,254,0.013,255,0.013,378,3.947,380,2.433,381,2.284,603,2.152,744,3.38,745,3.38,1155,4.855,1156,3.041,1157,4.335,1158,4.335,1159,4.814,1160,4.335,1161,3.34,1162,3.34,1163,5.644]],["title/components/HeaderComponent.html",[0,0.122,201,0.558]],["body/components/HeaderComponent.html",[0,0.202,1,0.626,2,0.87,3,0.181,4,0.181,5,0.697,6,0.697,7,0.697,8,0.158,12,0.973,14,0.528,17,0.626,18,1.244,19,1.31,20,1.034,22,0.87,23,0.781,24,0.917,33,1.448,34,0.917,36,0.917,38,0.114,39,0.3,43,1.066,46,1.891,48,0.467,52,0.503,57,0.408,59,0.382,60,0.019,61,0.433,62,0.204,63,0.328,68,0.355,72,0.498,73,0.468,74,0.468,90,1.717,94,0.371,97,0.252,112,0.626,113,0.87,115,0.938,116,1.031,117,0.181,118,0.181,167,0.697,168,0.917,169,0.87,170,0.56,171,1.034,172,0.697,173,0.917,174,0.626,175,0.697,176,0.626,177,0.697,178,0.661,179,0.917,180,0.626,181,0.661,182,0.697,183,0.626,184,0.697,185,0.626,186,0.697,187,0.626,188,0.87,189,0.626,190,0.917,191,0.626,192,0.626,193,0.697,194,0.626,195,0.825,196,0.697,197,0.593,198,0.626,199,0.626,200,0.917,201,0.98,202,1.026,203,0.626,204,0.697,205,0.626,206,0.697,207,0.626,208,1.026,209,0.917,210,0.626,211,0.626,212,0.697,213,0.626,214,0.697,215,0.626,216,1.046,217,0.626,218,0.697,219,0.626,220,0.697,221,0.626,222,0.697,223,0.626,224,0.626,225,0.661,226,0.697,227,0.626,228,0.498,229,0.697,230,0.661,231,0.697,232,0.697,233,0.626,234,0.697,235,0.697,236,0.661,237,0.917,238,0.697,239,0.626,240,0.697,241,0.626,242,0.661,243,0.697,244,0.626,245,0.697,246,0.626,247,0.498,248,0.661,249,0.697,250,0.661,251,0.593,252,0.661,253,0.697,254,0.013,255,0.013,351,1.95,357,2.191,370,3.289,375,2.191,384,1.031,400,2.064,433,5.014,479,3.204,1164,3.588,1165,4.219,1166,4.219,1167,4.219,1168,5.283,1169,5.492,1170,4.171,1171,4.725,1172,3.588,1173,3.588,1174,3.588,1175,3.588]],["title/components/ImprintComponent.html",[0,0.122,203,0.558]],["body/components/ImprintComponent.html",[0,0.202,1,0.624,2,0.868,3,0.18,4,0.18,5,0.694,6,0.694,7,0.694,8,0.157,12,0.971,14,0.526,17,0.624,18,1.244,19,1.31,20,1.033,22,0.868,23,0.779,24,0.915,33,1.445,34,0.915,36,0.915,38,0.113,43,1.065,46,1.889,48,0.466,52,0.38,57,0.364,59,0.38,60,0.018,61,0.433,62,0.203,63,0.327,68,0.353,72,0.496,94,0.394,97,0.251,112,0.624,113,0.868,115,0.934,116,1.027,117,0.18,118,0.18,167,0.694,168,0.915,169,0.868,170,0.558,171,1.033,172,0.694,173,0.915,174,0.624,175,0.694,176,0.624,177,0.694,178,0.658,179,0.915,180,0.624,181,0.658,182,0.694,183,0.624,184,0.694,185,0.624,186,0.694,187,0.624,188,0.868,189,0.624,190,0.915,191,0.624,192,0.624,193,0.694,194,0.624,195,0.823,196,0.694,197,0.59,198,0.624,199,0.921,200,0.915,201,0.979,202,1.024,203,0.979,204,0.694,205,0.624,206,0.694,207,0.624,208,0.915,209,0.915,210,0.624,211,0.624,212,0.694,213,0.624,214,0.694,215,0.624,216,1.045,217,0.624,218,0.694,219,0.624,220,0.694,221,0.624,222,0.694,223,0.624,224,0.624,225,0.658,226,0.694,227,0.624,228,0.496,229,0.694,230,0.658,231,0.694,232,0.694,233,0.624,234,0.694,235,0.694,236,0.658,237,0.915,238,0.694,239,0.624,240,0.694,241,0.624,242,0.658,243,0.694,244,0.624,245,0.694,246,0.624,247,0.496,248,0.658,249,0.694,250,0.658,251,0.59,252,0.658,253,0.694,254,0.013,255,0.013,351,1.943,375,2.183,383,2.056,400,2.056,1176,3.574,1177,5.478,1178,5.478,1179,5.478,1180,6.517,1181,4.154,1182,4.154,1183,4.154,1184,4.713,1185,5.478,1186,5.478,1187,5.478,1188,5.478,1189,5.478,1190,5.478,1191,5.478,1192,5.478,1193,5.478,1194,5.478,1195,4.713,1196,5.478,1197,4.208,1198,5.478]],["title/components/LogOutDialogComponent.html",[0,0.122,211,0.558]],["body/components/LogOutDialogComponent.html",[0,0.189,1,0.55,2,0.798,3,0.159,4,0.159,5,0.612,6,0.612,7,0.612,8,0.139,9,2.252,10,3.212,12,0.911,14,0.464,17,0.55,18,1.235,19,1.301,20,0.981,22,0.798,23,0.715,24,0.841,33,1.356,34,0.841,36,0.841,38,0.1,39,0.275,40,1.369,43,1.066,44,2.469,46,1.865,47,1.539,48,0.428,52,0.461,53,1.713,54,2.725,57,0.445,59,0.335,60,0.019,61,0.411,62,0.281,63,0.288,68,0.489,72,0.686,90,1.145,94,0.415,97,0.221,102,1.538,109,0.864,112,0.55,113,0.798,115,0.824,116,0.905,117,0.159,118,0.159,130,1.389,131,2.491,167,0.612,168,0.841,169,0.798,170,0.492,171,0.981,172,0.612,173,0.841,174,0.55,175,0.612,176,0.55,177,0.612,178,0.58,179,0.841,180,0.55,181,0.58,182,0.612,183,0.55,184,0.612,185,0.55,186,0.612,187,0.55,188,0.798,189,0.55,190,0.841,191,0.55,192,0.55,193,0.612,194,0.55,195,0.756,196,0.612,197,0.521,198,0.55,199,0.55,200,0.841,201,0.55,202,0.96,203,0.55,204,0.612,205,0.55,206,0.612,207,0.55,208,0.841,209,0.841,210,0.55,211,0.93,212,1.147,213,1.143,214,0.612,215,0.55,216,1.007,217,0.55,218,0.612,219,0.55,220,0.612,221,0.55,222,0.612,223,0.55,224,0.55,225,0.58,226,0.612,227,0.55,228,0.437,229,0.612,230,0.58,231,0.612,232,0.612,233,0.55,234,0.612,235,0.612,236,0.58,237,0.841,238,0.612,239,0.55,240,0.612,241,0.55,242,0.58,243,0.612,244,0.55,245,0.612,246,0.55,247,0.437,248,0.58,249,0.612,250,0.58,251,0.88,252,0.58,253,0.612,254,0.012,255,0.012,293,0.995,300,2.562,301,2.562,319,2.193,341,3.021,354,2.741,382,1.924,384,1.244,394,0.864,400,1.813,764,4.756,1068,3.866,1152,5.326,1199,5.908,1200,5.276,1201,3.151,1202,5.033,1203,5.033,1204,4.946,1205,6.191,1206,3.663,1207,3.663,1208,3.663,1209,3.663,1210,3.663,1211,3.663,1212,3.151,1213,3.151,1214,6.191,1215,6.191,1216,6.191]],["title/components/LoginComponent.html",[0,0.122,205,0.558]],["body/components/LoginComponent.html",[0,0.158,1,0.399,2,0.633,3,0.115,4,0.115,5,0.444,6,0.444,7,0.444,8,0.101,12,0.761,14,0.337,17,0.399,18,1.21,19,1.273,20,0.846,22,0.633,23,0.912,24,0.667,32,1.915,33,1.132,34,0.667,36,0.667,38,0.072,39,0.218,40,0.98,41,1.432,43,0.937,46,1.693,47,1.337,48,0.34,49,2.618,52,0.243,56,1.383,57,0.483,59,0.489,60,0.019,61,0.462,62,0.327,63,0.42,68,0.569,72,0.683,73,0.699,74,0.699,75,2.28,90,2.091,94,0.411,97,0.161,103,0.793,108,0.96,109,0.627,112,0.399,113,0.633,115,0.598,116,0.657,117,0.115,118,0.115,126,2.283,129,1.397,130,1.008,157,3.069,162,2.575,167,0.444,168,0.667,169,0.633,170,0.357,171,0.846,172,0.444,173,0.667,174,0.399,175,0.444,176,0.399,177,0.444,178,0.421,179,0.667,180,0.399,181,0.421,182,0.444,183,0.399,184,0.444,185,0.399,186,0.444,187,0.399,188,0.633,189,0.399,190,0.667,191,0.399,192,0.399,193,0.444,194,0.399,195,0.6,196,0.444,197,0.378,198,0.399,199,0.937,200,0.667,201,0.399,202,0.802,203,0.399,204,0.444,205,0.802,206,0.444,207,0.399,208,1.117,209,0.667,210,0.399,211,0.399,212,0.444,213,0.399,214,0.444,215,0.399,216,0.903,217,0.399,218,0.444,219,0.399,220,0.444,221,0.399,222,0.444,223,0.399,224,0.399,225,0.421,226,0.444,227,0.399,228,0.317,229,0.444,230,0.421,231,0.444,232,0.444,233,0.802,234,0.667,235,0.444,236,0.421,237,0.667,238,0.444,239,0.399,240,0.444,241,0.399,242,0.421,243,0.444,244,0.399,245,0.444,246,0.399,247,0.637,248,0.421,249,0.444,250,0.421,251,0.378,252,0.421,253,0.444,254,0.009,255,0.009,282,0.872,293,1.693,330,1.488,341,2.099,346,2.241,354,2.363,381,1.397,382,1.397,383,1.316,384,1.187,393,3.6,394,1.259,404,1.859,407,2.042,408,2.042,418,4.086,437,4.003,438,3.689,489,2.575,511,2.575,527,3.6,598,2.392,603,1.316,613,1.488,654,1.859,710,1.859,723,3.094,739,4.592,740,3.734,744,3.197,745,3.197,746,3.441,747,3.069,748,2.794,749,3.069,750,3.069,751,3.437,755,4.101,1046,3.437,1108,2.575,1213,2.287,1217,2.287,1218,4.8,1219,2.687,1220,4.8,1221,3.995,1222,3.995,1223,4.8,1224,5.723,1225,5.338,1226,4.8,1227,3.357,1228,3.995,1229,3.995,1230,3.995,1231,5.338,1232,4.592,1233,5.338,1234,5.338,1235,5.338,1236,2.658,1237,3.995,1238,3.995,1239,2.658,1240,3.437,1241,3.995,1242,2.658,1243,5.172,1244,4.592,1245,4.592,1246,4.592,1247,4.592,1248,4.129,1249,3.995,1250,3.437,1251,3.995,1252,2.658,1253,2.658,1254,2.658,1255,2.658,1256,2.658,1257,2.658,1258,2.658,1259,2.658,1260,2.658,1261,2.658,1262,4.129,1263,2.658,1264,2.658,1265,2.658,1266,2.658,1267,2.658,1268,1.859,1269,2.287,1270,2.658,1271,2.658,1272,5.723,1273,2.658,1274,2.658,1275,2.658,1276,4.8,1277,2.658,1278,2.658,1279,2.287,1280,2.658,1281,2.658,1282,3.995,1283,3.995,1284,2.658,1285,2.658,1286,3.995,1287,2.658,1288,2.658,1289,2.658,1290,2.658,1291,2.658,1292,2.658,1293,2.287,1294,2.287,1295,2.287,1296,2.287,1297,2.287,1298,2.287,1299,2.287,1300,2.287,1301,2.287,1302,2.658,1303,2.658,1304,2.658,1305,2.658,1306,3.995,1307,3.995,1308,3.995,1309,3.069,1310,3.995,1311,3.437,1312,3.995,1313,3.995,1314,3.995,1315,3.995,1316,3.995,1317,3.995,1318,3.995,1319,3.437,1320,4.592,1321,3.995,1322,3.995]],["title/components/LoginPageComponent.html",[0,0.122,207,0.558]],["body/components/LoginPageComponent.html",[0,0.185,1,0.526,2,0.773,3,0.152,4,0.152,5,0.585,6,0.585,7,0.585,8,0.133,12,0.89,14,0.444,17,0.526,18,1.232,19,1.298,20,0.962,22,0.773,23,0.693,24,0.815,33,1.324,34,0.815,36,0.815,38,0.095,39,0.267,40,1.146,43,1.019,46,1.795,48,0.415,52,0.321,57,0.46,59,0.321,60,0.019,61,0.403,62,0.275,63,0.276,68,0.478,72,0.762,73,0.63,74,0.63,90,1.899,94,0.418,97,0.212,112,0.526,113,0.773,115,0.787,116,0.866,117,0.152,118,0.152,130,1.85,140,3.412,167,0.585,168,0.815,169,0.773,170,0.47,171,0.962,172,0.585,173,0.815,174,0.526,175,0.585,176,0.912,177,0.585,178,0.555,179,0.815,180,0.526,181,0.555,182,0.585,183,0.526,184,0.585,185,0.526,186,0.585,187,0.526,188,0.773,189,0.526,190,0.815,191,0.526,192,0.526,193,0.585,194,0.526,195,0.733,196,0.585,197,0.498,198,0.526,199,0.526,200,0.815,201,0.526,202,0.938,203,0.526,204,0.585,205,0.912,206,0.585,207,0.912,208,1.201,209,0.815,210,0.526,211,0.526,212,0.585,213,0.526,214,0.585,215,0.526,216,0.993,217,0.526,218,0.585,219,0.526,220,0.585,221,0.526,222,0.585,223,0.526,224,0.526,225,0.555,226,0.585,227,0.526,228,0.418,229,0.585,230,0.555,231,0.585,232,0.585,233,0.912,234,0.938,235,0.585,236,0.555,237,0.815,238,0.585,239,0.526,240,0.585,241,0.912,242,0.773,243,0.585,244,0.526,245,0.585,246,0.526,247,0.418,248,0.555,249,0.585,250,0.555,251,0.498,252,0.555,253,0.585,254,0.012,255,0.012,282,0.618,341,2.95,346,2.55,351,1.637,354,2.689,357,2.563,370,3.637,375,3.779,382,1.84,383,1.733,384,0.866,399,3.012,400,1.733,418,3.934,433,4.665,437,4.466,438,4.116,479,2.69,591,2.097,643,2.449,1168,4.83,1171,4.83,1172,4.197,1173,4.197,1174,3.012,1175,4.83,1184,4.197,1212,3.012,1219,3.142,1227,3.927,1268,2.449,1269,3.012,1311,4.197,1323,2.69,1324,4.197,1325,4.197,1326,5.615,1327,6.073,1328,4.879,1329,3.502,1330,3.502,1331,3.502,1332,3.502,1333,3.502,1334,3.502,1335,3.012,1336,2.69,1337,3.502,1338,3.502,1339,3.502,1340,3.502,1341,3.502,1342,3.502,1343,3.502,1344,3.502,1345,4.197,1346,3.012,1347,3.502,1348,3.502,1349,2.69,1350,3.502,1351,4.879,1352,3.748,1353,4.879]],["title/components/LoginSnackbarComponent.html",[0,0.122,210,0.558]],["body/components/LoginSnackbarComponent.html",[0,0.207,1,0.656,2,0.897,3,0.189,4,0.189,5,0.729,6,0.729,7,0.729,8,0.165,12,0.995,14,0.553,17,0.656,18,1.247,19,1.313,20,1.053,22,0.897,23,0.804,24,0.729,34,0.945,36,0.945,38,0.119,39,0.309,43,1.078,57,0.29,60,0.018,61,0.417,73,0.489,74,0.489,94,0.342,97,0.264,112,0.656,113,0.897,117,0.189,118,0.189,167,0.729,168,0.945,169,0.897,170,0.586,171,1.053,172,0.729,173,0.945,174,0.656,175,0.729,176,0.656,177,0.729,178,0.692,179,0.945,180,0.656,181,0.692,182,0.729,183,0.656,184,0.729,185,0.656,186,0.729,187,0.656,188,0.897,189,0.656,190,0.945,191,0.656,192,0.656,193,0.729,194,0.656,195,0.85,196,0.729,197,0.62,198,0.656,199,0.656,200,0.945,201,0.656,202,1.049,203,0.656,204,0.729,205,0.656,206,0.729,207,0.656,208,1.215,209,0.945,210,0.998,211,0.656,212,0.729,213,0.656,214,0.729,215,0.656,216,1.059,217,0.656,218,0.729,219,0.656,220,0.729,221,0.656,222,0.729,223,0.656,224,0.656,225,0.692,226,0.729,227,0.656,228,0.521,229,0.729,230,0.692,231,0.729,232,0.729,233,0.656,234,0.729,235,0.729,236,0.692,237,0.945,238,0.729,239,0.656,240,0.729,241,0.656,242,0.692,243,0.729,244,0.656,245,0.729,246,0.656,247,0.521,248,0.692,249,1.049,250,0.692,251,0.62,252,0.692,253,0.729,254,0.013,255,0.013,380,2.443,381,2.294,603,2.161,1156,3.053,1157,4.347,1158,4.347,1159,4.823,1160,4.347,1161,3.353,1162,3.353,1320,4.868,1354,4.868,1355,4.347]],["title/components/MainHeaderComponent.html",[0,0.122,215,0.558]],["body/components/MainHeaderComponent.html",[0,0.203,1,0.48,2,0.725,3,0.139,4,0.139,5,0.534,6,0.534,7,0.534,8,0.121,9,2.394,10,3.415,11,1.583,12,0.847,14,0.405,17,0.48,18,1.225,19,1.29,20,0.924,22,0.725,23,0.829,24,0.764,25,3.199,33,1.26,34,0.764,36,0.764,38,0.087,39,0.25,40,1.491,41,1.84,42,2.561,43,0.993,47,1.497,48,0.389,52,0.419,56,1.599,57,0.482,59,0.419,60,0.019,61,0.41,62,0.342,63,0.36,65,2.645,67,1.495,68,0.525,72,0.736,73,0.599,74,0.599,94,0.432,97,0.193,98,1.915,103,0.954,109,0.754,110,1.68,111,1.583,112,0.48,113,0.725,115,0.719,117,0.139,118,0.139,119,1.091,134,1.68,136,1.789,137,1.583,138,1.583,167,0.534,168,0.764,169,0.725,170,0.429,171,0.924,172,0.534,173,0.764,174,0.48,175,0.534,176,0.48,177,0.534,178,0.507,179,0.764,180,0.48,181,0.507,182,0.534,183,0.48,184,0.534,185,0.48,186,0.534,187,0.48,188,0.725,189,0.48,190,0.764,191,0.48,192,0.48,193,0.534,194,0.48,195,0.876,196,0.534,197,0.454,198,0.48,199,0.48,200,0.764,201,0.48,202,0.892,203,0.48,204,0.534,205,0.48,206,0.534,207,0.48,208,0.764,209,0.764,210,0.48,211,0.802,212,0.764,213,0.802,214,0.534,215,0.876,216,1.09,217,0.48,218,0.534,219,0.876,220,0.534,221,0.48,222,0.534,223,0.48,224,0.964,225,0.507,226,0.534,227,0.48,228,0.381,229,0.534,230,0.507,231,0.534,232,0.534,233,0.48,234,0.534,235,0.534,236,0.924,237,0.892,238,0.534,239,0.48,240,0.534,241,0.48,242,0.507,243,0.534,244,0.48,245,0.534,246,0.48,247,0.381,248,0.507,249,0.534,250,0.507,251,0.454,252,0.507,253,0.534,254,0.011,255,0.011,266,3.265,282,0.405,293,1.242,302,1.789,370,2.74,376,1.915,384,1.321,414,1.68,453,3.936,1099,2.236,1107,3.2,1110,3.265,1128,1.789,1145,1.915,1165,3.515,1166,3.515,1167,3.515,1200,2.456,1356,4.707,1357,2.456,1358,5.343,1359,4.104,1360,4.316,1361,5.343,1362,5.017,1363,5.832,1364,5.832,1365,4.575,1366,5.832,1367,2.75,1368,5.343,1369,5.017,1370,5.343,1371,4.079,1372,4.575,1373,3.197,1374,3.197,1375,3.197,1376,4.575,1377,3.197,1378,3.197,1379,3.197,1380,3.197,1381,3.197,1382,4.575,1383,2.75,1384,3.197,1385,3.197,1386,3.197,1387,2.456,1388,2.75,1389,3.197,1390,2.456,1391,3.197,1392,3.197,1393,3.197,1394,4.575,1395,4.575,1396,3.197,1397,2.75,1398,3.197,1399,2.75,1400,3.197,1401,3.936]],["title/components/MainMenuChannelsComponent.html",[0,0.122,217,0.558]],["body/components/MainMenuChannelsComponent.html",[0,0.187,1,0.78,2,0.699,3,0.132,4,0.132,5,0.508,6,0.508,7,0.508,8,0.115,9,2.375,10,3.388,11,3.587,12,1.223,14,0.767,15,2.126,17,0.456,18,1.221,19,1.286,20,0.959,22,0.699,23,0.81,24,0.737,25,3.109,33,1.224,34,0.737,36,0.737,38,0.083,39,0.241,40,1.522,41,1.804,42,2.517,43,0.978,46,1.875,47,1.48,48,0.375,52,0.404,56,1.567,57,0.478,59,0.404,60,0.019,61,0.402,62,0.342,63,0.347,68,0.485,72,0.753,73,0.495,74,0.495,94,0.435,97,0.184,98,1.82,103,0.906,109,0.717,110,1.597,111,1.504,112,0.456,113,0.699,114,2.614,115,0.683,116,0.751,117,0.132,118,0.132,119,0.621,122,3.411,125,1.421,141,3.672,167,0.508,168,0.737,169,0.699,170,0.408,171,0.903,172,0.508,173,0.737,174,0.456,175,0.508,176,0.456,177,0.508,178,0.482,179,0.737,180,0.456,181,0.482,182,0.508,183,0.456,184,0.508,185,0.456,186,0.508,187,0.456,188,0.699,189,0.456,190,0.737,191,0.456,192,0.456,193,0.508,194,0.456,195,0.662,196,0.508,197,0.432,198,0.456,199,0.456,200,0.737,201,0.456,202,0.867,203,0.456,204,0.508,205,0.456,206,0.508,207,0.456,208,0.737,209,0.737,210,0.456,211,0.456,212,0.508,213,0.456,214,0.508,215,0.456,216,1.088,217,0.856,218,0.508,219,0.456,220,0.508,221,0.456,222,0.508,223,0.456,224,0.948,225,0.482,226,0.508,227,0.456,228,0.363,229,0.508,230,0.482,231,0.508,232,0.508,233,0.456,234,0.508,235,0.508,236,0.482,237,0.737,238,0.508,239,0.456,240,0.508,241,0.456,242,0.482,243,0.508,244,0.456,245,0.508,246,0.456,247,0.363,248,0.482,249,0.508,250,0.482,251,0.432,252,0.482,253,0.508,254,0.01,255,0.01,266,3.229,282,0.767,293,1.198,299,1.959,302,1.701,321,2.641,329,2.318,376,1.82,384,1.09,624,3.085,635,3.085,898,3.628,944,1.959,1110,3.229,1128,1.701,1135,2.126,1144,1.959,1145,1.82,1219,2.906,1360,4.231,1367,2.614,1402,5.566,1403,2.614,1404,5.192,1405,4.411,1406,4.411,1407,5.192,1408,5.204,1409,5.697,1410,5.697,1411,4.411,1412,4.901,1413,4.467,1414,3.672,1415,4.411,1416,3.039,1417,3.039,1418,4.411,1419,3.039,1420,3.039,1421,3.039,1422,3.039,1423,3.039,1424,3.039,1425,3.039,1426,3.039,1427,3.039,1428,3.039,1429,3.039,1430,2.614,1431,3.039,1432,2.614,1433,2.126,1434,3.795,1435,4.411,1436,4.411]],["title/components/MainMenuComponent.html",[0,0.122,219,0.558]],["body/components/MainMenuComponent.html",[0,0.181,1,0.508,2,0.755,3,0.147,4,0.147,5,0.565,6,0.565,7,0.565,8,0.128,9,2.317,10,3.305,11,3.499,12,1.133,14,0.698,17,0.508,18,1.23,19,1.295,20,0.948,22,0.755,23,0.677,24,0.795,25,3.301,33,1.3,34,0.795,36,0.795,38,0.092,39,0.26,40,1.504,41,1.784,43,1.009,46,1.919,47,1.515,48,0.405,52,0.436,56,1.634,57,0.463,59,0.31,60,0.019,61,0.434,62,0.329,63,0.266,68,0.405,72,0.404,73,0.379,74,0.379,75,1.806,76,2.852,77,2,79,2.852,80,3.301,81,2.502,82,2.852,83,2.852,94,0.443,97,0.205,98,2.026,103,1.009,104,1.582,105,1.778,106,1.894,107,1.894,109,0.798,112,0.508,113,0.755,115,0.761,116,0.836,117,0.147,118,0.147,119,0.691,125,2.577,129,1.778,130,1.283,167,0.565,168,0.795,169,0.755,170,0.454,171,0.948,172,0.565,173,0.795,174,0.508,175,0.565,176,0.508,177,0.565,178,0.536,179,0.795,180,0.508,181,0.536,182,0.565,183,0.508,184,0.565,185,0.508,186,0.565,187,0.508,188,0.755,189,0.508,190,0.795,191,0.508,192,0.508,193,0.565,194,0.508,195,0.715,196,0.565,197,0.481,198,0.508,199,0.508,200,0.795,201,0.508,202,0.921,203,0.508,204,0.565,205,0.508,206,0.565,207,0.508,208,0.795,209,0.795,210,0.508,211,0.508,212,0.565,213,0.508,214,0.565,215,0.508,216,1.117,217,0.898,218,0.565,219,0.898,220,0.565,221,0.898,222,0.565,223,0.898,224,0.982,225,0.536,226,0.565,227,0.508,228,0.404,229,0.565,230,0.536,231,0.565,232,0.565,233,0.508,234,0.565,235,0.565,236,0.948,237,0.795,238,0.565,239,0.508,240,0.565,241,0.508,242,0.536,243,0.565,244,0.508,245,0.565,246,0.508,247,0.404,248,0.536,249,0.565,250,0.536,251,0.481,252,0.536,253,0.565,254,0.011,255,0.011,266,3.305,282,0.698,293,1.293,302,1.894,327,1.498,376,2.026,394,0.798,407,2.599,408,2.599,441,1.778,542,4.184,594,2.91,711,2.91,1356,2.181,1359,4.234,1360,4.41,1387,2.599,1388,2.91,1399,2.91,1402,2.599,1433,2.366,1437,2.91,1438,4.763,1439,4.763,1440,5.982,1441,2.91,1442,4.763,1443,3.383,1444,3.383,1445,3.383,1446,4.097,1447,3.383,1448,3.383,1449,3.383,1450,3.383,1451,2.91,1452,2.599,1453,3.383,1454,3.383,1455,2.91,1456,3.383,1457,3.383,1458,3.383,1459,3.383]],["title/components/MainMenuDmComponent.html",[0,0.122,221,0.558]],["body/components/MainMenuDmComponent.html",[0,0.156,1,0.391,2,0.623,3,0.113,4,0.113,5,0.435,6,0.435,7,0.435,8,0.099,9,2.375,10,3.387,11,3.586,12,1.22,14,0.756,17,0.391,18,1.208,19,1.271,20,0.837,22,0.623,23,0.751,24,0.657,33,1.117,34,0.657,36,0.657,38,0.071,39,0.215,40,1.441,41,1.691,43,0.93,46,1.681,47,1.398,48,0.334,49,2.731,52,0.36,56,1.469,57,0.478,59,0.519,60,0.019,61,0.442,62,0.342,63,0.446,68,0.527,69,3.133,72,0.677,73,0.636,74,0.636,75,2.003,76,2.354,77,1.651,79,2.354,80,2.354,81,2.066,82,2.354,83,2.354,94,0.414,95,2.652,96,2.238,97,0.157,103,0.776,104,1.217,105,1.367,106,1.456,107,1.456,109,0.613,112,0.391,113,0.623,115,0.585,116,0.643,117,0.113,118,0.113,126,1.568,130,1.491,167,0.435,168,0.657,169,0.623,170,0.349,171,0.837,172,0.435,173,0.657,174,0.391,175,0.435,176,0.391,177,0.435,178,0.412,179,0.657,180,0.391,181,0.412,182,0.435,183,0.391,184,0.435,185,0.391,186,0.435,187,0.391,188,0.623,189,0.391,190,0.657,191,0.391,192,0.391,193,0.435,194,0.391,195,0.59,196,0.435,197,0.37,198,0.391,199,0.391,200,0.657,201,0.391,202,0.791,203,0.391,204,0.435,205,0.391,206,0.435,207,0.391,208,0.657,209,0.657,210,0.391,211,0.391,212,0.435,213,0.391,214,0.435,215,0.391,216,1.04,217,0.391,218,0.435,219,0.391,220,0.435,221,0.793,222,0.435,223,0.391,224,0.896,225,0.412,226,0.435,227,0.391,228,0.31,229,0.435,230,0.412,231,0.435,232,0.435,233,0.391,234,0.435,235,0.435,236,0.412,237,0.657,238,0.435,239,0.391,240,0.435,241,0.391,242,0.412,243,0.435,244,0.391,245,0.435,246,0.391,247,0.63,248,0.412,249,0.435,250,0.412,251,0.37,252,0.412,253,0.435,254,0.009,255,0.009,266,3.11,282,0.887,293,1.067,297,1.217,299,1.677,302,1.456,328,3.404,329,2.775,332,2.775,346,2.217,376,1.558,384,0.972,394,0.613,467,1.711,488,1.999,560,3.173,565,1.558,585,3.337,625,2.534,820,2.534,899,3.64,987,4.543,989,4.543,1035,3.382,1107,3.694,1108,3.404,1109,4.076,1110,3.11,1111,3.404,1112,3.382,1115,3.382,1117,3.382,1122,3.382,1124,3.64,1125,3.382,1128,1.456,1136,2.238,1137,3.382,1138,2.238,1139,3.02,1140,2.238,1141,2.238,1142,2.238,1143,2.238,1144,1.677,1145,1.558,1148,4.543,1360,3.966,1408,5.326,1412,4.543,1413,4.076,1414,3.404,1430,2.238,1432,2.238,1433,1.82,1434,3.382,1452,5.565,1460,2.238,1461,3.931,1462,3.931,1463,3.931,1464,4.739,1465,2.838,1466,3.931,1467,3.931,1468,1.558,1469,2.602,1470,2.602,1471,2.602,1472,2.602,1473,3.931,1474,2.602,1475,2.602,1476,3.931,1477,2.602,1478,2.602,1479,2.602,1480,2.602,1481,2.602,1482,2.602,1483,2.602,1484,2.602,1485,2.602,1486,2.602,1487,2.602,1488,2.602,1489,2.602,1490,2.602,1491,2.602,1492,3.931,1493,3.931,1494,3.931,1495,5.281]],["title/components/MainMenuHeaderComponent.html",[0,0.122,223,0.558]],["body/components/MainMenuHeaderComponent.html",[0,0.197,1,0.596,2,0.842,3,0.172,4,0.172,5,0.663,6,0.663,7,0.663,8,0.15,9,2.187,10,3.119,11,3.302,12,1.209,14,0.503,17,0.596,18,1.241,19,1.307,20,1.014,22,0.842,23,0.755,24,0.887,25,3.587,33,1.412,34,0.887,36,0.887,38,0.108,39,0.29,40,1.402,43,1.053,46,1.96,48,0.452,52,0.487,57,0.425,59,0.363,60,0.018,61,0.425,62,0.293,63,0.312,68,0.337,72,0.473,94,0.403,97,0.24,98,2.375,112,0.596,113,0.842,115,0.892,116,0.981,117,0.172,118,0.172,167,0.663,168,0.887,169,0.842,170,0.533,171,1.014,172,0.663,173,0.887,174,0.596,175,0.663,176,0.596,177,0.663,178,0.629,179,0.887,180,0.596,181,0.629,182,0.663,183,0.596,184,0.663,185,0.596,186,0.663,187,0.596,188,0.842,189,0.596,190,0.887,191,0.596,192,0.596,193,0.663,194,0.596,195,0.798,196,0.663,197,0.564,198,0.596,199,0.596,200,0.887,201,0.596,202,1,203,0.596,204,0.663,205,0.596,206,0.663,207,0.596,208,0.887,209,0.887,210,0.596,211,0.596,212,0.663,213,0.596,214,0.663,215,0.596,216,1.119,217,0.596,218,0.663,219,1.031,220,0.663,221,0.596,222,0.663,223,0.961,224,0.596,225,0.629,226,0.663,227,0.596,228,0.473,229,0.663,230,0.629,231,0.663,232,0.663,233,0.596,234,0.663,235,0.663,236,0.629,237,0.887,238,0.663,239,0.596,240,0.663,241,0.596,242,0.629,243,0.663,244,0.596,245,0.663,246,0.596,247,0.473,248,0.629,249,0.663,250,0.629,251,0.564,252,0.629,253,0.663,254,0.013,255,0.013,351,1.855,542,4.475,1165,4.081,1166,4.081,1167,4.081,1219,3.352,1356,4.299,1357,3.047,1383,3.412,1390,3.047,1401,4.57,1496,6.671,1497,3.967,1498,3.967,1499,3.967,1500,3.967]],["title/components/MainPageComponent.html",[0,0.122,224,0.558]],["body/components/MainPageComponent.html",[0,0.181,1,0.508,2,0.755,3,0.147,4,0.147,5,0.565,6,0.565,7,0.565,8,0.128,9,2.317,10,3.305,11,1.675,12,0.873,14,0.429,17,0.508,18,1.23,19,1.295,20,0.948,22,0.755,23,0.783,24,0.795,25,3.301,33,1.3,34,0.795,36,0.795,38,0.092,39,0.26,40,1.459,41,1.88,43,1.009,47,1.495,48,0.405,52,0.31,56,1.634,57,0.463,59,0.436,60,0.019,61,0.419,62,0.341,63,0.375,68,0.469,72,0.714,90,1.058,94,0.436,97,0.205,98,2.026,103,1.009,109,0.798,112,0.508,113,0.755,115,0.761,116,0.836,117,0.147,118,0.147,130,1.806,167,0.565,168,0.795,169,0.755,170,0.454,171,0.948,172,0.565,173,0.795,174,0.508,175,0.565,176,0.508,177,0.565,178,0.948,179,0.795,180,0.508,181,0.536,182,0.565,183,0.508,184,0.565,185,0.508,186,0.565,187,0.508,188,0.755,189,0.508,190,0.795,191,0.508,192,0.508,193,0.565,194,0.508,195,0.715,196,0.565,197,0.481,198,0.508,199,0.508,200,0.795,201,0.508,202,0.921,203,0.508,204,0.565,205,0.508,206,0.565,207,0.508,208,0.795,209,0.795,210,0.508,211,0.508,212,0.565,213,0.508,214,0.565,215,0.898,216,1.099,217,0.508,218,0.565,219,0.898,220,0.565,221,0.508,222,0.565,223,0.508,224,0.898,225,0.536,226,0.565,227,0.508,228,0.404,229,0.565,230,0.536,231,0.565,232,0.565,233,0.508,234,0.565,235,0.565,236,0.536,237,0.795,238,0.565,239,0.508,240,0.565,241,0.508,242,0.536,243,0.565,244,0.898,245,0.565,246,0.508,247,0.404,248,0.536,249,0.565,250,0.536,251,0.481,252,0.536,253,0.565,254,0.011,255,0.011,266,3.305,302,1.894,319,3.301,346,2.512,349,3.659,356,2.91,357,2.896,366,2.181,374,2.366,401,2.366,591,2.026,643,2.366,792,2.181,1110,3.305,1128,1.894,1219,3.085,1279,2.91,1323,2.599,1324,4.097,1325,4.097,1349,2.599,1356,2.181,1390,2.599,1397,2.91,1433,3.331,1446,5.146,1451,2.91,1468,2.026,1501,4.763,1502,4.741,1503,4.763,1504,3.383,1505,3.383,1506,4.234,1507,4.763,1508,3.383,1509,3.383,1510,3.383,1511,3.383,1512,3.383,1513,3.383,1514,3.383,1515,3.383,1516,3.383,1517,3.383,1518,3.383,1519,5.512,1520,4.763,1521,4.763,1522,4.763,1523,6.54,1524,5.982,1525,5.982,1526,4.763,1527,4.763]],["title/interfaces/Message.html",[228,0.444,519,1.739]],["body/interfaces/Message.html",[3,0.226,4,0.226,8,0.198,38,0.142,39,0.346,60,0.018,62,0.377,63,0.6,75,2.686,77,2.974,117,0.226,228,0.88,254,0.015,255,0.015,282,0.983,293,1.85,441,4.043,519,2.44,520,3.363,560,3.964,568,4.954,585,3.964,1506,4.862,1528,4.488,1529,4.954,1530,4.954,1531,4.954,1532,6.093,1533,3.649,1534,4.008,1535,3.649]],["title/components/MessageInputComponent.html",[0,0.122,227,0.558]],["body/components/MessageInputComponent.html",[0,0.164,1,0.348,2,0.57,3,0.101,4,0.101,5,0.387,6,0.387,7,0.387,8,0.225,9,2.415,12,0.699,14,0.753,17,0.348,18,1.197,19,1.259,20,0.788,22,0.57,23,0.512,24,0.601,32,1.759,34,0.601,36,0.601,38,0.063,39,0.197,40,1.362,41,1.606,42,2.572,43,0.923,44,0.925,47,1.352,48,0.306,49,2.66,52,0.33,56,1.395,57,0.488,59,0.563,60,0.019,61,0.436,62,0.348,63,0.484,68,0.582,72,0.709,73,0.639,74,0.639,77,1.511,81,1.218,90,1.125,94,0.382,97,0.14,103,0.691,108,0.837,109,0.547,110,1.218,111,1.148,112,0.348,113,0.699,117,0.101,118,0.101,119,1.341,122,1.388,126,1.759,149,1.622,162,1.494,163,1.781,167,0.387,168,0.601,169,0.57,170,0.311,171,0.788,172,0.387,173,0.601,174,0.348,175,0.387,176,0.348,177,0.387,178,0.367,179,0.601,180,0.348,181,0.367,182,0.387,183,0.348,184,0.387,185,0.348,186,0.387,187,0.348,188,0.57,189,0.348,190,0.601,191,0.663,192,0.747,193,0.387,194,0.348,195,0.541,196,0.387,197,0.33,198,0.348,199,0.348,200,0.601,201,0.348,202,0.737,203,0.348,204,0.387,205,0.348,206,0.387,207,0.348,208,0.601,209,0.601,210,0.348,211,0.348,212,0.387,213,0.348,214,0.387,215,0.348,216,0.893,217,0.348,218,0.387,219,0.348,220,0.387,221,0.348,222,0.387,223,0.348,224,0.348,225,0.367,226,0.387,227,0.747,228,0.824,229,0.387,230,0.367,231,0.387,232,0.387,233,0.348,234,0.387,235,0.387,236,0.367,237,0.601,238,0.387,239,0.348,240,0.387,241,0.348,242,0.367,243,0.387,244,0.348,245,0.387,246,0.348,247,0.593,248,0.367,249,0.387,250,0.367,251,0.33,252,0.367,253,0.387,254,0.009,255,0.009,282,0.779,297,1.084,327,2.522,357,2.613,366,1.494,394,1.402,401,2.517,406,2.32,409,1.994,424,2.843,467,0.837,475,1.781,514,1.781,516,3.096,560,2.014,585,2.014,624,1.622,625,1.494,631,2.155,748,1.622,755,1.781,790,4.067,831,1.494,889,1.781,898,3.388,938,1.781,944,1.494,963,1.781,971,3.765,1071,1.781,1073,1.994,1124,1.781,1135,1.622,1154,3.795,1197,2.765,1309,1.781,1319,1.994,1371,3.085,1465,1.388,1468,1.388,1529,2.517,1530,2.517,1531,2.517,1533,2.517,1535,2.517,1536,6.338,1537,5.66,1538,1.994,1539,4.567,1540,3.599,1541,3.599,1542,4.973,1543,4.411,1544,5.383,1545,3.795,1546,3.599,1547,4.973,1548,4.973,1549,3.599,1550,4.278,1551,4.278,1552,3.599,1553,3.599,1554,3.599,1555,4.973,1556,3.599,1557,3.599,1558,4.973,1559,4.973,1560,2.765,1561,4.411,1562,3.599,1563,2.318,1564,3.599,1565,2.318,1566,2.318,1567,2.318,1568,3.599,1569,2.318,1570,2.318,1571,2.318,1572,3.599,1573,5.697,1574,2.318,1575,3.599,1576,6.449,1577,2.318,1578,3.599,1579,4.973,1580,2.318,1581,2.318,1582,3.599,1583,2.318,1584,4.973,1585,3.599,1586,2.318,1587,2.318,1588,2.318,1589,3.599,1590,2.318,1591,2.318,1592,2.318,1593,2.318,1594,2.318,1595,2.318,1596,2.318,1597,2.318,1598,2.318,1599,1.388,1600,2.318,1601,2.318,1602,5.697,1603,2.318,1604,2.318,1605,2.318,1606,4.278,1607,2.318,1608,4.411,1609,2.318,1610,2.318,1611,1.994,1612,3.599,1613,2.318,1614,2.318,1615,3.096,1616,3.795,1617,1.622,1618,2.318,1619,2.318,1620,2.318,1621,2.318,1622,2.318,1623,2.318,1624,2.318,1625,2.318,1626,4.411,1627,2.318,1628,2.318,1629,2.318,1630,2.318,1631,2.318,1632,2.318,1633,2.318,1634,2.318,1635,2.318,1636,2.318,1637,1.994,1638,4.278,1639,3.599,1640,2.318,1641,2.318,1642,2.318,1643,2.318,1644,2.318,1645,2.318,1646,1.994,1647,2.318,1648,3.096,1649,2.318,1650,2.318,1651,2.318,1652,2.318,1653,2.318,1654,2.318,1655,2.318,1656,2.318,1657,2.318,1658,2.318,1659,2.318,1660,2.318,1661,2.318,1662,2.318,1663,2.318,1664,4.411,1665,2.318,1666,2.318,1667,4.973,1668,2.318,1669,2.318,1670,2.318,1671,3.599,1672,2.318,1673,2.318,1674,4.411,1675,2.318,1676,2.318,1677,2.318,1678,3.096,1679,2.318,1680,2.318,1681,3.599,1682,3.599,1683,3.599,1684,3.599]],["title/injectables/MessageService.html",[522,0.797,898,1.954]],["body/injectables/MessageService.html",[3,0.111,4,0.111,8,0.225,17,0.89,38,0.07,39,0.212,48,0.33,49,2.866,52,0.43,57,0.498,59,0.65,60,0.019,61,0.474,62,0.359,63,0.558,68,0.615,69,2.04,72,0.707,73,0.728,74,0.728,75,2.135,77,1.97,90,1.467,94,0.358,97,0.155,117,0.111,118,0.111,119,1.512,125,1.816,126,2.721,228,0.881,254,0.009,255,0.009,274,1.79,282,0.957,327,2.932,335,0.971,384,1.16,394,1.532,467,1.891,522,0.832,523,1.021,527,3.549,541,3.663,560,3.317,565,2.325,568,4.145,580,1.966,585,2.626,598,2.325,603,1.267,604,1.966,605,1.79,606,1.966,607,3.024,608,1.966,609,2.202,611,3.604,612,2.202,613,1.433,616,1.021,645,1.966,646,2.202,649,1.966,654,1.79,655,2.983,657,2.983,658,1.966,659,1.966,660,1.966,661,4.325,665,3.604,670,1.966,677,2.202,679,1.79,723,1.65,775,1.79,898,2.04,1529,3.282,1530,1.79,1531,3.282,1532,4.036,1533,3.282,1534,3.604,1535,3.282,1599,1.533,1615,5.87,1617,4.437,1685,2.202,1686,4.692,1687,4.692,1688,4.692,1689,4.692,1690,4.692,1691,4.692,1692,4.692,1693,3.883,1694,3.883,1695,3.883,1696,3.883,1697,3.883,1698,3.883,1699,3.883,1700,3.883,1701,3.883,1702,5.237,1703,3.883,1704,3.883,1705,3.883,1706,5.237,1707,3.883,1708,3.883,1709,3.883,1710,3.883,1711,3.883,1712,3.883,1713,2.56,1714,3.883,1715,2.56,1716,2.56,1717,3.883,1718,2.56,1719,4.692,1720,3.883,1721,2.56,1722,3.883,1723,2.56,1724,3.883,1725,2.56,1726,3.883,1727,2.56,1728,2.983,1729,3.883,1730,2.56,1731,3.883,1732,2.56,1733,2.56,1734,2.56,1735,3.883,1736,2.56,1737,3.883,1738,2.56,1739,3.341,1740,3.883,1741,2.56,1742,2.56,1743,3.883,1744,2.56,1745,3.883,1746,2.56,1747,3.883,1748,2.56,1749,3.883,1750,2.56,1751,2.56,1752,3.883,1753,2.56,1754,2.56,1755,2.56,1756,2.56,1757,4.036,1758,2.56,1759,2.56,1760,2.56,1761,2.56,1762,2.202,1763,4.843,1764,2.56,1765,2.56,1766,2.56,1767,2.56,1768,2.56,1769,2.56,1770,1.79,1771,3.883,1772,2.56,1773,2.56,1774,3.883,1775,3.883,1776,2.56,1777,2.56,1778,2.56,1779,2.56,1780,2.56,1781,2.56,1782,2.56,1783,2.56,1784,2.56,1785,2.56,1786,2.56,1787,2.56,1788,4.692,1789,3.883,1790,4.036,1791,2.56,1792,4.692,1793,2.56,1794,4.843,1795,3.883,1796,2.56,1797,2.56,1798,4.692,1799,2.56,1800,2.56,1801,2.56,1802,2.56,1803,2.56,1804,2.56,1805,5.63,1806,2.202,1807,2.202,1808,5.237,1809,5.237,1810,2.56,1811,2.56,1812,2.56,1813,2.202,1814,2.56,1815,2.202,1816,5.237,1817,3.883,1818,3.883,1819,3.883,1820,2.56,1821,2.56,1822,2.56,1823,2.56,1824,2.56,1825,2.56,1826,2.56,1827,2.56,1828,2.56,1829,2.56,1830,2.56,1831,2.56,1832,2.56,1833,2.56,1834,2.56,1835,2.56,1836,2.56,1837,2.56,1838,2.56,1839,2.56,1840,2.56,1841,2.56,1842,2.56,1843,3.883,1844,3.883,1845,3.883,1846,3.883]],["title/directives/OpenProfileDirective.html",[170,0.499,251,0.529]],["body/directives/OpenProfileDirective.html",[3,0.227,4,0.227,8,0.198,17,0.785,18,1.004,22,1.004,23,0.901,38,0.143,48,0.539,52,0.58,57,0.482,59,0.479,60,0.019,61,0.347,62,0.334,63,0.412,65,3.137,67,3.189,68,0.445,72,0.756,94,0.383,97,0.316,117,0.227,118,0.227,119,1.068,169,1.004,170,0.851,250,0.829,251,0.901,252,1.004,254,0.015,255,0.015,282,0.803,342,3.189,349,4.869,366,3.371,374,3.658,384,1.567,861,4.419,881,4.018,1371,4.958,1539,5.239,1560,4.869,1847,6.349,1848,4.499,1849,7.089,1850,6.338,1851,5.23,1852,6.819,1853,6.338,1854,5.23,1855,6.338,1856,6.338,1857,5.23,1858,5.23,1859,5.23]],["title/injectables/ProfileService.html",[522,0.797,861,2.227]],["body/injectables/ProfileService.html",[0,0.19,3,0.195,4,0.195,8,0.17,38,0.123,39,0.315,40,1.3,42,2.883,47,1.523,48,0.491,52,0.412,57,0.486,59,0.615,60,0.019,61,0.446,62,0.348,63,0.529,65,3.152,67,2.978,68,0.591,72,0.848,73,0.647,74,0.647,80,2.693,90,1.803,94,0.406,97,0.272,109,1.06,111,2.226,117,0.195,118,0.195,119,1.178,134,2.363,135,2.693,136,2.517,138,2.226,195,0.866,197,0.82,254,0.014,255,0.014,282,0.944,293,1.962,335,1.706,342,3.141,383,2.226,384,1.661,394,1.36,414,2.363,522,1.236,523,1.794,616,1.794,790,4.765,795,3.455,861,3.454,883,3.455,884,2.899,885,3.455,888,3.455,1099,3.146,1114,5.976,1132,5.478,1133,3.869,1135,3.146,1468,2.693,1860,3.869,1861,6.368,1862,6.718,1863,6.718,1864,5.769,1865,5.769,1866,5.769,1867,5.769,1868,4.498,1869,4.498,1870,5.769,1871,4.498,1872,5.769,1873,4.498,1874,5.769,1875,5.769,1876,4.498,1877,4.498,1878,4.498,1879,4.498,1880,5.769,1881,5.769]],["title/interfaces/Reaction.html",[519,1.739,1882,2.601]],["body/interfaces/Reaction.html",[3,0.242,4,0.242,8,0.212,38,0.152,39,0.36,60,0.018,62,0.367,75,2.749,77,3.043,117,0.242,254,0.016,255,0.016,282,0.983,441,3.937,519,2.614,520,3.603,1465,4.339,1728,5.567,1882,4.613,1883,4.809,1884,6.234,1885,6.234]],["title/injectables/ReactionService.html",[522,0.797,1886,2.857]],["body/injectables/ReactionService.html",[3,0.193,4,0.193,8,0.169,38,0.121,39,0.313,48,0.488,49,2.828,52,0.581,57,0.479,59,0.613,60,0.019,61,0.445,62,0.339,63,0.527,68,0.589,73,0.5,74,0.5,75,2.627,77,1.871,94,0.383,97,0.269,117,0.193,118,0.193,119,1.295,126,2.287,254,0.014,255,0.014,274,3.116,282,0.898,327,2.807,335,1.69,394,1.578,522,1.229,523,1.777,527,4.246,565,2.668,580,3.423,598,3.434,603,2.205,604,3.423,605,3.116,606,3.423,607,2.872,608,3.423,611,3.423,613,2.494,616,1.777,645,3.423,649,3.423,654,3.116,655,3.423,657,4.405,658,3.423,659,3.423,660,3.423,661,3.423,665,3.423,670,3.423,1465,2.668,1534,4.405,1728,4.871,1762,3.833,1790,3.833,1813,5.454,1882,5.296,1884,3.833,1885,3.833,1886,4.405,1887,3.833,1888,5.734,1889,6.694,1890,5.734,1891,5.734,1892,5.734,1893,5.734,1894,5.734,1895,4.456,1896,4.456,1897,5.734,1898,4.456,1899,5.734,1900,4.456,1901,6.34,1902,5.734,1903,4.456,1904,4.456,1905,4.456,1906,4.456,1907,4.456,1908,4.456,1909,4.456,1910,4.456,1911,4.456,1912,4.456,1913,4.456,1914,4.456,1915,4.456,1916,6.34,1917,4.456,1918,4.456]],["title/components/ResetPasswordComponent.html",[0,0.122,233,0.558]],["body/components/ResetPasswordComponent.html",[0,0.18,1,0.501,2,0.747,3,0.145,4,0.145,5,0.557,6,0.557,7,0.557,8,0.126,12,0.866,14,0.422,17,0.501,18,1.229,19,1.294,20,0.942,22,0.747,23,0.67,24,0.787,32,2.181,33,1.289,34,0.787,36,0.787,38,0.091,39,0.258,43,1.005,46,1.767,48,0.401,52,0.305,57,0.473,59,0.501,60,0.019,61,0.432,62,0.327,63,0.43,68,0.554,72,0.777,73,0.613,74,0.613,94,0.405,97,0.202,108,1.204,112,0.501,113,0.747,115,0.749,116,0.824,117,0.145,118,0.145,119,0.681,137,1.65,167,0.557,168,0.787,169,0.942,170,0.448,171,0.942,172,0.557,173,0.787,174,0.501,175,0.557,176,0.501,177,0.557,178,0.528,179,0.787,180,0.501,181,0.528,182,0.557,183,0.501,184,0.557,185,0.501,186,0.557,187,0.501,188,0.747,189,0.501,190,0.787,191,0.501,192,0.501,193,0.557,194,0.501,195,0.708,196,0.557,197,0.474,198,0.501,199,0.708,200,0.787,201,0.501,202,0.913,203,0.501,204,0.557,205,0.501,206,0.557,207,0.501,208,0.787,209,0.787,210,0.708,211,0.501,212,0.557,213,0.501,214,0.557,215,0.501,216,0.978,217,0.501,218,0.557,219,0.501,220,0.557,221,0.501,222,0.557,223,0.501,224,0.501,225,0.528,226,0.557,227,0.501,228,0.398,229,0.557,230,0.528,231,0.557,232,0.557,233,0.892,234,1.118,235,0.557,236,0.528,237,0.787,238,0.557,239,0.501,240,0.557,241,0.501,242,0.528,243,0.557,244,0.501,245,0.557,246,0.501,247,0.398,248,0.528,249,0.557,250,0.528,251,0.474,252,0.528,253,0.557,254,0.011,255,0.011,282,0.926,341,2.873,342,2.557,344,4.157,351,1.559,352,3.824,353,4.157,354,2.631,375,1.751,379,2.332,380,1.866,381,1.751,382,1.751,383,1.65,384,1.351,393,2.822,400,2.333,406,3.038,411,2.332,412,3.296,413,2.332,415,2.332,416,2.332,417,2.332,418,4.026,435,4.565,437,3.824,438,3.83,497,2.561,498,2.561,500,2.561,501,2.561,502,2.561,503,2.561,504,2.561,506,2.561,679,3.296,710,2.332,717,2.561,720,4.703,740,4.157,741,4.054,743,4.054,757,4.054,1227,3.824,1268,5.032,1345,4.054,1346,2.868,1355,2.561,1919,6.189,1920,2.868,1921,4.713,1922,4.713,1923,4.703,1924,5.467,1925,4.054,1926,5.943,1927,5.943,1928,4.713,1929,4.713,1930,4.054,1931,3.334,1932,4.054,1933,3.334,1934,3.334,1935,3.334,1936,3.334,1937,4.713,1938,3.334,1939,3.334,1940,3.334,1941,3.334,1942,3.334,1943,3.334,1944,3.334,1945,3.334,1946,3.334,1947,3.334,1948,2.868,1949,4.713,1950,4.713,1951,4.713]],["title/components/SearchResultsComponent.html",[0,0.122,239,0.558]],["body/components/SearchResultsComponent.html",[0,0.177,1,0.487,2,0.732,3,0.141,4,0.141,5,0.542,6,0.542,7,0.542,8,0.123,12,0.853,14,0.744,17,0.487,18,1.226,19,1.291,20,0.93,22,0.732,23,0.657,24,0.772,33,1.27,34,0.772,36,0.772,38,0.088,39,0.253,40,1.41,43,0.997,46,1.875,47,1.382,48,0.393,52,0.423,57,0.479,59,0.423,60,0.019,61,0.441,62,0.343,63,0.364,68,0.499,72,0.387,73,0.604,74,0.604,94,0.429,95,1.815,97,0.196,104,1.516,108,1.171,109,0.765,112,0.487,113,0.732,115,0.729,116,0.802,117,0.141,118,0.141,119,0.662,122,2.768,141,2.979,167,0.542,168,0.772,169,0.732,170,0.436,171,0.93,172,0.542,173,0.772,174,0.487,175,0.542,176,0.487,177,0.542,178,0.514,179,0.772,180,0.487,181,0.514,182,0.542,183,0.487,184,0.542,185,0.487,186,0.542,187,0.487,188,0.732,189,0.487,190,0.772,191,0.487,192,0.487,193,0.542,194,0.487,195,0.694,196,0.542,197,0.461,198,0.487,199,0.487,200,0.772,201,0.487,202,0.899,203,0.487,204,0.542,205,0.487,206,0.542,207,0.487,208,0.772,209,0.772,210,0.487,211,0.487,212,0.542,213,0.487,214,0.542,215,0.487,216,0.969,217,0.487,218,0.542,219,0.487,220,0.542,221,0.487,222,0.542,223,0.487,224,0.487,225,0.514,226,0.542,227,0.487,228,0.7,229,0.542,230,0.514,231,0.542,232,0.542,233,0.487,234,0.542,235,0.542,236,0.514,237,1.133,238,0.542,239,0.882,240,0.542,241,0.487,242,0.514,243,0.542,244,0.487,245,0.542,246,0.487,247,0.81,248,0.514,249,0.542,250,0.514,251,0.834,252,0.514,253,0.542,254,0.014,255,0.011,262,3.767,282,0.841,293,1.255,297,1.516,300,2.268,301,2.268,327,3.101,332,1.704,342,1.516,351,1.516,394,1.384,950,2.491,1027,4.633,1107,3.233,1108,2.979,1110,3.275,1111,3.783,1128,1.815,1144,2.09,1145,1.942,1219,3.014,1465,2.768,1539,4.955,1560,3.551,1599,1.942,1617,3.233,1952,6.256,1953,6.256,1954,2.79,1955,4.622,1956,4.622,1957,4.899,1958,6.45,1959,4.622,1960,5.87,1961,5.385,1962,5.385,1963,5.385,1964,4.622,1965,3.243,1966,3.243,1967,3.243,1968,3.243,1969,3.243,1970,3.243,1971,4.622,1972,3.243,1973,3.243,1974,3.243,1975,3.243,1976,3.243,1977,3.243,1978,3.243,1979,3.243,1980,3.243,1981,3.243,1982,3.243,1983,3.243,1984,5.87,1985,4.622,1986,4.622]],["title/injectables/SearchService.html",[522,0.797,1987,2.857]],["body/injectables/SearchService.html",[3,0.159,4,0.159,8,0.139,14,0.952,38,0.1,41,1.716,47,1.438,48,0.429,52,0.461,56,1.605,57,0.482,59,0.658,60,0.019,61,0.477,62,0.358,63,0.566,68,0.611,94,0.423,97,0.222,103,1.094,104,1.716,105,3.255,106,2.053,107,2.053,109,0.865,117,0.159,118,0.159,119,1.326,122,3.017,125,2.356,141,4.631,228,0.835,247,0.879,254,0.012,255,0.012,282,0.983,293,1.682,297,1.716,332,2.647,335,1.392,384,1.658,394,1.694,488,2.818,522,1.08,523,1.463,616,1.463,624,2.566,635,2.566,895,4.335,898,3.61,944,2.365,972,4.951,1465,4.302,1468,2.197,1506,3.871,1599,2.197,1617,4.806,1638,5.33,1739,4.335,1987,3.871,1988,3.156,1989,5.039,1990,6.195,1991,5.039,1992,5.755,1993,5.039,1994,4.335,1995,5.039,1996,5.911,1997,5.039,1998,3.669,1999,5.039,2000,3.669,2001,5.039,2002,3.669,2003,3.669,2004,5.039,2005,3.669,2006,3.669,2007,3.669,2008,5.755,2009,5.039,2010,3.669,2011,5.039,2012,3.669,2013,5.039,2014,3.669,2015,5.039,2016,3.669,2017,5.039,2018,5.755,2019,3.669,2020,3.669,2021,3.669,2022,3.669,2023,3.669,2024,3.669,2025,6.493,2026,5.755,2027,5.039,2028,5.33,2029,5.33,2030,6.195,2031,3.669,2032,3.669,2033,3.669,2034,3.669,2035,3.669,2036,3.669,2037,3.669,2038,3.669,2039,5.039,2040,3.669]],["title/injectables/SharedService.html",[266,1.739,522,0.797]],["body/injectables/SharedService.html",[3,0.214,4,0.214,8,0.187,23,0.869,38,0.134,39,0.334,48,0.52,52,0.608,57,0.502,59,0.452,60,0.019,61,0.327,62,0.299,63,0.388,68,0.591,72,0.852,73,0.801,74,0.801,94,0.37,97,0.298,117,0.214,118,0.214,254,0.014,255,0.014,266,2.858,293,1.66,335,1.87,384,1.798,394,1.163,467,2.508,522,1.31,523,1.967,541,4.858,601,4.241,616,1.967,1359,5.104,1362,6.345,1502,4.241,1757,6.142,1770,3.449,2041,4.241,2042,6.644,2043,7.376,2044,6.644,2045,6.113,2046,6.113,2047,4.931,2048,4.931,2049,4.931,2050,6.113,2051,4.931,2052,6.644,2053,6.113,2054,4.931,2055,4.931,2056,4.931,2057,6.113,2058,4.931,2059,4.931,2060,4.931,2061,4.931,2062,4.931,2063,4.931]],["title/components/SignInComponent.html",[0,0.122,241,0.558]],["body/components/SignInComponent.html",[0,0.163,1,0.419,2,0.657,3,0.121,4,0.121,5,0.466,6,0.466,7,0.466,8,0.106,12,0.783,14,0.354,17,0.419,18,1.214,19,1.278,20,0.867,22,0.657,23,0.702,24,0.692,32,1.971,33,1.165,34,0.692,36,0.692,38,0.076,39,0.226,43,0.952,46,1.662,47,1.358,48,0.352,49,1.971,52,0.379,57,0.486,59,0.501,60,0.019,61,0.421,62,0.325,63,0.43,68,0.554,72,0.653,73,0.759,74,0.759,90,2.196,94,0.415,97,0.169,108,1.008,109,0.658,112,0.419,113,0.657,115,0.627,116,0.69,117,0.121,118,0.121,126,1.971,140,2.898,143,3.564,149,3.825,155,5.199,157,3.183,159,4.705,160,2.898,161,2.898,162,3.525,164,3.564,167,0.466,168,0.692,169,0.657,170,0.375,171,0.867,172,0.466,173,0.692,174,0.419,175,0.466,176,0.419,177,0.466,178,0.442,179,0.692,180,0.419,181,0.442,182,0.466,183,0.419,184,0.466,185,0.419,186,0.466,187,0.419,188,0.657,189,0.419,190,0.692,191,0.419,192,0.419,193,0.466,194,0.419,195,0.622,196,0.466,197,0.397,198,0.419,199,0.419,200,0.692,201,0.419,202,0.825,203,0.419,204,0.466,205,0.821,206,0.466,207,0.821,208,0.825,209,0.692,210,0.419,211,0.419,212,0.466,213,0.419,214,0.466,215,0.419,216,0.919,217,0.419,218,0.466,219,0.419,220,0.466,221,0.419,222,0.466,223,0.419,224,0.419,225,0.442,226,0.466,227,0.419,228,0.333,229,0.466,230,0.442,231,0.466,232,0.466,233,0.419,234,0.466,235,0.466,236,0.442,237,0.692,238,0.466,239,0.419,240,0.466,241,0.821,242,1.004,243,0.466,244,0.419,245,0.466,246,0.419,247,0.777,248,0.442,249,0.466,250,0.442,251,0.397,252,0.442,253,0.466,254,0.01,255,0.01,282,0.693,293,1.768,319,2.481,341,2.597,346,2.296,351,1.305,354,2.421,370,2.481,376,1.671,382,1.466,384,1.222,393,1.671,394,1.165,400,1.381,404,1.952,418,4.113,432,3.796,438,1.799,467,1.496,472,2.401,489,1.799,511,2.671,518,4.705,527,3.666,591,1.671,598,2.481,603,1.381,605,1.952,607,1.799,613,1.562,643,1.952,740,2.898,742,3.564,744,3.666,745,3.666,746,3.945,747,4.201,748,2.898,749,3.183,750,3.183,938,3.183,998,3.796,1029,4.251,1065,3.564,1067,3.564,1108,2.671,1130,2.401,1195,4.705,1219,2.766,1240,3.564,1262,3.564,1309,3.183,1335,2.401,1336,5.646,1349,2.144,1352,4.201,1369,2.401,1371,1.952,1648,3.564,2064,6.322,2065,2.401,2066,4.942,2067,4.143,2068,4.143,2069,4.942,2070,5.843,2071,4.942,2072,4.942,2073,4.942,2074,5.843,2075,4.143,2076,4.143,2077,4.942,2078,6.51,2079,5.469,2080,4.143,2081,4.143,2082,2.791,2083,2.791,2084,2.791,2085,2.791,2086,2.791,2087,2.791,2088,2.791,2089,2.791,2090,2.791,2091,2.791,2092,2.791,2093,2.791,2094,2.791,2095,2.791,2096,2.791,2097,2.791,2098,2.791,2099,2.791,2100,2.791,2101,4.143,2102,2.791,2103,2.791,2104,2.791,2105,2.791,2106,4.143,2107,2.791,2108,2.791,2109,2.791,2110,2.791,2111,2.791,2112,2.791,2113,2.791,2114,2.791,2115,4.143,2116,4.143,2117,4.143,2118,4.143,2119,4.143,2120,4.143,2121,4.143,2122,4.143,2123,4.143,2124,4.143,2125,4.143,2126,4.143,2127,4.143,2128,4.143]],["title/injectables/StateManagementService.html",[522,0.797,1414,2.397]],["body/injectables/StateManagementService.html",[3,0.222,4,0.222,8,0.194,38,0.14,39,0.342,48,0.533,57,0.488,59,0.574,60,0.019,61,0.416,62,0.307,63,0.493,68,0.599,72,0.747,73,0.702,74,0.702,75,2.376,94,0.379,97,0.31,117,0.222,118,0.222,254,0.015,255,0.015,282,0.931,335,1.946,384,1.816,394,1.477,467,2.543,522,1.342,523,2.046,616,2.046,899,5.195,1414,4.037,1770,3.588,2129,6.399,2130,3.941,2131,6.762,2132,7.042,2133,7.042,2134,6.264,2135,6.264,2136,5.13,2137,5.13,2138,6.264,2139,5.13,2140,6.264,2141,5.13,2142,7.042,2143,4.413,2144,5.13,2145,5.13,2146,5.13,2147,5.13,2148,5.13,2149,5.13,2150,5.13,2151,5.13]],["title/components/ThreadComponent.html",[0,0.122,244,0.558]],["body/components/ThreadComponent.html",[0,0.159,1,0.402,2,0.636,3,0.116,4,0.116,5,0.447,6,0.447,7,0.447,8,0.101,9,2.416,12,0.764,14,0.339,17,0.402,18,1.21,19,1.274,20,0.849,22,0.636,23,0.571,24,0.67,32,1.922,34,0.67,36,0.67,38,0.131,39,0.219,40,1.448,41,1.711,43,0.939,47,1.435,48,0.341,52,0.368,56,1.487,57,0.487,59,0.49,60,0.019,61,0.415,62,0.347,63,0.421,68,0.547,72,0.575,73,0.676,74,0.676,77,1.685,90,1.255,94,0.421,97,0.243,103,0.798,108,0.966,109,0.631,112,0.402,113,0.764,117,0.116,118,0.116,167,0.447,168,0.67,169,0.636,170,0.359,171,0.849,172,0.447,173,0.67,174,0.402,175,0.447,176,0.402,177,0.447,178,0.424,179,0.67,180,0.402,181,0.424,182,0.447,183,0.402,184,0.447,185,0.402,186,0.447,187,0.402,188,0.636,189,0.402,190,0.67,191,0.402,192,0.402,193,0.447,194,0.402,195,0.603,196,0.447,197,0.38,198,0.402,199,0.402,200,0.67,201,0.402,202,0.805,203,0.402,204,0.447,205,0.402,206,0.447,207,0.402,208,0.67,209,0.67,210,0.402,211,0.402,212,0.447,213,0.402,214,0.447,215,0.402,216,0.905,217,0.402,218,0.447,219,0.402,220,0.447,221,0.402,222,0.447,223,0.402,224,0.402,225,0.849,226,0.447,227,0.804,228,0.799,229,0.447,230,0.424,231,0.447,232,0.447,233,0.402,234,0.447,235,0.447,236,0.424,237,0.67,238,0.447,239,0.402,240,0.447,241,0.402,242,0.424,243,0.447,244,0.804,245,0.447,246,0.402,247,0.639,248,0.424,249,0.447,250,0.424,251,0.38,252,0.424,253,0.447,254,0.01,255,0.01,266,3.132,282,0.873,293,0.726,297,1.251,302,1.497,327,2.965,329,2.109,374,1.871,394,1.263,401,3.37,424,3.105,441,3.695,467,1.449,475,2.055,541,3.745,560,2.246,568,3.745,585,2.246,607,1.724,613,1.497,631,2.404,898,3.455,944,1.724,971,3.745,1110,3.132,1111,3.451,1128,1.497,1139,2.055,1144,1.724,1145,1.602,1197,2.055,1529,2.807,1530,2.807,1531,2.807,1533,2.807,1535,2.807,1537,2.055,1545,4.145,1550,4.145,1551,4.145,1599,1.602,1606,2.301,1611,3.453,1616,2.301,1637,2.301,1646,3.453,1678,3.453,1794,3.453,2152,2.301,2153,4.014,2154,4.014,2155,5.738,2156,4.818,2157,4.145,2158,4.818,2159,3.453,2160,4.014,2161,4.014,2162,5.355,2163,2.675,2164,4.014,2165,2.675,2166,3.453,2167,2.675,2168,2.301,2169,4.014,2170,2.675,2171,2.675,2172,2.675,2173,2.675,2174,4.014,2175,2.675,2176,4.606,2177,2.675,2178,2.675,2179,2.675,2180,4.014,2181,2.675,2182,2.675,2183,2.675,2184,2.675,2185,2.675,2186,3.453,2187,3.453,2188,3.453,2189,3.453,2190,3.453,2191,3.453,2192,3.453,2193,3.453,2194,3.453,2195,3.453,2196,3.453,2197,3.453,2198,2.675,2199,2.675,2200,2.675,2201,2.675,2202,4.014,2203,4.014,2204,4.014,2205,4.014,2206,4.014,2207,4.014,2208,4.014,2209,2.675,2210,2.675,2211,2.675,2212,4.014,2213,2.675,2214,2.675,2215,4.014,2216,2.675,2217,2.675,2218,2.675,2219,2.675,2220,2.675,2221,4.014,2222,4.818,2223,2.675,2224,4.145,2225,2.675,2226,2.675,2227,4.818,2228,2.675,2229,4.818,2230,2.675,2231,2.675,2232,2.675,2233,2.301,2234,2.301,2235,2.301,2236,2.301,2237,2.301,2238,2.301,2239,2.675,2240,4.014,2241,4.014,2242,4.014,2243,4.014,2244,6.026]],["title/injectables/ThreadService.html",[522,0.797,1110,1.739]],["body/injectables/ThreadService.html",[3,0.24,4,0.24,8,0.21,23,0.786,38,0.151,39,0.358,48,0.558,52,0.64,57,0.48,60,0.019,62,0.271,68,0.558,72,0.782,73,0.62,74,0.62,90,2.184,94,0.335,97,0.335,117,0.24,118,0.24,254,0.016,255,0.016,293,1.78,335,2.099,522,1.405,523,2.207,616,2.207,1110,3.065,1111,4.655,2245,4.76,2246,6.986,2247,7.223,2248,6.555,2249,5.533,2250,5.533,2251,6.555]],["title/classes/User.html",[118,0.161,247,0.444]],["body/classes/User.html",[3,0.201,4,0.201,8,0.176,38,0.126,39,0.321,40,1.319,48,0.5,52,0.425,57,0.501,59,0.425,60,0.019,61,0.476,62,0.367,63,0.552,68,0.395,75,2.66,117,0.201,118,0.201,199,1.053,247,0.702,254,0.014,255,0.014,282,0.984,293,1.945,393,4.199,394,1.094,775,3.244,1243,6.032,1244,6.032,1245,6.032,1246,6.032,1247,6.032,1248,5.845,1293,5.061,1294,5.061,1295,5.061,1296,5.061,1297,5.061,1298,5.061,1299,5.061,1300,5.061,1301,3.99,2252,4.638,2253,3.99,2254,5.883,2255,5.883,2256,7.435,2257,4.638,2258,4.638,2259,4.638,2260,4.638,2261,4.638,2262,4.638,2263,4.638,2264,4.638,2265,4.638,2266,4.638,2267,4.638,2268,4.638,2269,4.638,2270,4.638,2271,4.638,2272,4.638,2273,4.638,2274,4.638]],["title/injectables/UserAuthService.html",[354,1.646,522,0.797]],["body/injectables/UserAuthService.html",[3,0.197,4,0.138,8,0.12,38,0.087,39,0.249,40,1.257,46,1.791,47,1.494,48,0.387,49,3.051,52,0.291,57,0.501,59,0.639,60,0.019,61,0.487,62,0.361,63,0.549,68,0.621,69,3.055,73,0.69,74,0.69,94,0.387,97,0.192,116,0.785,117,0.138,118,0.138,119,1.424,126,2.815,129,1.669,130,1.205,171,0.503,199,1.108,242,0.503,247,0.805,254,0.011,255,0.011,282,0.972,335,1.205,354,2.016,384,0.785,393,4.041,394,1.644,424,3.747,467,1.922,489,2.047,522,0.976,523,1.267,527,3.836,565,3.686,598,2.727,603,1.572,613,1.777,616,1.267,710,2.221,725,2.732,735,2.732,736,2.732,775,3.185,792,2.047,998,3.498,1013,5.295,1042,2.732,1204,5.002,1227,4.72,1232,5.002,1806,2.732,1807,3.917,1815,2.732,1923,3.917,1925,3.917,1930,3.917,1932,3.917,1948,2.732,2275,2.732,2276,7.058,2277,5.323,2278,5.323,2279,5.323,2280,4.554,2281,5.814,2282,5.814,2283,4.554,2284,5.814,2285,4.554,2286,4.554,2287,4.554,2288,4.554,2289,3.176,2290,4.554,2291,4.554,2292,3.176,2293,3.176,2294,3.176,2295,3.176,2296,4.554,2297,3.176,2298,3.176,2299,4.554,2300,3.176,2301,3.176,2302,4.554,2303,3.176,2304,4.554,2305,3.176,2306,3.176,2307,3.176,2308,4.554,2309,3.176,2310,4.554,2311,3.176,2312,4.554,2313,3.176,2314,4.554,2315,3.176,2316,3.176,2317,3.176,2318,3.176,2319,4.554,2320,3.176,2321,3.176,2322,3.176,2323,4.579,2324,3.176,2325,3.176,2326,3.176,2327,3.176,2328,3.176,2329,3.176,2330,3.176,2331,3.176,2332,3.176,2333,3.176,2334,3.176,2335,3.176,2336,3.176,2337,3.176,2338,3.176,2339,4.554,2340,5.323,2341,3.176,2342,3.176,2343,3.176,2344,3.176,2345,3.176,2346,3.176,2347,3.176,2348,4.554,2349,3.176,2350,3.176,2351,3.176,2352,3.176,2353,4.554,2354,3.176,2355,3.176,2356,3.176,2357,3.176,2358,3.176,2359,3.176,2360,3.176,2361,4.554,2362,3.176,2363,3.176,2364,3.176,2365,3.176,2366,3.176,2367,3.176,2368,3.176,2369,3.176,2370,4.554,2371,3.176,2372,4.554,2373,3.176,2374,3.176,2375,3.176]],["title/components/UserCreatedSnackbarComponent.html",[0,0.122,246,0.558]],["body/components/UserCreatedSnackbarComponent.html",[0,0.205,1,0.646,2,0.889,3,0.187,4,0.187,5,0.719,6,0.719,7,0.719,8,0.163,12,0.988,14,0.545,17,0.646,18,1.246,19,1.312,20,1.047,22,0.889,23,0.797,24,0.719,34,0.936,36,0.936,38,0.117,39,0.306,43,1.074,57,0.286,60,0.018,61,0.414,73,0.483,74,0.483,94,0.339,97,0.26,112,0.646,113,0.889,117,0.187,118,0.187,167,0.719,168,0.936,169,0.889,170,0.578,171,1.047,172,0.719,173,0.936,174,0.646,175,0.719,176,0.646,177,0.719,178,0.682,179,0.936,180,0.646,181,0.682,182,0.719,183,0.646,184,0.719,185,0.646,186,0.719,187,0.646,188,0.889,189,0.646,190,0.936,191,0.646,192,0.646,193,0.719,194,0.646,195,0.842,196,0.719,197,0.612,198,0.646,199,0.646,200,0.936,201,0.646,202,1.042,203,0.646,204,0.719,205,0.646,206,0.719,207,0.646,208,0.936,209,0.936,210,0.646,211,0.646,212,0.719,213,0.646,214,0.719,215,0.646,216,1.055,217,0.646,218,0.719,219,0.646,220,0.719,221,0.646,222,0.719,223,0.646,224,0.646,225,0.682,226,0.719,227,0.646,228,0.514,229,0.719,230,0.682,231,0.719,232,0.719,233,0.646,234,0.719,235,0.719,236,0.682,237,0.936,238,0.719,239,0.646,240,0.719,241,0.646,242,0.682,243,0.719,244,0.646,245,0.719,246,0.992,247,0.854,248,1.181,249,1.042,250,0.682,251,0.612,252,0.682,253,0.719,254,0.013,255,0.013,380,2.409,381,2.261,471,4.307,603,2.13,984,4.823,1156,3.01,1157,4.307,1158,4.307,1159,4.791,1160,4.307,1161,3.306,1162,3.306,1352,4.307,2376,4.823,2377,5.607]],["title/injectables/UserManagementService.html",[268,2.227,522,0.797]],["body/injectables/UserManagementService.html",[3,0.184,4,0.184,8,0.161,38,0.116,41,1.846,47,1.499,48,0.472,52,0.509,56,1.702,57,0.48,59,0.641,60,0.019,61,0.465,62,0.342,63,0.551,68,0.606,69,2.917,75,2.492,94,0.397,97,0.256,103,1.265,109,1,117,0.184,118,0.184,119,1.341,125,1.983,247,0.932,254,0.013,255,0.013,263,3.884,265,4.986,268,3.325,282,0.971,284,4.595,297,1.983,330,3.676,332,2.228,335,1.608,384,1.373,394,1.705,522,1.19,523,1.691,591,3.934,616,1.691,844,4.265,963,3.257,1468,2.539,1994,4.777,1996,3.648,2028,3.648,2029,3.648,2130,3.257,2143,3.648,2378,6.291,2379,6.569,2380,6.569,2381,5.553,2382,5.553,2383,5.553,2384,5.553,2385,5.553,2386,4.24,2387,4.24,2388,4.24,2389,5.553,2390,4.24,2391,5.553,2392,4.24,2393,5.553,2394,4.24,2395,5.553,2396,4.24,2397,4.24,2398,4.24,2399,5.553,2400,4.24,2401,5.553,2402,4.24,2403,4.24,2404,5.553,2405,4.24,2406,4.24,2407,4.24,2408,4.24,2409,4.24,2410,4.24,2411,5.553,2412,4.24]],["title/injectables/UtilityService.html",[522,0.797,1957,2.601]],["body/injectables/UtilityService.html",[3,0.217,4,0.217,8,0.189,38,0.136,39,0.337,41,1.839,48,0.525,52,0.458,56,1.808,57,0.476,59,0.612,60,0.019,61,0.444,62,0.342,63,0.526,68,0.569,73,0.561,74,0.561,94,0.404,97,0.302,103,1.491,117,0.217,118,0.217,228,0.833,254,0.015,255,0.015,282,0.925,335,1.896,383,2.475,441,3.836,467,1.805,522,1.321,523,1.994,616,1.994,631,2.994,1441,4.301,1599,2.994,1957,4.312,2157,5.751,2159,5.304,2166,5.304,2168,4.301,2176,4.301,2186,5.304,2187,5.304,2188,5.304,2189,5.304,2190,5.304,2191,5.304,2192,5.304,2193,5.304,2194,5.304,2195,5.304,2196,5.304,2197,5.304,2224,5.304,2233,4.301,2234,4.301,2235,4.301,2236,4.301,2237,4.301,2238,4.301,2413,4.301,2414,6.685,2415,6.165,2416,4.999,2417,4.999,2418,4.999,2419,4.999,2420,4.999,2421,4.999]],["title/coverage.html",[2422,4.375]],["body/coverage.html",[0,0.256,1,0.544,8,0.137,9,2.477,10,3.351,11,3.308,12,1.106,13,3.837,14,0.724,15,3.494,16,3.837,20,0.977,42,1.445,47,0.776,56,0.939,60,0.019,62,0.177,112,0.544,113,0.977,118,0.157,170,0.487,174,0.544,176,0.544,178,0.574,180,0.544,183,0.544,185,0.544,187,0.544,188,0.977,189,0.544,191,0.544,192,0.75,194,0.544,195,0.925,197,0.515,198,0.544,201,0.544,203,0.544,205,0.544,207,0.544,210,0.544,211,0.544,213,0.75,215,0.544,217,0.544,219,0.544,221,0.544,223,0.544,224,0.544,225,0.574,227,0.544,228,0.432,230,0.574,233,0.544,236,0.574,239,0.544,241,0.544,244,0.544,246,0.544,247,0.596,248,0.792,251,0.515,254,0.012,255,0.012,266,1.694,268,2.169,327,3.488,334,3.116,354,1.604,375,1.903,378,2.534,418,3.74,419,3.116,467,1.308,471,2.783,519,3.023,521,3.116,522,1.575,524,3.116,717,2.783,718,3.116,719,3.116,759,3.837,760,3.837,784,2.534,817,3.871,818,2.534,819,3.116,855,2.783,856,3.116,861,2.169,884,3.219,889,2.783,890,3.116,898,1.903,991,3.837,992,3.837,1071,2.783,1072,3.116,1086,3.116,1087,3.116,1110,1.694,1155,3.116,1156,3.998,1164,3.116,1176,3.116,1199,3.116,1200,2.783,1201,3.116,1217,3.116,1268,2.534,1323,3.837,1336,2.783,1354,3.116,1355,2.783,1356,3.219,1357,3.837,1387,2.783,1402,2.783,1403,3.116,1414,2.335,1437,3.116,1452,2.783,1455,3.116,1460,3.116,1528,3.116,1536,3.116,1537,2.783,1538,3.116,1685,3.116,1847,3.116,1848,3.116,1860,3.116,1882,2.534,1883,3.116,1886,2.783,1887,3.116,1919,3.116,1920,3.116,1952,3.116,1953,3.116,1954,3.116,1957,2.534,1987,2.783,1988,3.116,2041,3.116,2064,3.116,2065,3.116,2129,3.116,2130,3.837,2152,3.116,2245,3.116,2253,3.116,2275,3.116,2376,3.116,2378,3.116,2413,3.116,2422,3.116,2423,3.623,2424,3.623,2425,3.623,2426,5.717,2427,4.297,2428,6.162,2429,3.116,2430,6.162,2431,3.116,2432,3.116,2433,3.116,2434,3.623,2435,3.623,2436,4.995,2437,3.623,2438,3.623,2439,3.623,2440,6.464,2441,5.717,2442,6.162,2443,3.623,2444,5.717,2445,5.717,2446,6.162,2447,3.623,2448,3.623,2449,5.717,2450,3.623,2451,3.623,2452,4.995,2453,3.623,2454,3.623,2455,3.623,2456,3.623,2457,4.995,2458,3.623,2459,4.995,2460,5.717,2461,4.995,2462,4.995,2463,4.995,2464,3.623,2465,3.623,2466,3.623,2467,3.116,2468,3.116,2469,3.623,2470,3.623]],["title/dependencies.html",[2471,2.667,2472,3.85]],["body/dependencies.html",[60,0.019,97,0.341,108,2.037,115,1.268,116,1.395,192,0.847,254,0.016,255,0.016,1082,4.853,1083,4.853,1770,3.946,2472,4.853,2473,5.642,2474,7.678,2475,5.642,2476,6.631,2477,5.642,2478,5.642,2479,5.642,2480,5.642,2481,7.043,2482,6.631,2483,5.642,2484,5.642,2485,5.642,2486,4.853,2487,5.642,2488,5.642,2489,5.642,2490,5.642,2491,5.642,2492,5.642,2493,5.642,2494,5.642]],["title/miscellaneous/enumerations.html",[2495,2.169,2496,3.85]],["body/miscellaneous/enumerations.html",[38,0.161,60,0.018,74,0.827,105,3.583,216,1.024,254,0.016,255,0.016,467,2.462,625,4.396,971,4.77,2495,4.142,2496,5.094,2497,5.921,2498,6.82,2499,5.921]],["title/index.html",[38,0.085,2500,3.101,2501,3.101]],["body/index.html",[60,0.016,130,2.212,181,0.924,213,0.876,254,0.016,255,0.016,370,3.493,1250,5.018,2486,5.018,2502,7.14,2503,5.833,2504,7.14,2505,7.14,2506,5.018,2507,5.833,2508,5.833,2509,5.833,2510,5.833,2511,5.833,2512,5.833,2513,5.833,2514,5.833,2515,5.833,2516,5.833,2517,7.14,2518,5.833,2519,5.833,2520,5.833,2521,4.481,2522,5.833,2523,5.833]],["title/modules.html",[2524,4.375]],["body/modules.html",[60,0.016,254,0.016,255,0.016,2524,5.268]],["title/overview.html",[2521,3.907]],["body/overview.html",[2,0.957,60,0.016,118,0.262,170,0.811,254,0.016,255,0.016,520,3.891,523,2.408,631,4.13,2521,4.638,2525,6.038,2526,6.038,2527,6.038]],["title/properties.html",[39,0.245,2471,2.667]],["body/properties.html",[39,0.333,60,0.017,254,0.016,255,0.016,2506,5.245,2528,6.098]],["title/miscellaneous/variables.html",[2495,2.169,2529,3.85]],["body/miscellaneous/variables.html",[38,0.152,60,0.019,62,0.322,73,0.811,74,0.811,254,0.016,255,0.016,256,5.661,1763,4.791,2323,4.791,2427,4.791,2429,6.026,2431,6.026,2432,4.791,2433,5.661,2467,4.791,2468,5.661,2495,3.895,2529,4.791,2530,5.569,2531,5.569,2532,6.58,2533,6.58,2534,5.569,2535,5.569,2536,5.569,2537,5.569,2538,5.569,2539,5.569,2540,5.569,2541,5.569,2542,5.569,2543,5.569,2544,5.569,2545,5.569,2546,5.569]]],"invertedIndex":[["",{"_index":60,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":327,"title":{},"body":{"components/AddMemberCardComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/MainMenuComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SearchResultsComponent.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2528,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":2494,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2430,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2444,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2441,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2446,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2462,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2426,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2450,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2449,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2460,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2445,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2459,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2437,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2451,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":2458,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2434,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2463,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":2435,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":2439,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":2456,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2452,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2457,"title":{},"body":{"coverage.html":{}}}],["0/51",{"_index":2448,"title":{},"body":{"coverage.html":{}}}],["0/54",{"_index":2454,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2461,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2442,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2436,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2440,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":812,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["1",{"_index":631,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogEditChannelComponent.html":{},"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{},"injectables/UtilityService.html":{},"overview.html":{}}}],["1.jpg",{"_index":455,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["1000",{"_index":1943,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["100dvw",{"_index":949,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["1024",{"_index":1657,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["1200",{"_index":1521,"title":{},"body":{"components/MainPageComponent.html":{}}}],["13",{"_index":2526,"title":{},"body":{"overview.html":{}}}],["17.0.1",{"_index":2479,"title":{},"body":{"dependencies.html":{}}}],["17.2.0",{"_index":2474,"title":{},"body":{"dependencies.html":{}}}],["17.2.2",{"_index":2486,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["17.3.4",{"_index":2476,"title":{},"body":{"dependencies.html":{}}}],["1970/01/01",{"_index":2180,"title":{},"body":{"components/ThreadComponent.html":{}}}],["2.3.0",{"_index":2492,"title":{},"body":{"dependencies.html":{}}}],["2.jpg",{"_index":456,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["2000",{"_index":412,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["282px",{"_index":1400,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["3",{"_index":2507,"title":{},"body":{"index.html":{}}}],["3.jpg",{"_index":457,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["35",{"_index":2525,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1249,"title":{},"body":{"components/LoginComponent.html":{}}}],["4.18.2",{"_index":2489,"title":{},"body":{"dependencies.html":{}}}],["4.jpg",{"_index":458,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["5",{"_index":2527,"title":{},"body":{"overview.html":{}}}],["5.jpg",{"_index":459,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["500",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/MessageInputComponent.html":{}}}],["5000",{"_index":1671,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["500kb",{"_index":1670,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["500px",{"_index":888,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["554px",{"_index":139,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogShowMembersComponent.html":{}}}],["6",{"_index":2120,"title":{},"body":{"components/SignInComponent.html":{}}}],["6.jpg",{"_index":460,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["7.8.0",{"_index":2490,"title":{},"body":{"dependencies.html":{}}}],["768",{"_index":1519,"title":{},"body":{"components/MainPageComponent.html":{}}}],["9.2.0",{"_index":2487,"title":{},"body":{"dependencies.html":{}}}],["_ngzone",{"_index":910,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["_snackbar",{"_index":352,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["a.click",{"_index":1839,"title":{},"body":{"injectables/MessageService.html":{}}}],["a.download",{"_index":1837,"title":{},"body":{"injectables/MessageService.html":{}}}],["a.href",{"_index":1836,"title":{},"body":{"injectables/MessageService.html":{}}}],["a.style.display",{"_index":1834,"title":{},"body":{"injectables/MessageService.html":{}}}],["abbrechen",{"_index":1070,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["activatedroute",{"_index":438,"title":{},"body":{"components/AvatarComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{}}}],["active_members",{"_index":82,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["activechannelid",{"_index":1407,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["actual_component",{"_index":253,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["add",{"_index":20,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["addchannel",{"_index":531,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["addchannel(channel",{"_index":550,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["addchannelcardcomponent",{"_index":1,"title":{"components/AddChannelCardComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["adddoc",{"_index":606,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["adddoc(ref",{"_index":658,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["adddocument",{"_index":1546,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["adddocument(event",{"_index":1564,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["addemoji",{"_index":1077,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["addemoji(event",{"_index":1079,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["addmembercardcomponent",{"_index":112,"title":{"components/AddMemberCardComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["addmessage",{"_index":1693,"title":{},"body":{"injectables/MessageService.html":{}}}],["addmessage(message",{"_index":1712,"title":{},"body":{"injectables/MessageService.html":{}}}],["addreaction",{"_index":1888,"title":{},"body":{"injectables/ReactionService.html":{}}}],["addreaction(reaction",{"_index":1894,"title":{},"body":{"injectables/ReactionService.html":{}}}],["adresse",{"_index":746,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["aktiv",{"_index":1150,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["aktualisieren",{"_index":851,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["allchannelsquery",{"_index":702,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["alle",{"_index":322,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["allmessages",{"_index":1686,"title":{},"body":{"injectables/MessageService.html":{}}}],["allowedtypes",{"_index":1659,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["allowedtypes.includes(file.type",{"_index":1665,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["anchortopleft",{"_index":814,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["anchortopright",{"_index":815,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["anderen",{"_index":165,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["angular",{"_index":2504,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2473,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2475,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/portal",{"_index":791,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["angular/cdk/text",{"_index":941,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["angular/common",{"_index":115,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2477,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":97,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":2478,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/auth",{"_index":736,"title":{},"body":{"components/CheckEmailComponent.html":{},"injectables/UserAuthService.html":{}}}],["angular/fire/firestore",{"_index":613,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"injectables/UserAuthService.html":{}}}],["angular/fire/storage",{"_index":1769,"title":{},"body":{"injectables/MessageService.html":{}}}],["angular/forms",{"_index":108,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/LoginComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2480,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":101,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["angular/material/card",{"_index":98,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{}}}],["angular/material/checkbox",{"_index":2104,"title":{},"body":{"components/SignInComponent.html":{}}}],["angular/material/dialog",{"_index":102,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{}}}],["angular/material/expansion",{"_index":1429,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["angular/material/icon",{"_index":99,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["angular/material/input",{"_index":100,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["angular/material/progress",{"_index":1270,"title":{},"body":{"components/LoginComponent.html":{}}}],["angular/material/radio",{"_index":296,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["angular/material/snack",{"_index":380,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["angular/platform",{"_index":2481,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":116,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":2485,"title":{},"body":{"dependencies.html":{}}}],["anmelden",{"_index":1320,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginSnackbarComponent.html":{}}}],["anmeldung",{"_index":1306,"title":{},"body":{"components/LoginComponent.html":{}}}],["anonymimg",{"_index":1358,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["antworten",{"_index":1646,"title":{},"body":{"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{}}}],["app",{"_index":19,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["app.component.html",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":174,"title":{"components/AppComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2433,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application/pdf",{"_index":1664,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["applicationconfig",{"_index":2533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applyactioncode",{"_index":2320,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["applyactioncode(auth",{"_index":2346,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["applyfilters",{"_index":1989,"title":{},"body":{"injectables/SearchService.html":{}}}],["applyfilters(searchterm",{"_index":1999,"title":{},"body":{"injectables/SearchService.html":{}}}],["appopenprofile",{"_index":252,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"directives/OpenProfileDirective.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["april",{"_index":2189,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["arbeit",{"_index":1312,"title":{},"body":{"components/LoginComponent.html":{}}}],["arguments",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/MainPageComponent.html":{}}}],["array",{"_index":663,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["array.from",{"_index":686,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["assets/img/avatar",{"_index":454,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["assets/img/mail.png",{"_index":1262,"title":{},"body":{"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["assets/img/mail_b.png",{"_index":1305,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets/img/person.png",{"_index":453,"title":{},"body":{"components/AvatarComponent.html":{},"components/MainHeaderComponent.html":{}}}],["assets/img/person_filled.png",{"_index":2101,"title":{},"body":{"components/SignInComponent.html":{}}}],["async",{"_index":49,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{}}}],["attachements",{"_index":1535,"title":{},"body":{"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["august",{"_index":2193,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["aus",{"_index":510,"title":{},"body":{"components/AvatarComponent.html":{}}}],["auth",{"_index":2276,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.currentuser",{"_index":2350,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["autosize",{"_index":894,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["avatar",{"_index":420,"title":{},"body":{"components/AvatarComponent.html":{}}}],["avatar'},{'name",{"_index":177,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["avatar.component.html",{"_index":421,"title":{},"body":{"components/AvatarComponent.html":{}}}],["avatar.component.scss",{"_index":422,"title":{},"body":{"components/AvatarComponent.html":{}}}],["avatar/avatar.component",{"_index":1338,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["avatarcomponent",{"_index":176,"title":{"components/AvatarComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["avatars",{"_index":423,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["await",{"_index":126,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{}}}],["backend",{"_index":2515,"title":{},"body":{"index.html":{}}}],["backtochannels",{"_index":1362,"title":{},"body":{"components/MainHeaderComponent.html":{},"injectables/SharedService.html":{}}}],["backtochannelssubject",{"_index":2042,"title":{},"body":{"injectables/SharedService.html":{}}}],["bar",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/LoginComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/ResetPasswordComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["bar'},{'name",{"_index":238,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["bar.component",{"_index":1388,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuComponent.html":{}}}],["bar.component.ts",{"_index":2455,"title":{},"body":{"coverage.html":{}}}],["bar/search",{"_index":1387,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuComponent.html":{},"coverage.html":{}}}],["bari",{"_index":1185,"title":{},"body":{"components/ImprintComponent.html":{}}}],["bearbeiten",{"_index":979,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["bearbeitet",{"_index":1049,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["behaviorsubject",{"_index":2145,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["behaviorsubject(null",{"_index":2142,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["bei",{"_index":1311,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginPageComponent.html":{}}}],["beim",{"_index":850,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["beispiel",{"_index":154,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["benutzer",{"_index":952,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["ber",{"_index":754,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["berein",{"_index":1951,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["bereits",{"_index":161,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/SignInComponent.html":{}}}],["beschreibung",{"_index":166,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["besten",{"_index":147,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["bestimmte",{"_index":324,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["bild",{"_index":514,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/MessageInputComponent.html":{}}}],["bitte",{"_index":162,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/MessageInputComponent.html":{},"components/SignInComponent.html":{}}}],["blob",{"_index":1829,"title":{},"body":{"injectables/MessageService.html":{}}}],["bloburl",{"_index":1719,"title":{},"body":{"injectables/MessageService.html":{}}}],["boolean",{"_index":293,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/AvatarComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"interfaces/Message.html":{},"injectables/ProfileService.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":2468,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":2544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":137,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/MainHeaderComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["break",{"_index":493,"title":{},"body":{"components/AvatarComponent.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["browser",{"_index":2482,"title":{},"body":{"dependencies.html":{}}}],["button",{"_index":67,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{}}}],["button.getboundingclientrect",{"_index":805,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["buttonused",{"_index":798,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["cancelediting",{"_index":902,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["card",{"_index":21,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{}}}],["card'},{'name",{"_index":173,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["card.component",{"_index":114,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/MainMenuChannelsComponent.html":{}}}],["card.component.html",{"_index":35,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{}}}],["card.component.scss",{"_index":37,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{}}}],["card.component.ts",{"_index":16,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:28",{"_index":290,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:29",{"_index":289,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:30",{"_index":287,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:31",{"_index":291,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:32",{"_index":275,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:35",{"_index":286,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:36",{"_index":295,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:37",{"_index":285,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:38",{"_index":294,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:39",{"_index":288,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:40",{"_index":292,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:41",{"_index":91,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:42",{"_index":85,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:44",{"_index":277,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:50",{"_index":280,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:51",{"_index":58,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:54",{"_index":89,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:55",{"_index":88,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:56",{"_index":86,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:57",{"_index":93,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{}}}],["card.component.ts:58",{"_index":87,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:59",{"_index":92,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:63",{"_index":66,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{}}}],["card.component.ts:75",{"_index":283,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:77",{"_index":71,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:88",{"_index":276,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card/add",{"_index":15,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/MainMenuChannelsComponent.html":{},"coverage.html":{}}}],["case",{"_index":811,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["catch((error",{"_index":710,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserAuthService.html":{}}}],["catch(error",{"_index":848,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["cdktextareaautosize",{"_index":925,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["changeavatar",{"_index":429,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["changeavatar(i",{"_index":440,"title":{},"body":{"components/AvatarComponent.html":{}}}],["changeavatar(i:number",{"_index":486,"title":{},"body":{"components/AvatarComponent.html":{}}}],["changechannelname",{"_index":903,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["changecurrentuser",{"_index":2280,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["changecurrentuser(name",{"_index":2291,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["changeemailonly",{"_index":1000,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["changeemailonly(email",{"_index":1009,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["changeicon",{"_index":1228,"title":{},"body":{"components/LoginComponent.html":{}}}],["changeicon(focus",{"_index":1238,"title":{},"body":{"components/LoginComponent.html":{}}}],["changeiconmail",{"_index":2075,"title":{},"body":{"components/SignInComponent.html":{}}}],["changeiconmail(focus",{"_index":2082,"title":{},"body":{"components/SignInComponent.html":{}}}],["changeiconname",{"_index":2076,"title":{},"body":{"components/SignInComponent.html":{}}}],["changeiconname(focus",{"_index":2084,"title":{},"body":{"components/SignInComponent.html":{}}}],["changemessage",{"_index":1694,"title":{},"body":{"injectables/MessageService.html":{}}}],["changemessage(messageid",{"_index":1714,"title":{},"body":{"injectables/MessageService.html":{}}}],["changenameonly",{"_index":1001,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["changenameonly(displayname",{"_index":1011,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["changepassword",{"_index":1925,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/UserAuthService.html":{}}}],["changepassword(newpassword",{"_index":1930,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/UserAuthService.html":{}}}],["changeuseravatar",{"_index":1002,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["changeuseravatar(i",{"_index":1014,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["channel",{"_index":14,"title":{"interfaces/Channel.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["channel'},{'name",{"_index":179,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["channel.channel_type",{"_index":624,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/MainMenuChannelsComponent.html":{},"components/MessageInputComponent.html":{},"injectables/SearchService.html":{}}}],["channel.component.html",{"_index":892,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.scss",{"_index":893,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts",{"_index":890,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"coverage.html":{}}}],["channel.component.ts:102",{"_index":919,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:114",{"_index":922,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:121",{"_index":915,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:22",{"_index":932,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:23",{"_index":931,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:24",{"_index":936,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:25",{"_index":935,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:26",{"_index":934,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:27",{"_index":912,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:30",{"_index":930,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:32",{"_index":937,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:33",{"_index":928,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:35",{"_index":929,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:36",{"_index":933,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:39",{"_index":927,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:41",{"_index":920,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:48",{"_index":921,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:54",{"_index":918,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:60",{"_index":923,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:67",{"_index":924,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:77",{"_index":914,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:87",{"_index":916,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:96",{"_index":913,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.data",{"_index":639,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channel.id",{"_index":635,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogEditChannelComponent.html":{},"components/MainMenuChannelsComponent.html":{},"injectables/SearchService.html":{}}}],["channel.members",{"_index":1640,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["channel.members.includes(currentuserid",{"_index":715,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channel.members.includes(dm_target_id",{"_index":632,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channel.members.length",{"_index":630,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channel.members[0",{"_index":628,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channel.members[1",{"_index":629,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channel.name",{"_index":122,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MessageInputComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{}}}],["channel/channel.component",{"_index":1516,"title":{},"body":{"components/MainPageComponent.html":{}}}],["channel/dialog",{"_index":889,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/MessageInputComponent.html":{},"coverage.html":{}}}],["channel/message/message.component",{"_index":2210,"title":{},"body":{"components/ThreadComponent.html":{}}}],["channel_id",{"_index":560,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["channel_type",{"_index":83,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["channelcomponent",{"_index":178,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["channeldata",{"_index":638,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channeldata.members",{"_index":697,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channeldata.members.filter(memberid",{"_index":695,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channelexists",{"_index":895,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"injectables/SearchService.html":{}}}],["channelexists(channelid",{"_index":2001,"title":{},"body":{"injectables/SearchService.html":{}}}],["channelfirebaseservice",{"_index":56,"title":{"injectables/ChannelFirebaseService.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{}}}],["channelfound",{"_index":713,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channelid",{"_index":125,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"injectables/MessageService.html":{},"injectables/SearchService.html":{},"injectables/UserManagementService.html":{}}}],["channelinput",{"_index":1542,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["channelinput.innertext",{"_index":1607,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["channelname",{"_index":1639,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["channels",{"_index":141,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/MainMenuChannelsComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{}}}],["channels'},{'name",{"_index":218,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["channels.component",{"_index":1454,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["channels.component.html",{"_index":1405,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.scss",{"_index":1406,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts",{"_index":1403,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"coverage.html":{}}}],["channels.component.ts:24",{"_index":1422,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:25",{"_index":1415,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:29",{"_index":1421,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:30",{"_index":1424,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:31",{"_index":1428,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:32",{"_index":1425,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:33",{"_index":1427,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:34",{"_index":1423,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:35",{"_index":1426,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:40",{"_index":1419,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:47",{"_index":1416,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:53",{"_index":1420,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:58",{"_index":1417,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.filter((channel",{"_index":2031,"title":{},"body":{"injectables/SearchService.html":{}}}],["channels.foreach((channel",{"_index":667,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channels.some(channel",{"_index":2036,"title":{},"body":{"injectables/SearchService.html":{}}}],["channels/add",{"_index":13,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"coverage.html":{}}}],["channels/main",{"_index":1402,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"coverage.html":{}}}],["channelservice",{"_index":41,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["channelservice.channels",{"_index":1436,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channelservice.currentchannel.description",{"_index":983,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channelservice.currentchannel.name",{"_index":978,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channelservice.currentthread.name",{"_index":2240,"title":{},"body":{"components/ThreadComponent.html":{}}}],["channeltype",{"_index":1638,"title":{},"body":{"components/MessageInputComponent.html":{},"injectables/SearchService.html":{}}}],["channeltypeenum",{"_index":105,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/SearchService.html":{},"miscellaneous/enumerations.html":{}}}],["channeltypeenum.direct",{"_index":1125,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["channeltypeenum.main",{"_index":84,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["channeltypeenum.new",{"_index":594,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/MainMenuComponent.html":{}}}],["channeltypeenum.thread",{"_index":596,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["check",{"_index":181,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"index.html":{}}}],["checkactioncode",{"_index":2321,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["checkactioncode(auth",{"_index":2347,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["checkauth",{"_index":2281,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["checkauthloggedinasguest",{"_index":2282,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["checkbox",{"_index":2069,"title":{},"body":{"components/SignInComponent.html":{}}}],["checked",{"_index":2070,"title":{},"body":{"components/SignInComponent.html":{}}}],["checkemail",{"_index":2077,"title":{},"body":{"components/SignInComponent.html":{}}}],["checkemailcomponent",{"_index":180,"title":{"components/CheckEmailComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["checkemailexistence",{"_index":2283,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["checkemailexistence(email",{"_index":2296,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["checkiffileistoobig",{"_index":1547,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["checkurls",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["checkwheretosavemessage",{"_index":1548,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["checkwindowwidth",{"_index":2078,"title":{},"body":{"components/SignInComponent.html":{}}}],["cino",{"_index":1190,"title":{},"body":{"components/ImprintComponent.html":{}}}],["class",{"_index":118,"title":{"classes/User.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2252,"title":{},"body":{"classes/User.html":{}}}],["clearfilters",{"_index":1990,"title":{},"body":{"injectables/SearchService.html":{}}}],["cli",{"_index":2505,"title":{},"body":{"index.html":{}}}],["click",{"_index":1850,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["clone",{"_index":2513,"title":{},"body":{"index.html":{}}}],["closeavatardialog",{"_index":1003,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["closemenuifmobile",{"_index":269,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["closethread",{"_index":1111,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SearchResultsComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{}}}],["collection",{"_index":604,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["collection(this.firestore",{"_index":645,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["color",{"_index":260,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["command",{"_index":2522,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":33,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{}}}],["component",{"_index":0,"title":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["component,position",{"_index":1100,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["component_template",{"_index":172,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"overview.html":{}}}],["componenttype",{"_index":781,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["config",{"_index":2429,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmpasswordreset",{"_index":2322,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["confirmpasswordreset(auth",{"_index":2367,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["confirmpopup",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["console.error('fehler",{"_index":849,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["console.error(err",{"_index":1804,"title":{},"body":{"injectables/MessageService.html":{}}}],["console.error(error",{"_index":1948,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/UserAuthService.html":{}}}],["const",{"_index":119,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{}}}],["constructor",{"_index":52,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["constructor(auth",{"_index":2289,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["constructor(channelservice",{"_index":1441,"title":{},"body":{"components/MainMenuComponent.html":{},"injectables/UtilityService.html":{}}}],["constructor(customdialogservice",{"_index":1367,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{}}}],["constructor(dialog",{"_index":768,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["constructor(dialogref",{"_index":53,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{}}}],["constructor(messageservice",{"_index":2163,"title":{},"body":{"components/ThreadComponent.html":{}}}],["constructor(obj",{"_index":2254,"title":{},"body":{"classes/User.html":{}}}],["constructor(private",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/UtilityService.html":{}}}],["constructor(profileservice",{"_index":1851,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["constructor(public",{"_index":792,"title":{},"body":{"injectables/CustomDialogService.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/MainPageComponent.html":{},"injectables/UserAuthService.html":{}}}],["constructor(router",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginPageComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{}}}],["constructor(userauth",{"_index":1236,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(userservice",{"_index":1468,"title":{},"body":{"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/ProfileService.html":{},"injectables/SearchService.html":{},"injectables/UserManagementService.html":{}}}],["contact",{"_index":1197,"title":{},"body":{"components/ImprintComponent.html":{},"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{}}}],["container",{"_index":502,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["contains",{"_index":664,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["converttodate",{"_index":2159,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["converttodate(dateasnumber",{"_index":2166,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["cors",{"_index":1824,"title":{},"body":{"injectables/MessageService.html":{}}}],["coverage",{"_index":2422,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":654,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["createchannel",{"_index":50,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["createchannel(button",{"_index":64,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["created",{"_index":248,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["created_at",{"_index":77,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ThreadComponent.html":{}}}],["createelement",{"_index":1695,"title":{},"body":{"injectables/MessageService.html":{}}}],["createelement(bloburl",{"_index":1717,"title":{},"body":{"injectables/MessageService.html":{}}}],["createnewchannel",{"_index":532,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["createnewchannel(channel",{"_index":552,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["createnewdirectchannel",{"_index":1112,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["createnewdirectchannel(user_id",{"_index":1117,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["createurl",{"_index":1549,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["createurl(file",{"_index":1568,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["createuser",{"_index":430,"title":{},"body":{"components/AvatarComponent.html":{}}}],["createuserobject",{"_index":1229,"title":{},"body":{"components/LoginComponent.html":{}}}],["createuserobject(user",{"_index":1241,"title":{},"body":{"components/LoginComponent.html":{}}}],["createuserwithemailandpassword",{"_index":2327,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["createuserwithemailandpassword(this.auth",{"_index":2368,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["creator",{"_index":79,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["ctrl/ngx",{"_index":1082,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{},"dependencies.html":{}}}],["currentchannel",{"_index":525,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowMembersComponent.html":{}}}],["currentchannel.members",{"_index":1102,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["currentchannel.name",{"_index":853,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["currentchannel['members",{"_index":689,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["currentdate",{"_index":2155,"title":{},"body":{"components/ThreadComponent.html":{}}}],["currentfile",{"_index":1543,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["currentfile.name",{"_index":1683,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["currenthread",{"_index":2156,"title":{},"body":{"components/ThreadComponent.html":{}}}],["currentmessage",{"_index":1687,"title":{},"body":{"injectables/MessageService.html":{}}}],["currentthread",{"_index":526,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["currentuser",{"_index":424,"title":{},"body":{"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{},"injectables/UserAuthService.html":{}}}],["currentuser?.name",{"_index":509,"title":{},"body":{"components/AvatarComponent.html":{}}}],["currentuser_id",{"_index":572,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["currentuserid",{"_index":425,"title":{},"body":{"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{}}}],["custom",{"_index":795,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"injectables/ProfileService.html":{}}}],["customdialogservice",{"_index":42,"title":{"injectables/CustomDialogService.html":{}},"body":{"components/AddChannelCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MessageInputComponent.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["d",{"_index":2224,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["d.getdate",{"_index":2226,"title":{},"body":{"components/ThreadComponent.html":{}}}],["d.getday",{"_index":2228,"title":{},"body":{"components/ThreadComponent.html":{}}}],["d.getmonth",{"_index":2230,"title":{},"body":{"components/ThreadComponent.html":{}}}],["dabbuble",{"_index":1382,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["dabubble",{"_index":370,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/SignInComponent.html":{},"index.html":{}}}],["das",{"_index":682,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["data",{"_index":580,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["data.active_members",{"_index":652,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["data.channel_id",{"_index":1779,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.channel_type",{"_index":653,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["data.created_at",{"_index":649,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["data.creator",{"_index":650,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["data.description",{"_index":648,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["data.is_deleted",{"_index":1785,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.last_reply",{"_index":1787,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.lasttimeused",{"_index":1909,"title":{},"body":{"injectables/ReactionService.html":{}}}],["data.members",{"_index":651,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["data.message.attachements",{"_index":1783,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.message.reactions",{"_index":1782,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.message.text",{"_index":1781,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.message_id",{"_index":1906,"title":{},"body":{"injectables/ReactionService.html":{}}}],["data.modified_at",{"_index":1784,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.name",{"_index":647,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["data.thread_id",{"_index":1780,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.total_replies",{"_index":1786,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.unicode",{"_index":1908,"title":{},"body":{"injectables/ReactionService.html":{}}}],["data.user_id",{"_index":1778,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.users",{"_index":1907,"title":{},"body":{"injectables/ReactionService.html":{}}}],["date",{"_index":2176,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["date().gettime",{"_index":1124,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MessageInputComponent.html":{}}}],["date(dateasnumber",{"_index":2233,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["date(dateinput",{"_index":2225,"title":{},"body":{"components/ThreadComponent.html":{}}}],["date.getdate",{"_index":2234,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["date.getfullyear",{"_index":2238,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["date.getmonth",{"_index":2236,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["date.now",{"_index":78,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["dateasnumber",{"_index":2168,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["datei",{"_index":516,"title":{},"body":{"components/AvatarComponent.html":{},"components/MessageInputComponent.html":{}}}],["dateinput",{"_index":2171,"title":{},"body":{"components/ThreadComponent.html":{}}}],["dateityp",{"_index":1673,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["datenschutz",{"_index":1353,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["datenschutzerklärung",{"_index":2128,"title":{},"body":{"components/SignInComponent.html":{}}}],["day",{"_index":2227,"title":{},"body":{"components/ThreadComponent.html":{}}}],["decorators",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"directives/OpenProfileDirective.html":{}}}],["default",{"_index":73,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UtilityService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":57,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["dein",{"_index":1067,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/SignInComponent.html":{}}}],["deinem",{"_index":143,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/SignInComponent.html":{}}}],["deinen",{"_index":508,"title":{},"body":{"components/AvatarComponent.html":{}}}],["deiner",{"_index":2115,"title":{},"body":{"components/SignInComponent.html":{}}}],["deletechannel",{"_index":533,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["deletechannel(channelid",{"_index":555,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["deletechannelandmessages",{"_index":904,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["deletedoc",{"_index":609,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{}}}],["deletedoc(doc.ref",{"_index":1846,"title":{},"body":{"injectables/MessageService.html":{}}}],["deletedoc(docref",{"_index":700,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["deletefile",{"_index":1696,"title":{},"body":{"injectables/MessageService.html":{}}}],["deletefile(path",{"_index":1720,"title":{},"body":{"injectables/MessageService.html":{}}}],["deleteobject",{"_index":1767,"title":{},"body":{"injectables/MessageService.html":{}}}],["deleteobject(storageref",{"_index":1842,"title":{},"body":{"injectables/MessageService.html":{}}}],["dependencies",{"_index":2472,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["der",{"_index":511,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["description",{"_index":76,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["devspace",{"_index":1401,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuHeaderComponent.html":{}}}],["dezember",{"_index":2197,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["dialog",{"_index":43,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["dialog'},{'name",{"_index":214,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["dialog.component",{"_index":1389,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["dialog.component.html",{"_index":1202,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.component.scss",{"_index":1203,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1201,"title":{},"body":{"components/LogOutDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:16",{"_index":1206,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1210,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1211,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1209,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1207,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":1208,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.service",{"_index":111,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MessageInputComponent.html":{},"injectables/ProfileService.html":{}}}],["dialog.service.ts",{"_index":760,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"coverage.html":{}}}],["dialog.service.ts:19",{"_index":769,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:21",{"_index":789,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:24",{"_index":782,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:31",{"_index":779,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:36",{"_index":785,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:54",{"_index":788,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:64",{"_index":777,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:82",{"_index":771,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:92",{"_index":774,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog/log",{"_index":1200,"title":{},"body":{"components/LogOutDialogComponent.html":{},"components/MainHeaderComponent.html":{},"coverage.html":{}}}],["dialogaddmembercomponent",{"_index":183,"title":{"components/DialogAddMemberComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["dialogaddmembermobilecomponent",{"_index":185,"title":{"components/DialogAddMemberMobileComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["dialogeditchannelcomponent",{"_index":187,"title":{"components/DialogEditChannelComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["dialogeditprofilecomponent",{"_index":189,"title":{"components/DialogEditProfileComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["dialogemojipickercomponent",{"_index":191,"title":{"components/DialogEmojiPickerComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["dialogparams",{"_index":784,"title":{"interfaces/DialogParams.html":{}},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"coverage.html":{}}}],["dialogref",{"_index":44,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/MessageInputComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":1677,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["dialogshowmemberscomponent",{"_index":194,"title":{"components/DialogShowMembersComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["dialogshowprofilecomponent",{"_index":197,"title":{"components/DialogShowProfileComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["dich",{"_index":1644,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["die",{"_index":755,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/MessageInputComponent.html":{}}}],["dienen",{"_index":142,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["dienstag",{"_index":2204,"title":{},"body":{"components/ThreadComponent.html":{}}}],["diese",{"_index":747,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["diesem",{"_index":158,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["dieser",{"_index":982,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["dir",{"_index":1308,"title":{},"body":{"components/LoginComponent.html":{}}}],["direct",{"_index":625,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MessageInputComponent.html":{},"miscellaneous/enumerations.html":{}}}],["directchannels",{"_index":622,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["directchannels.find((channel",{"_index":627,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["direction",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["directive",{"_index":170,"title":{"directives/OpenProfileDirective.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"directives/OpenProfileDirective.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":250,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"directives/OpenProfileDirective.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["direktnachrichten",{"_index":1494,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["disabled",{"_index":1029,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/SignInComponent.html":{}}}],["displaychanneltime",{"_index":1958,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["displayname",{"_index":1013,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"injectables/UserAuthService.html":{}}}],["dm",{"_index":1461,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm'},{'name",{"_index":222,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["dm.component",{"_index":1453,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["dm.component.html",{"_index":1462,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.scss",{"_index":1463,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts",{"_index":1460,"title":{},"body":{"components/MainMenuDmComponent.html":{},"coverage.html":{}}}],["dm.component.ts:23",{"_index":1480,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:24",{"_index":1487,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:25",{"_index":1484,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:26",{"_index":1483,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:27",{"_index":1482,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:36",{"_index":1469,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:39",{"_index":1488,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:40",{"_index":1479,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:42",{"_index":1486,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:44",{"_index":1481,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:45",{"_index":1485,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:49",{"_index":1472,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:57",{"_index":1478,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:62",{"_index":1475,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:69",{"_index":1477,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:78",{"_index":1474,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:89",{"_index":1471,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:97",{"_index":1470,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm/main",{"_index":1452,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"coverage.html":{}}}],["dm_target_id",{"_index":570,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["doc",{"_index":607,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{}}}],["doc(collection(this.firestore",{"_index":646,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{}}}],["doc(this.getchannelsref",{"_index":669,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["doc(this.getmessagesref",{"_index":1801,"title":{},"body":{"injectables/MessageService.html":{}}}],["doc(this.getreactionsref",{"_index":1917,"title":{},"body":{"injectables/ReactionService.html":{}}}],["doc.id",{"_index":708,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["docref",{"_index":657,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["docref.id",{"_index":659,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["docsnap",{"_index":690,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["docsnap.data",{"_index":693,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["docsnap.exists",{"_index":692,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["docsnapshot",{"_index":674,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["docsnapshot.data",{"_index":684,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["docsnapshot.exists",{"_index":676,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["document.body.appendchild(a",{"_index":1838,"title":{},"body":{"injectables/MessageService.html":{}}}],["document.body.removechild(a",{"_index":1841,"title":{},"body":{"injectables/MessageService.html":{}}}],["document.createelement('a",{"_index":1833,"title":{},"body":{"injectables/MessageService.html":{}}}],["document.getelementbyid('addmemberbtn",{"_index":1097,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["document.getelementbyid('threadinput')?.focus",{"_index":2239,"title":{},"body":{"components/ThreadComponent.html":{}}}],["document.getelementbyid('userhead",{"_index":1133,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["document.queryselector('.cdk",{"_index":500,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["documentation",{"_index":2423,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["domain",{"_index":1271,"title":{},"body":{"components/LoginComponent.html":{}}}],["donnerstag",{"_index":2206,"title":{},"body":{"components/ThreadComponent.html":{}}}],["downloadfile",{"_index":1697,"title":{},"body":{"injectables/MessageService.html":{}}}],["downloadfile(path",{"_index":1722,"title":{},"body":{"injectables/MessageService.html":{}}}],["du",{"_index":1108,"title":{},"body":{"components/DialogShowMembersComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{}}}],["duplicatechannelname",{"_index":905,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["duplicatename",{"_index":45,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["duration",{"_index":411,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["dynamic",{"_index":2483,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":744,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["edit",{"_index":188,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["editchanneldescription",{"_index":896,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["editchannelname",{"_index":897,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["editcurrentuser",{"_index":1113,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["editcurrentuser(button",{"_index":1119,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["editform",{"_index":997,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["educational",{"_index":2509,"title":{},"body":{"index.html":{}}}],["eigenes",{"_index":513,"title":{},"body":{"components/AvatarComponent.html":{}}}],["ein",{"_index":155,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/CheckEmailComponent.html":{},"components/SignInComponent.html":{}}}],["eine",{"_index":1648,"title":{},"body":{"components/MessageInputComponent.html":{},"components/SignInComponent.html":{}}}],["einen",{"_index":164,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/SignInComponent.html":{}}}],["einmal",{"_index":1316,"title":{},"body":{"components/LoginComponent.html":{}}}],["el",{"_index":1370,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["element",{"_index":169,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"directives/OpenProfileDirective.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["element.classlist.add('animate",{"_index":503,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["element.classlist.remove('animate",{"_index":504,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["elementref",{"_index":1371,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MessageInputComponent.html":{},"directives/OpenProfileDirective.html":{},"components/SignInComponent.html":{}}}],["elref",{"_index":1852,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["email",{"_index":199,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["email'},{'name",{"_index":182,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["email.component.html",{"_index":721,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email.component.scss",{"_index":722,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email.component.ts",{"_index":719,"title":{},"body":{"components/CheckEmailComponent.html":{},"coverage.html":{}}}],["email.component.ts:19",{"_index":731,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email.component.ts:20",{"_index":726,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email.component.ts:25",{"_index":728,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email.component.ts:30",{"_index":729,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email.component.ts:40",{"_index":730,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email.component.ts:51",{"_index":727,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email/check",{"_index":718,"title":{},"body":{"components/CheckEmailComponent.html":{},"coverage.html":{}}}],["emailadresse",{"_index":1198,"title":{},"body":{"components/ImprintComponent.html":{}}}],["emailexists",{"_index":998,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{}}}],["emailexists(email",{"_index":2299,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["emailplaceholder",{"_index":1004,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["emailsnackbarcomponent",{"_index":198,"title":{"components/EmailSnackbarComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["emoji",{"_index":192,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["empfehlen",{"_index":1307,"title":{},"body":{"components/LoginComponent.html":{}}}],["enumerations",{"_index":2496,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["erfolgreich",{"_index":2377,"title":{},"body":{"components/UserCreatedSnackbarComponent.html":{}}}],["err",{"_index":1803,"title":{},"body":{"injectables/MessageService.html":{}}}],["error",{"_index":723,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{}}}],["error('channel",{"_index":678,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["error('netzwerkantwort",{"_index":1826,"title":{},"body":{"injectables/MessageService.html":{}}}],["errormessage",{"_index":1544,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["erstellen",{"_index":140,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/LoginPageComponent.html":{},"components/SignInComponent.html":{}}}],["erstellt",{"_index":984,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["event",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{}}}],["event.emoji.native",{"_index":1084,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["event.target",{"_index":1650,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["event.target.files[0",{"_index":480,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["event.target.innerwidth",{"_index":1520,"title":{},"body":{"components/MainPageComponent.html":{}}}],["existiert",{"_index":160,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/SignInComponent.html":{}}}],["export",{"_index":117,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["express",{"_index":2488,"title":{},"body":{"dependencies.html":{}}}],["falsches",{"_index":1314,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":90,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{}}}],["februar",{"_index":2187,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["fetch(url",{"_index":1822,"title":{},"body":{"injectables/MessageService.html":{}}}],["fetchsigninmethodsforemail",{"_index":2329,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["fetchsigninmethodsforemail(this.auth",{"_index":2339,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["ffnen",{"_index":1527,"title":{},"body":{"components/MainPageComponent.html":{}}}],["field",{"_index":942,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{}}}],["file.size",{"_index":1656,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["fileinput",{"_index":1579,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["filterchannels",{"_index":1991,"title":{},"body":{"injectables/SearchService.html":{}}}],["filterchannels(searchterm",{"_index":2004,"title":{},"body":{"injectables/SearchService.html":{}}}],["filterchannelsbytypeandprefix",{"_index":1992,"title":{},"body":{"injectables/SearchService.html":{}}}],["filterchannelsbytypeandprefix(prefix",{"_index":2006,"title":{},"body":{"injectables/SearchService.html":{}}}],["filteredchannels",{"_index":1961,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["filteredmessages",{"_index":1962,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["filteredusers",{"_index":262,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/SearchResultsComponent.html":{}}}],["filteredusers.length",{"_index":333,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["filtermessages",{"_index":1993,"title":{},"body":{"injectables/SearchService.html":{}}}],["filtermessages(searchterm",{"_index":2009,"title":{},"body":{"injectables/SearchService.html":{}}}],["filterusers",{"_index":1994,"title":{},"body":{"injectables/SearchService.html":{},"injectables/UserManagementService.html":{}}}],["filterusers(searchinput",{"_index":2385,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["filterusers(searchterm",{"_index":2011,"title":{},"body":{"injectables/SearchService.html":{}}}],["filterusersbyprefix",{"_index":1995,"title":{},"body":{"injectables/SearchService.html":{}}}],["filterusersbyprefix(prefix",{"_index":2013,"title":{},"body":{"injectables/SearchService.html":{}}}],["findcurrentuserid",{"_index":431,"title":{},"body":{"components/AvatarComponent.html":{}}}],["firebase",{"_index":2514,"title":{},"body":{"index.html":{}}}],["firebase.service/channelfirebase.service",{"_index":103,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["firebase.service/message.service",{"_index":944,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MessageInputComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{}}}],["firebase.service/user.auth.service",{"_index":382,"title":{},"body":{"components/AppComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{}}}],["firebase.service/user.service",{"_index":109,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/ProfileService.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"injectables/UserManagementService.html":{}}}],["firebase/auth",{"_index":2334,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["firebase/firestore",{"_index":615,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["firebase/storage",{"_index":1766,"title":{},"body":{"injectables/MessageService.html":{}}}],["firestore",{"_index":527,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{}}}],["focus",{"_index":1240,"title":{},"body":{"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["for(channel",{"_index":1435,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["for(member",{"_index":1101,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["for(message",{"_index":2241,"title":{},"body":{"components/ThreadComponent.html":{}}}],["for(user",{"_index":328,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["formcontrol",{"_index":1027,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/SearchResultsComponent.html":{}}}],["formgroup",{"_index":1026,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["formsmodule",{"_index":32,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/LoginComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{}}}],["freitag",{"_index":2207,"title":{},"body":{"components/ThreadComponent.html":{}}}],["function",{"_index":601,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/SharedService.html":{}}}],["further",{"_index":2516,"title":{},"body":{"index.html":{}}}],["geada",{"_index":1188,"title":{},"body":{"components/ImprintComponent.html":{}}}],["geben",{"_index":742,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/SignInComponent.html":{}}}],["gebraucht",{"_index":683,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["gefunden",{"_index":680,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["generated",{"_index":2503,"title":{},"body":{"index.html":{}}}],["gesendet",{"_index":1163,"title":{},"body":{"components/EmailSnackbarComponent.html":{}}}],["getallchannels",{"_index":534,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getalluserids",{"_index":2379,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["getauth",{"_index":2323,"title":{},"body":{"injectables/UserAuthService.html":{},"miscellaneous/variables.html":{}}}],["getchannelcreationtime",{"_index":2414,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getchanneldata",{"_index":1440,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["getchannelref",{"_index":535,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getchannelref(channel_id",{"_index":558,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getchannelsforcurrentuser",{"_index":536,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getchannelsref",{"_index":537,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getcreatorname",{"_index":906,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["getcreatorname(channelservice.currentchannel.creator",{"_index":986,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["getcreatorname(userid",{"_index":917,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["getcurrentchannel",{"_index":538,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getcurrentchannel(channel_id",{"_index":563,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getcurrentchannelid",{"_index":2380,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["getcurrentthread",{"_index":539,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getcurrentthread(thread_id",{"_index":566,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getdateformat",{"_index":2160,"title":{},"body":{"components/ThreadComponent.html":{}}}],["getdateformat(dateinput",{"_index":2169,"title":{},"body":{"components/ThreadComponent.html":{}}}],["getdirectchannelid",{"_index":540,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getdirectchannelid(currentuser_id",{"_index":569,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getdirectchanneluser",{"_index":1550,"title":{},"body":{"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{}}}],["getdoc",{"_index":610,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getdoc(docref",{"_index":691,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getdocs",{"_index":612,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{}}}],["getdocs(allchannelsquery",{"_index":704,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getdocs(q",{"_index":1844,"title":{},"body":{"injectables/MessageService.html":{}}}],["getdownloadurl",{"_index":1765,"title":{},"body":{"injectables/MessageService.html":{}}}],["getdownloadurl(storageref",{"_index":1817,"title":{},"body":{"injectables/MessageService.html":{}}}],["getfiledata",{"_index":1698,"title":{},"body":{"injectables/MessageService.html":{}}}],["getfiledata(path",{"_index":1724,"title":{},"body":{"injectables/MessageService.html":{}}}],["getfirestore",{"_index":2542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getmemberids",{"_index":2381,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["getmemberids(selectedusers",{"_index":2389,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["getmessagecreationtime",{"_index":2415,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getmessagecreationtime(message",{"_index":2419,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getmessageref",{"_index":1699,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmessageref(message_id",{"_index":1726,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmessagesfromchannel",{"_index":1700,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmessagesfromchannel(channel_id",{"_index":1729,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmessagesfromthread",{"_index":1701,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmessagesfromthread(thread_id",{"_index":1731,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmessagesref",{"_index":1702,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmetadata",{"_index":1768,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmetadata(storageref",{"_index":1818,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmobileposition",{"_index":761,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["getmobileposition(mobileposition",{"_index":770,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["getownprofilestatus",{"_index":1862,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getpanelclass",{"_index":762,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["getpanelclass(position",{"_index":773,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["getposition",{"_index":763,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["getposition(button",{"_index":776,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["getreactionsref",{"_index":1889,"title":{},"body":{"injectables/ReactionService.html":{}}}],["getselectedchannelid",{"_index":2132,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["getselecteduserid",{"_index":2133,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["getstorage",{"_index":1763,"title":{},"body":{"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["gettextareaplaceholdertext",{"_index":1551,"title":{},"body":{"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{}}}],["getting",{"_index":2500,"title":{"index.html":{}},"body":{}}],["getuserdata",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["getuserdisplayname",{"_index":1959,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["getuserdisplayname(user.id",{"_index":1984,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["getuserdisplayname(userid",{"_index":1971,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["getviewinguserid",{"_index":1863,"title":{},"body":{"injectables/ProfileService.html":{}}}],["go",{"_index":2520,"title":{},"body":{"index.html":{}}}],["goback",{"_index":1180,"title":{},"body":{"components/ImprintComponent.html":{}}}],["google",{"_index":1321,"title":{},"body":{"components/LoginComponent.html":{}}}],["googleauthprovider",{"_index":2319,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["googleemail",{"_index":2277,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["googlename",{"_index":2278,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["googleprofileimg",{"_index":2279,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["googleuserid",{"_index":1282,"title":{},"body":{"components/LoginComponent.html":{}}}],["gotoavatar",{"_index":2079,"title":{},"body":{"components/SignInComponent.html":{}}}],["gotocheckemail",{"_index":1926,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["gotologin",{"_index":432,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/SignInComponent.html":{}}}],["gotosignin",{"_index":433,"title":{},"body":{"components/AvatarComponent.html":{},"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["gro",{"_index":1668,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["großbuchstabe",{"_index":2122,"title":{},"body":{"components/SignInComponent.html":{}}}],["guest",{"_index":1215,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["guestlogin",{"_index":2284,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["guiseppe",{"_index":1189,"title":{},"body":{"components/ImprintComponent.html":{}}}],["gäste",{"_index":1322,"title":{},"body":{"components/LoginComponent.html":{}}}],["hackerman",{"_index":2274,"title":{},"body":{"classes/User.html":{}}}],["handleactioncode",{"_index":2285,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["handleactioncode(oobcode",{"_index":2302,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["hast",{"_index":2116,"title":{},"body":{"components/SignInComponent.html":{}}}],["header",{"_index":1165,"title":{},"body":{"components/HeaderComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuHeaderComponent.html":{}}}],["header'},{'name",{"_index":202,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["header.component",{"_index":1451,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MainPageComponent.html":{}}}],["header.component.html",{"_index":1166,"title":{},"body":{"components/HeaderComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuHeaderComponent.html":{}}}],["header.component.scss",{"_index":1167,"title":{},"body":{"components/HeaderComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuHeaderComponent.html":{}}}],["header.component.ts",{"_index":1357,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:15",{"_index":1497,"title":{},"body":{"components/MainMenuHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":1499,"title":{},"body":{"components/MainMenuHeaderComponent.html":{}}}],["header.component.ts:18",{"_index":1498,"title":{},"body":{"components/MainMenuHeaderComponent.html":{}}}],["header.component.ts:21",{"_index":1379,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:22",{"_index":1383,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":1372,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:27",{"_index":1386,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":1380,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:31",{"_index":1384,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:32",{"_index":1381,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:33",{"_index":1385,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:37",{"_index":1375,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:43",{"_index":1378,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:51",{"_index":1374,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:59",{"_index":1373,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:65",{"_index":1377,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header/header.component",{"_index":1183,"title":{},"body":{"components/ImprintComponent.html":{}}}],["header/log",{"_index":1199,"title":{},"body":{"components/LogOutDialogComponent.html":{},"coverage.html":{}}}],["header/main",{"_index":1356,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["header/search",{"_index":1455,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["headercomponent",{"_index":201,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["help",{"_index":2517,"title":{},"body":{"index.html":{}}}],["hideelement",{"_index":1168,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["hideextras",{"_index":1326,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["hidemobileworkspace",{"_index":1363,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["hier",{"_index":1048,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["hinzufügen",{"_index":321,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/MainMenuChannelsComponent.html":{}}}],["hochladen",{"_index":517,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["horizontalposition",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hostlistener",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"components/MainPageComponent.html":{},"directives/OpenProfileDirective.html":{},"components/ThreadComponent.html":{}}}],["hostlistener('click",{"_index":1856,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["hostlistener('window:resize",{"_index":1510,"title":{},"body":{"components/MainPageComponent.html":{}}}],["hostlistener('window:unload",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlisteners",{"_index":349,"title":{},"body":{"components/AppComponent.html":{},"components/MainPageComponent.html":{},"directives/OpenProfileDirective.html":{}}}],["hoverstate",{"_index":2071,"title":{},"body":{"components/SignInComponent.html":{}}}],["html",{"_index":168,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["htmldivelement",{"_index":1573,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["htmlelement",{"_index":65,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{}}}],["htmlinputelement",{"_index":1576,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["ich",{"_index":2126,"title":{},"body":{"components/SignInComponent.html":{}}}],["iconmail",{"_index":2072,"title":{},"body":{"components/SignInComponent.html":{}}}],["iconname",{"_index":2073,"title":{},"body":{"components/SignInComponent.html":{}}}],["iconsrc",{"_index":1223,"title":{},"body":{"components/LoginComponent.html":{}}}],["id",{"_index":75,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"injectables/StateManagementService.html":{},"classes/User.html":{},"injectables/UserManagementService.html":{}}}],["identifier",{"_index":2424,"title":{},"body":{"coverage.html":{}}}],["if(button",{"_index":1098,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["if(channelexists",{"_index":981,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["if(currentfile",{"_index":1681,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["if(currentfile.type",{"_index":1682,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["if(errormessage",{"_index":1684,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["if(i",{"_index":2243,"title":{},"body":{"components/ThreadComponent.html":{}}}],["if(ismobile",{"_index":1214,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["if(threadservice.threadopen",{"_index":1522,"title":{},"body":{"components/MainPageComponent.html":{}}}],["if(user.id",{"_index":988,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["if(user?.id",{"_index":1495,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["if(userheadbutton",{"_index":1134,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["if(userservice.getuser(member",{"_index":1103,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["if(userservice.getuser(member).profile_img",{"_index":1104,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["ihnen",{"_index":753,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["ihr",{"_index":756,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["ihre",{"_index":743,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["image/gif",{"_index":1662,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["image/jpeg",{"_index":1660,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["image/png",{"_index":1661,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["image/svg+xml",{"_index":1663,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["imagechanged",{"_index":426,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["imageurl",{"_index":481,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["implements",{"_index":820,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["import",{"_index":94,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["importprovidersfrom",{"_index":2537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importprovidersfrom(provideauth",{"_index":2540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importprovidersfrom(providefirestore",{"_index":2541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importprovidersfrom(providestorage",{"_index":2543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":24,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["impressum",{"_index":1184,"title":{},"body":{"components/ImprintComponent.html":{},"components/LoginPageComponent.html":{}}}],["imprint",{"_index":1177,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprint'},{'name",{"_index":204,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["imprint.component.html",{"_index":1178,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprint.component.scss",{"_index":1179,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprintcomponent",{"_index":203,"title":{"components/ImprintComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["in'},{'name",{"_index":243,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["in.component",{"_index":1337,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["in.component.html",{"_index":2067,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.scss",{"_index":2068,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts",{"_index":2065,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["in.component.ts:101",{"_index":2083,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:22",{"_index":2094,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:23",{"_index":2095,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:24",{"_index":2096,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:25",{"_index":2099,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:26",{"_index":2098,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:27",{"_index":2103,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:28",{"_index":2097,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:29",{"_index":2102,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:30",{"_index":2100,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:31",{"_index":2081,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:39",{"_index":2090,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:47",{"_index":2089,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:52",{"_index":2086,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:62",{"_index":2088,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:74",{"_index":2087,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:84",{"_index":2092,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:96",{"_index":2085,"title":{},"body":{"components/SignInComponent.html":{}}}],["in/sign",{"_index":1336,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["index",{"_index":38,"title":{"index.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["info.data.email",{"_index":2349,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["initializeapp(environment.firebase",{"_index":2539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":603,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/EmailSnackbarComponent.html":{},"components/LoginComponent.html":{},"components/LoginSnackbarComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["inject(firestore",{"_index":598,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{}}}],["inject(matsnackbarref",{"_index":1160,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["injectable",{"_index":522,"title":{"injectables/ChannelFirebaseService.html":{},"injectables/CustomDialogService.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"injectables/StateManagementService.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"injectables/StateManagementService.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{}}}],["injectables",{"_index":523,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/CustomDialogService.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"injectables/StateManagementService.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"overview.html":{}}}],["input",{"_index":1539,"title":{},"body":{"components/MessageInputComponent.html":{},"directives/OpenProfileDirective.html":{},"components/SearchResultsComponent.html":{}}}],["input'},{'name",{"_index":229,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["input.component",{"_index":2211,"title":{},"body":{"components/ThreadComponent.html":{}}}],["input.component.html",{"_index":1540,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.scss",{"_index":1541,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts",{"_index":1538,"title":{},"body":{"components/MessageInputComponent.html":{},"coverage.html":{}}}],["input.component.ts:103",{"_index":1571,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:115",{"_index":1565,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:128",{"_index":1566,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:135",{"_index":1588,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:142",{"_index":1569,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:147",{"_index":1577,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:154",{"_index":1574,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:166",{"_index":1581,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:19",{"_index":1590,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:20",{"_index":1563,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:22",{"_index":1596,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:23",{"_index":1593,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:24",{"_index":1595,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:36",{"_index":1592,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:37",{"_index":1562,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:40",{"_index":1598,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:41",{"_index":1591,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:42",{"_index":1597,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:43",{"_index":1594,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:47",{"_index":1580,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:61",{"_index":1567,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:69",{"_index":1586,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:79",{"_index":1583,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:87",{"_index":1587,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.component.ts:96",{"_index":1570,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.files",{"_index":1651,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.files.length",{"_index":1652,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.files[0",{"_index":1653,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.innertext",{"_index":1679,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input.value",{"_index":1676,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["input/message",{"_index":1537,"title":{},"body":{"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["inputs",{"_index":1560,"title":{},"body":{"components/MessageInputComponent.html":{},"directives/OpenProfileDirective.html":{},"components/SearchResultsComponent.html":{}}}],["instanceof",{"_index":1173,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["interface",{"_index":519,"title":{"interfaces/Channel.html":{},"interfaces/DialogParams.html":{},"interfaces/Message.html":{},"interfaces/Reaction.html":{}},"body":{"interfaces/Channel.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"interfaces/Message.html":{},"interfaces/Reaction.html":{},"coverage.html":{}}}],["interfaces",{"_index":520,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/DialogParams.html":{},"interfaces/Message.html":{},"interfaces/Reaction.html":{},"overview.html":{}}}],["interfaces/channel.interface",{"_index":104,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{}}}],["interfaces/message.interface",{"_index":1599,"title":{},"body":{"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["interfaces/reaction.interface",{"_index":1904,"title":{},"body":{"injectables/ReactionService.html":{}}}],["interfaces/user.interface",{"_index":297,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MessageInputComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"injectables/UserManagementService.html":{}}}],["is_deleted",{"_index":1529,"title":{},"body":{"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["is_typing",{"_index":1247,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["isanonymous",{"_index":2373,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["isduplicate",{"_index":120,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["isemaildisabled",{"_index":1005,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["isexpanded",{"_index":1408,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["isloading",{"_index":1224,"title":{},"body":{"components/LoginComponent.html":{}}}],["isloggedin",{"_index":391,"title":{},"body":{"components/AppComponent.html":{}}}],["ismenuopen",{"_index":1359,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuComponent.html":{},"injectables/SharedService.html":{}}}],["ismobile",{"_index":764,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"components/LogOutDialogComponent.html":{}}}],["ismobile()){}logout",{"_index":1216,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["isnewdate",{"_index":2161,"title":{},"body":{"components/ThreadComponent.html":{}}}],["isnewdate(date",{"_index":2174,"title":{},"body":{"components/ThreadComponent.html":{}}}],["isnotcreator",{"_index":2404,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["isnotselected",{"_index":2401,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["isownprofile",{"_index":1114,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["ispartofnamematched",{"_index":2399,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["ist",{"_index":748,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/MessageInputComponent.html":{},"components/SignInComponent.html":{}}}],["januar",{"_index":2186,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["json.parse(json.stringify(channel",{"_index":671,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["json.parse(json.stringify(message))).catch",{"_index":1802,"title":{},"body":{"injectables/MessageService.html":{}}}],["json.parse(json.stringify(reaction",{"_index":1918,"title":{},"body":{"injectables/ReactionService.html":{}}}],["json.parse(storeduser",{"_index":619,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["json.stringify(this.userservice.currentuser",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuComponent.html":{}}}],["juli",{"_index":2192,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["juni",{"_index":2191,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["kanal",{"_index":156,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["kann",{"_index":1047,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["kleinbuchstabe",{"_index":2123,"title":{},"body":{"components/SignInComponent.html":{}}}],["kommunikation",{"_index":146,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["konto",{"_index":1352,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignInComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["können",{"_index":758,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["last_channel",{"_index":1244,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["last_reply",{"_index":1530,"title":{},"body":{"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["last_thread",{"_index":1245,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["lasttimeused",{"_index":1884,"title":{},"body":{"interfaces/Reaction.html":{},"injectables/ReactionService.html":{}}}],["leavechannel",{"_index":907,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["left",{"_index":772,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["legend",{"_index":167,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["leider",{"_index":749,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["leute",{"_index":320,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["liste",{"_index":512,"title":{},"body":{"components/AvatarComponent.html":{}}}],["literal",{"_index":1506,"title":{},"body":{"components/MainPageComponent.html":{},"interfaces/Message.html":{},"injectables/SearchService.html":{}}}],["loaduserdata",{"_index":1230,"title":{},"body":{"components/LoginComponent.html":{}}}],["loaduserdata(loginemail",{"_index":1251,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem('currentuser",{"_index":618,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["localstorage.removeitem('currentuser",{"_index":1212,"title":{},"body":{"components/LogOutDialogComponent.html":{},"components/LoginPageComponent.html":{}}}],["localstorage.setitem('currentuser",{"_index":407,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuComponent.html":{}}}],["log",{"_index":212,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["logged_in",{"_index":1246,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["login",{"_index":208,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["login'},{'name",{"_index":206,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["login.component.html",{"_index":1221,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1222,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":1335,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignInComponent.html":{}}}],["loginasguest",{"_index":1231,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":205,"title":{"components/LoginComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["loginemail",{"_index":1225,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginpagecomponent",{"_index":207,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["loginpassword",{"_index":1226,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsnackbarcomponent",{"_index":210,"title":{"components/LoginSnackbarComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["loginuser",{"_index":2286,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["loginuser(email",{"_index":2304,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["loginwithgoogle",{"_index":1232,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserAuthService.html":{}}}],["logout",{"_index":1204,"title":{},"body":{"components/LogOutDialogComponent.html":{},"injectables/UserAuthService.html":{}}}],["logoutdialogcomponent",{"_index":211,"title":{"components/LogOutDialogComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["lowercaseterm",{"_index":2025,"title":{},"body":{"injectables/SearchService.html":{}}}],["m",{"_index":2235,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["mai",{"_index":2190,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["mail",{"_index":745,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["main",{"_index":216,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mainheadercomponent",{"_index":215,"title":{"components/MainHeaderComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["mainmenu",{"_index":1496,"title":{},"body":{"components/MainMenuHeaderComponent.html":{}}}],["mainmenuchannelscomponent",{"_index":217,"title":{"components/MainMenuChannelsComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["mainmenucomponent",{"_index":219,"title":{"components/MainMenuComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["mainmenudmcomponent",{"_index":221,"title":{"components/MainMenuDmComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["mainmenuheadercomponent",{"_index":223,"title":{"components/MainMenuHeaderComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["mainpage",{"_index":1360,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["mainpagecomponent",{"_index":224,"title":{"components/MainPageComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["man",{"_index":2508,"title":{},"body":{"index.html":{}}}],["management.service",{"_index":299,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["management.service.ts",{"_index":2130,"title":{},"body":{"injectables/StateManagementService.html":{},"injectables/UserManagementService.html":{},"coverage.html":{}}}],["management.service.ts:10",{"_index":2144,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["management.service.ts:12",{"_index":2139,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["management.service.ts:17",{"_index":2386,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:18",{"_index":2141,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["management.service.ts:24",{"_index":2136,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["management.service.ts:29",{"_index":2137,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["management.service.ts:30",{"_index":2394,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:38",{"_index":2392,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:43",{"_index":2388,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:48",{"_index":2396,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:53",{"_index":2390,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:58",{"_index":2387,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:9",{"_index":2143,"title":{},"body":{"injectables/StateManagementService.html":{},"injectables/UserManagementService.html":{}}}],["marketing",{"_index":152,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["mart",{"_index":1083,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{},"dependencies.html":{}}}],["mat_radio_default_options",{"_index":258,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["matbuttonmodule",{"_index":28,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["matcardmodule",{"_index":25,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{}}}],["matcheckboxmodule",{"_index":2066,"title":{},"body":{"components/SignInComponent.html":{}}}],["matching",{"_index":255,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":55,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["matdialogactions",{"_index":30,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["matdialogcontent",{"_index":29,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["matdialogmodule",{"_index":31,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["matdialogref",{"_index":54,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{}}}],["matexpansionmodule",{"_index":1404,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["maticonmodule",{"_index":26,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["matinputmodule",{"_index":27,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["matprogressbarmodule",{"_index":1220,"title":{},"body":{"components/LoginComponent.html":{}}}],["matradiomodule",{"_index":261,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["matsnackbar",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["matsnackbar,matsnackbarmodule",{"_index":732,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["matsnackbarmodule",{"_index":720,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["matsnackbarref",{"_index":1162,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["max",{"_index":1669,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["maxwidth",{"_index":138,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"injectables/ProfileService.html":{}}}],["member",{"_index":113,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["member'},{'name",{"_index":184,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["member.component",{"_index":882,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowMembersComponent.html":{}}}],["member.component.html",{"_index":821,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.scss",{"_index":822,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts",{"_index":819,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"coverage.html":{}}}],["member.component.ts:19",{"_index":836,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:20",{"_index":834,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:21",{"_index":837,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:22",{"_index":835,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:23",{"_index":832,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:24",{"_index":824,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:27",{"_index":833,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:28",{"_index":839,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:29",{"_index":830,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:30",{"_index":838,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:34",{"_index":825,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:42",{"_index":826,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:47",{"_index":828,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:58",{"_index":827,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:65",{"_index":829,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member/dialog",{"_index":818,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowMembersComponent.html":{},"coverage.html":{}}}],["memberid",{"_index":696,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["memberids",{"_index":284,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"injectables/UserManagementService.html":{}}}],["members",{"_index":81,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MessageInputComponent.html":{}}}],["members'},{'name",{"_index":196,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["members.component.html",{"_index":1088,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.scss",{"_index":1089,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.ts",{"_index":1087,"title":{},"body":{"components/DialogShowMembersComponent.html":{},"coverage.html":{}}}],["members.component.ts:20",{"_index":1090,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.ts:23",{"_index":1095,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.ts:24",{"_index":1094,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.ts:25",{"_index":1096,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.ts:26",{"_index":1093,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.ts:30",{"_index":1091,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.ts:38",{"_index":1092,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.length",{"_index":1643,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["members/dialog",{"_index":1086,"title":{},"body":{"components/DialogShowMembersComponent.html":{},"coverage.html":{}}}],["members[0",{"_index":1641,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["members[1",{"_index":1642,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["men",{"_index":1525,"title":{},"body":{"components/MainPageComponent.html":{}}}],["mentor",{"_index":1193,"title":{},"body":{"components/ImprintComponent.html":{}}}],["menu",{"_index":12,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["menu'},{'name",{"_index":220,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["menu.component",{"_index":1390,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{}}}],["menu.component.html",{"_index":1438,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.scss",{"_index":1439,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts",{"_index":1437,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:31",{"_index":1442,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:34",{"_index":1445,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:35",{"_index":1449,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:36",{"_index":1450,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:37",{"_index":1448,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:38",{"_index":1447,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:42",{"_index":1444,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:55",{"_index":1443,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu/main",{"_index":11,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":2545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":228,"title":{"interfaces/Message.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UtilityService.html":{},"coverage.html":{}}}],["message'},{'name",{"_index":226,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["message.channel_id",{"_index":1986,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["message.id",{"_index":1794,"title":{},"body":{"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["message.message.text",{"_index":1985,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["message.message.text.tolowercase().includes(lowercaseterm",{"_index":2033,"title":{},"body":{"injectables/SearchService.html":{}}}],["message.total_replies",{"_index":2244,"title":{},"body":{"components/ThreadComponent.html":{}}}],["message_id",{"_index":1728,"title":{},"body":{"injectables/MessageService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{}}}],["messagecomponent",{"_index":225,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["messagedate",{"_index":2222,"title":{},"body":{"components/ThreadComponent.html":{}}}],["messageid",{"_index":1716,"title":{},"body":{"injectables/MessageService.html":{}}}],["messageinput",{"_index":1545,"title":{},"body":{"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{}}}],["messageinputcomponent",{"_index":227,"title":{"components/MessageInputComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["messages",{"_index":1617,"title":{},"body":{"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{}}}],["messages.filter((message",{"_index":2032,"title":{},"body":{"injectables/SearchService.html":{}}}],["messages.foreach((message",{"_index":1792,"title":{},"body":{"injectables/MessageService.html":{}}}],["messageservice",{"_index":898,"title":{"injectables/MessageService.html":{}},"body":{"components/DialogEditChannelComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["messageservice.messagesthread",{"_index":2242,"title":{},"body":{"components/ThreadComponent.html":{}}}],["messagesource",{"_index":1688,"title":{},"body":{"injectables/MessageService.html":{}}}],["messagesthread",{"_index":1689,"title":{},"body":{"injectables/MessageService.html":{}}}],["mesut",{"_index":1191,"title":{},"body":{"components/ImprintComponent.html":{}}}],["metadata",{"_index":17,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["metadata.contenttype",{"_index":1820,"title":{},"body":{"injectables/MessageService.html":{}}}],["metadata.name",{"_index":1819,"title":{},"body":{"injectables/MessageService.html":{}}}],["methods",{"_index":48,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["mid",{"_index":135,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["mindestens",{"_index":2119,"title":{},"body":{"components/SignInComponent.html":{}}}],["miscellaneous",{"_index":2495,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":157,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["mitglieder",{"_index":323,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{}}}],["mitgliederliste",{"_index":852,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["mittwoch",{"_index":2205,"title":{},"body":{"components/ThreadComponent.html":{}}}],["mobile",{"_index":816,"title":{},"body":{"injectables/CustomDialogService.html":{},"components/DialogAddMemberMobileComponent.html":{},"interfaces/DialogParams.html":{}}}],["mobile'},{'name",{"_index":186,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["mobile.component",{"_index":943,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["mobile.component.html",{"_index":857,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.scss",{"_index":858,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts",{"_index":856,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"coverage.html":{}}}],["mobile.component.ts:23",{"_index":877,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:24",{"_index":875,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:25",{"_index":878,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:26",{"_index":876,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:28",{"_index":872,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:29",{"_index":862,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:32",{"_index":874,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:33",{"_index":880,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:34",{"_index":871,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:35",{"_index":879,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:36",{"_index":873,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:41",{"_index":863,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:49",{"_index":864,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:54",{"_index":870,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:59",{"_index":866,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:70",{"_index":865,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:77",{"_index":867,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:92",{"_index":869,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile/dialog",{"_index":855,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"coverage.html":{}}}],["mobilebutton",{"_index":787,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["mobilechange",{"_index":1409,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["mobilediv",{"_index":1394,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["mobileposition",{"_index":136,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"injectables/ProfileService.html":{}}}],["mode",{"_index":1823,"title":{},"body":{"injectables/MessageService.html":{}}}],["models/user",{"_index":472,"title":{},"body":{"components/AvatarComponent.html":{},"components/SignInComponent.html":{}}}],["modified_at",{"_index":1531,"title":{},"body":{"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["modules",{"_index":2524,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["montag",{"_index":2203,"title":{},"body":{"components/ThreadComponent.html":{}}}],["month",{"_index":2229,"title":{},"body":{"components/ThreadComponent.html":{}}}],["months",{"_index":2157,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["more",{"_index":1250,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["märz",{"_index":2188,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["nachricht",{"_index":1154,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MessageInputComponent.html":{}}}],["name",{"_index":61,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["namen",{"_index":159,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/SignInComponent.html":{}}}],["navigatetomainpage",{"_index":1233,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigation",{"_index":473,"title":{},"body":{"components/AvatarComponent.html":{}}}],["navigation?.extras.state?.['user",{"_index":476,"title":{},"body":{"components/AvatarComponent.html":{}}}],["navigationend",{"_index":1171,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["ndern",{"_index":757,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["neu",{"_index":1351,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["neue",{"_index":1649,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["neues",{"_index":2117,"title":{},"body":{"components/SignInComponent.html":{}}}],["new",{"_index":467,"title":{},"body":{"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UtilityService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["newchannel",{"_index":711,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/MainMenuComponent.html":{}}}],["newchannel.id",{"_index":1458,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["newdirectchannel",{"_index":1109,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["newemail",{"_index":2348,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["newlyaddedusers",{"_index":823,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["newlyaddedusers.length",{"_index":854,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["newmemberids",{"_index":589,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["newmembers",{"_index":694,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["newmembers.length",{"_index":698,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["newpassword",{"_index":1932,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/UserAuthService.html":{}}}],["ng",{"_index":2519,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1364,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["ngondestroy",{"_index":541,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/SharedService.html":{},"components/ThreadComponent.html":{}}}],["ngoninit",{"_index":346,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/SignInComponent.html":{}}}],["ngzone",{"_index":911,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["nicht",{"_index":679,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogEditProfileComponent.html":{},"injectables/MessageService.html":{},"components/ResetPasswordComponent.html":{}}}],["noch",{"_index":1315,"title":{},"body":{"components/LoginComponent.html":{}}}],["none",{"_index":1835,"title":{},"body":{"injectables/MessageService.html":{}}}],["november",{"_index":2196,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["null",{"_index":790,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"components/DialogShowProfileComponent.html":{},"components/MessageInputComponent.html":{},"injectables/ProfileService.html":{}}}],["number",{"_index":441,"title":{},"body":{"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"components/DialogEditProfileComponent.html":{},"components/MainMenuComponent.html":{},"interfaces/Message.html":{},"interfaces/Reaction.html":{},"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["nutzen",{"_index":1310,"title":{},"body":{"components/LoginComponent.html":{}}}],["obj",{"_index":2256,"title":{},"body":{"classes/User.html":{}}}],["obj.email",{"_index":2268,"title":{},"body":{"classes/User.html":{}}}],["obj.id",{"_index":2266,"title":{},"body":{"classes/User.html":{}}}],["obj.is_typing",{"_index":2270,"title":{},"body":{"classes/User.html":{}}}],["obj.last_channel",{"_index":2272,"title":{},"body":{"classes/User.html":{}}}],["obj.last_thread",{"_index":2273,"title":{},"body":{"classes/User.html":{}}}],["obj.logged_in",{"_index":2269,"title":{},"body":{"classes/User.html":{}}}],["obj.name",{"_index":2267,"title":{},"body":{"classes/User.html":{}}}],["obj.profile_img",{"_index":2271,"title":{},"body":{"classes/User.html":{}}}],["object",{"_index":2093,"title":{},"body":{"components/SignInComponent.html":{}}}],["oder",{"_index":1319,"title":{},"body":{"components/LoginComponent.html":{},"components/MessageInputComponent.html":{}}}],["offline",{"_index":1151,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["ok",{"_index":1828,"title":{},"body":{"injectables/MessageService.html":{}}}],["oktober",{"_index":2195,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["omit",{"_index":553,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["onauthstatechanged",{"_index":2332,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["onauthstatechanged(this.auth",{"_index":2370,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["onclick",{"_index":1849,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["ondestroy",{"_index":96,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["onfilterusers",{"_index":270,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["oninit",{"_index":95,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SearchResultsComponent.html":{}}}],["onremoveselecteduser",{"_index":271,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["onremoveselecteduser(user",{"_index":278,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["onresize",{"_index":1501,"title":{},"body":{"components/MainPageComponent.html":{}}}],["onresize(event",{"_index":1509,"title":{},"body":{"components/MainPageComponent.html":{}}}],["onselectuser",{"_index":272,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["onselectuser(user",{"_index":279,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["onsnapshot",{"_index":605,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{}}}],["onsnapshot(q",{"_index":665,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["onsnapshot(this.getchannelref(channel_id",{"_index":637,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["onsnapshot(this.getchannelref(thread_id",{"_index":641,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["onsubmit",{"_index":1006,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["onupdatemembers",{"_index":273,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["oobcode",{"_index":1227,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserAuthService.html":{}}}],["openaddchanneldialog",{"_index":1410,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["openadduserdialog",{"_index":51,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{}}}],["openadduserdialog(button",{"_index":70,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["openavatardialog",{"_index":1007,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["openchannel",{"_index":1466,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["openchannel(user_id",{"_index":1473,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["opencurrentuser",{"_index":1205,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["opendialog",{"_index":765,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["opendialog(component",{"_index":780,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["opendialogabsolute",{"_index":766,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["opendialogabsolute(undefined",{"_index":783,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["opendialogemojipicker",{"_index":1552,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["opendialogemojipicker(input",{"_index":1572,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["opendirectchannel",{"_index":1115,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["opendirectchannel(user_id",{"_index":1122,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["opendirectchannelmobile",{"_index":1467,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["opendirectchannelmobile(user_id",{"_index":1476,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["openlogoutdialog",{"_index":1365,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["openlogoutdialog(button",{"_index":1376,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["opennewchannel",{"_index":542,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogEditChannelComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuHeaderComponent.html":{}}}],["opennewchannel(currentuserid",{"_index":574,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["openprofile",{"_index":1864,"title":{},"body":{"injectables/ProfileService.html":{}}}],["openprofile(userid",{"_index":1870,"title":{},"body":{"injectables/ProfileService.html":{}}}],["openprofiledirective",{"_index":251,"title":{"directives/OpenProfileDirective.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"directives/OpenProfileDirective.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["openthread",{"_index":2247,"title":{},"body":{"injectables/ThreadService.html":{}}}],["openuserprofile",{"_index":859,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowMembersComponent.html":{}}}],["openuserprofile(userid",{"_index":868,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["optional",{"_index":63,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["orderby",{"_index":1762,"title":{},"body":{"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["orderby('created_at",{"_index":1790,"title":{},"body":{"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["out",{"_index":213,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["overlay",{"_index":501,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["overview",{"_index":2521,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":2471,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":130,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"injectables/UserAuthService.html":{},"index.html":{}}}],["page'},{'name",{"_index":209,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["page.component",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SignInComponent.html":{}}}],["page.component.html",{"_index":1324,"title":{},"body":{"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{}}}],["page.component.scss",{"_index":1325,"title":{},"body":{"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{}}}],["page.component.ts",{"_index":1323,"title":{},"body":{"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:19",{"_index":1332,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:20",{"_index":1333,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:21",{"_index":1328,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:22",{"_index":1504,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:23",{"_index":1334,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:24",{"_index":1515,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:25",{"_index":1512,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:26",{"_index":1514,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:27",{"_index":1513,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:32",{"_index":1508,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:38",{"_index":1329,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:42",{"_index":1511,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:43",{"_index":1330,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:51",{"_index":1507,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:55",{"_index":1331,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page/avatar",{"_index":2113,"title":{},"body":{"components/SignInComponent.html":{}}}],["page/avatar/avatar.component.ts",{"_index":419,"title":{},"body":{"components/AvatarComponent.html":{},"coverage.html":{}}}],["page/avatar/avatar.component.ts:102",{"_index":450,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:113",{"_index":443,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:17",{"_index":461,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:26",{"_index":465,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:27",{"_index":466,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:28",{"_index":463,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:29",{"_index":469,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:30",{"_index":468,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:31",{"_index":462,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:32",{"_index":439,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:41",{"_index":448,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:46",{"_index":447,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:53",{"_index":446,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:60",{"_index":452,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:69",{"_index":442,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:75",{"_index":445,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:87",{"_index":449,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:94",{"_index":444,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/channel/channel.component.ts",{"_index":2447,"title":{},"body":{"coverage.html":{}}}],["page/channel/dialog",{"_index":817,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"coverage.html":{}}}],["page/channel/message/message.component.ts",{"_index":2453,"title":{},"body":{"coverage.html":{}}}],["page/check",{"_index":717,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["page/email",{"_index":1344,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page/imprint",{"_index":1340,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page/login",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["page/login/login.component.ts",{"_index":1217,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["page/login/login.component.ts:101",{"_index":1242,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:129",{"_index":1254,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:140",{"_index":1239,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:23",{"_index":1261,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:24",{"_index":1260,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:25",{"_index":1265,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:26",{"_index":1266,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:27",{"_index":1264,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:28",{"_index":1263,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:29",{"_index":1237,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:33",{"_index":1267,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:36",{"_index":1257,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:41",{"_index":1253,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:57",{"_index":1259,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:66",{"_index":1252,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:74",{"_index":1255,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:90",{"_index":1256,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:95",{"_index":1258,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/main",{"_index":10,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/LogOutDialogComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["page/message",{"_index":1536,"title":{},"body":{"components/MessageInputComponent.html":{},"coverage.html":{}}}],["page/privacy",{"_index":1341,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page/reset",{"_index":1919,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["page/sign",{"_index":2064,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["page/signin",{"_index":479,"title":{},"body":{"components/AvatarComponent.html":{},"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["page/thread/thread.component.ts",{"_index":2152,"title":{},"body":{"components/ThreadComponent.html":{},"coverage.html":{}}}],["page/thread/thread.component.ts:103",{"_index":2170,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:114",{"_index":2167,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:125",{"_index":2173,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:136",{"_index":2172,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:143",{"_index":2165,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:149",{"_index":2178,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:24",{"_index":2182,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:25",{"_index":2181,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:26",{"_index":2184,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:27",{"_index":2183,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:40",{"_index":2209,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:49",{"_index":2198,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:64",{"_index":2164,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:68",{"_index":2185,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:69",{"_index":2201,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:70",{"_index":2179,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:71",{"_index":2200,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:72",{"_index":2199,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:88",{"_index":2177,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:95",{"_index":2175,"title":{},"body":{"components/ThreadComponent.html":{}}}],["panelclass",{"_index":794,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["pannelclass",{"_index":813,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["parameters",{"_index":59,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["part.tolowercase().startswith(lowercaseterm",{"_index":2030,"title":{},"body":{"injectables/SearchService.html":{}}}],["part.tolowercase().startswith(searchterm",{"_index":2400,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["password",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{}}}],["password'},{'name",{"_index":235,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["password.component",{"_index":1269,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginPageComponent.html":{}}}],["password.component.html",{"_index":1921,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1922,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1920,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:17",{"_index":1941,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":1939,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":1940,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:20",{"_index":1929,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":1934,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:30",{"_index":1935,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:37",{"_index":1933,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:47",{"_index":1936,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":1938,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:65",{"_index":1931,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/reset",{"_index":1268,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password?mode=action&oobcode=code",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["passworderror",{"_index":2074,"title":{},"body":{"components/SignInComponent.html":{}}}],["passwort",{"_index":740,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{}}}],["passwörter",{"_index":1949,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["path",{"_index":1615,"title":{},"body":{"components/MessageInputComponent.html":{},"injectables/MessageService.html":{}}}],["pdf",{"_index":1674,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["picker",{"_index":1073,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{},"components/MessageInputComponent.html":{}}}],["picker'},{'name",{"_index":193,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["picker.component",{"_index":1600,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["picker.component.html",{"_index":1075,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["picker.component.scss",{"_index":1076,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["picker.component.ts",{"_index":1072,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{},"coverage.html":{}}}],["picker.component.ts:12",{"_index":1078,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["picker.component.ts:14",{"_index":1081,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["picker.component.ts:16",{"_index":1080,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["picker/dialog",{"_index":1071,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{},"components/MessageInputComponent.html":{},"coverage.html":{}}}],["pickercomponent",{"_index":1074,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["pipe(take(1",{"_index":954,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["plz",{"_index":1194,"title":{},"body":{"components/ImprintComponent.html":{}}}],["policy",{"_index":1342,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["policy'},{'name",{"_index":232,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["policy.component.ts",{"_index":2466,"title":{},"body":{"coverage.html":{}}}],["policy/privacy",{"_index":2465,"title":{},"body":{"coverage.html":{}}}],["popups/email",{"_index":377,"title":{},"body":{"components/AppComponent.html":{},"components/CheckEmailComponent.html":{}}}],["popups/login",{"_index":1942,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["popups/user",{"_index":470,"title":{},"body":{"components/AvatarComponent.html":{}}}],["position",{"_index":134,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"injectables/ProfileService.html":{}}}],["positionasjson",{"_index":800,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["prefix",{"_index":2008,"title":{},"body":{"injectables/SearchService.html":{}}}],["primary",{"_index":303,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["privacy",{"_index":231,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["privacypolicycomponent",{"_index":230,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["private",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{}}}],["process",{"_index":734,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["profil",{"_index":1068,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{}}}],["profile",{"_index":993,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile'},{'name",{"_index":190,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["profile.component",{"_index":885,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["profile.component.html",{"_index":995,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.scss",{"_index":996,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts",{"_index":992,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:106",{"_index":1020,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:123",{"_index":1012,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:130",{"_index":1010,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:18",{"_index":1032,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:23",{"_index":1127,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:24",{"_index":1126,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:25",{"_index":1023,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":1033,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:34",{"_index":1024,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:35",{"_index":1036,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:36",{"_index":1008,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:39",{"_index":1025,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:40",{"_index":1038,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:41",{"_index":1037,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:42",{"_index":1034,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:46",{"_index":1019,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:54",{"_index":1121,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:59",{"_index":1120,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:63",{"_index":1017,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:69",{"_index":1123,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:70",{"_index":1018,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:75",{"_index":1021,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:80",{"_index":1016,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:82",{"_index":1118,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:89",{"_index":1015,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:90",{"_index":1116,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:96",{"_index":1022,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.directive",{"_index":301,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/LogOutDialogComponent.html":{},"components/SearchResultsComponent.html":{}}}],["profile.directive.ts",{"_index":1848,"title":{},"body":{"directives/OpenProfileDirective.html":{},"coverage.html":{}}}],["profile.directive.ts:10",{"_index":1853,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["profile.directive.ts:18",{"_index":1855,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["profile.directive.ts:9",{"_index":1854,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["profile/dialog",{"_index":884,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["profile_img",{"_index":1243,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["profileimg",{"_index":1464,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["profileservice",{"_index":861,"title":{"injectables/ProfileService.html":{}},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowProfileComponent.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["project",{"_index":2502,"title":{},"body":{"index.html":{}}}],["promise",{"_index":69,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/MessageService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{}}}],["promise((resolve",{"_index":1806,"title":{},"body":{"injectables/MessageService.html":{},"injectables/UserAuthService.html":{}}}],["promise(async",{"_index":2369,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["promise.all",{"_index":1286,"title":{},"body":{"components/LoginComponent.html":{}}}],["promise.all([this.loaduserdata(this.loginemail",{"_index":1275,"title":{},"body":{"components/LoginComponent.html":{}}}],["promise.resolve(this.updateuserpassword(newpassword)).then",{"_index":1946,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["properties",{"_index":39,"title":{"properties.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UtilityService.html":{},"properties.html":{}}}],["provide",{"_index":257,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["provideanimationsasync",{"_index":2536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":2535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":616,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"injectables/StateManagementService.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["providefirebaseapp",{"_index":2538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":2353,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["providerouter(routes",{"_index":2534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":256,"title":{},"body":{"components/AddMemberCardComponent.html":{},"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":2546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":40,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/ProfileService.html":{},"components/SearchResultsComponent.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{}}}],["purpose",{"_index":2510,"title":{},"body":{"index.html":{}}}],["px",{"_index":807,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["q",{"_index":661,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["query",{"_index":611,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["query(this.getchannelsref",{"_index":703,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["query(this.getmessagesref",{"_index":1798,"title":{},"body":{"injectables/MessageService.html":{}}}],["query(this.getreactionsref",{"_index":1911,"title":{},"body":{"injectables/ReactionService.html":{}}}],["querysnapshot",{"_index":1843,"title":{},"body":{"injectables/MessageService.html":{}}}],["querysnapshot.docs",{"_index":1845,"title":{},"body":{"injectables/MessageService.html":{}}}],["querysnapshot.foreach((doc",{"_index":706,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["reaction",{"_index":1882,"title":{"interfaces/Reaction.html":{}},"body":{"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"coverage.html":{}}}],["reaction.id",{"_index":1916,"title":{},"body":{"injectables/ReactionService.html":{}}}],["reactions",{"_index":1534,"title":{},"body":{"interfaces/Message.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["reactions.foreach((reaction",{"_index":1914,"title":{},"body":{"injectables/ReactionService.html":{}}}],["reactionsarray",{"_index":1901,"title":{},"body":{"injectables/ReactionService.html":{}}}],["reactionsarray.length",{"_index":1913,"title":{},"body":{"injectables/ReactionService.html":{}}}],["reactionsarray.push(this.setreaction(reaction.data",{"_index":1915,"title":{},"body":{"injectables/ReactionService.html":{}}}],["reactionservice",{"_index":1886,"title":{"injectables/ReactionService.html":{}},"body":{"injectables/ReactionService.html":{},"coverage.html":{}}}],["reactiveformsmodule",{"_index":994,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["read",{"_index":660,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["rect",{"_index":804,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["rect.bottom",{"_index":806,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["rect.left",{"_index":808,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["rect.right",{"_index":809,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["ref",{"_index":655,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["ref(storage",{"_index":1809,"title":{},"body":{"injectables/MessageService.html":{}}}],["reference",{"_index":2523,"title":{},"body":{"index.html":{}}}],["references",{"_index":1905,"title":{},"body":{"injectables/ReactionService.html":{}}}],["region",{"_index":2336,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["registeruser",{"_index":2287,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["registeruser(email",{"_index":2308,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["reject",{"_index":1807,"title":{},"body":{"injectables/MessageService.html":{},"injectables/UserAuthService.html":{}}}],["reject(error",{"_index":1814,"title":{},"body":{"injectables/MessageService.html":{}}}],["removefile",{"_index":1553,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["removefile(input",{"_index":1575,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["removefilterusers",{"_index":860,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["removemessagesfromemptychannel",{"_index":1703,"title":{},"body":{"injectables/MessageService.html":{}}}],["removemessagesfromemptychannel(channelid",{"_index":1735,"title":{},"body":{"injectables/MessageService.html":{}}}],["removeselecteduser",{"_index":2382,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["removeselecteduser(selectedusers",{"_index":2391,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["removethreadmessagesfromchannel",{"_index":1704,"title":{},"body":{"injectables/MessageService.html":{}}}],["removethreadmessagesfromchannel(threadid",{"_index":1737,"title":{},"body":{"injectables/MessageService.html":{}}}],["removeuserfromchannel",{"_index":543,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["removeuserfromchannel(channelid",{"_index":576,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["renderer",{"_index":1368,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["renderer2",{"_index":1369,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/SignInComponent.html":{}}}],["reset",{"_index":234,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["resetemail",{"_index":724,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["resetpassword",{"_index":1923,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/UserAuthService.html":{}}}],["resetpassword(email",{"_index":2310,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["resetpasswordagain",{"_index":1924,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordcomponent",{"_index":233,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["resetuser",{"_index":1327,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resolve",{"_index":1815,"title":{},"body":{"injectables/MessageService.html":{},"injectables/UserAuthService.html":{}}}],["resolve(false",{"_index":2372,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["resolve(isanonymous",{"_index":2375,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["resolve(true",{"_index":2371,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["response",{"_index":1821,"title":{},"body":{"injectables/MessageService.html":{}}}],["response.blob",{"_index":1830,"title":{},"body":{"injectables/MessageService.html":{}}}],["response.ok",{"_index":1825,"title":{},"body":{"injectables/MessageService.html":{}}}],["result",{"_index":1678,"title":{},"body":{"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{}}}],["result.user",{"_index":2356,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["results",{"_index":254,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results'},{'name",{"_index":240,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["results.component.html",{"_index":1955,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.scss",{"_index":1956,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts",{"_index":1954,"title":{},"body":{"components/SearchResultsComponent.html":{},"coverage.html":{}}}],["results.component.ts:22",{"_index":1968,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:23",{"_index":1967,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:24",{"_index":1965,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:25",{"_index":1966,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:26",{"_index":1964,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:30",{"_index":1974,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:31",{"_index":1975,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:32",{"_index":1976,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:36",{"_index":1972,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:45",{"_index":1973,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:51",{"_index":1970,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:56",{"_index":1969,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results/search",{"_index":1953,"title":{},"body":{"components/SearchResultsComponent.html":{},"coverage.html":{}}}],["return",{"_index":394,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChannelFirebaseService.html":{},"injectables/CustomDialogService.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{}}}],["returns",{"_index":68,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["returntologin",{"_index":1927,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["ricardo",{"_index":1187,"title":{},"body":{"components/ImprintComponent.html":{}}}],["right",{"_index":414,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberMobileComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"injectables/ProfileService.html":{}}}],["root",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChannelFirebaseService.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"injectables/StateManagementService.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["root'},{'name",{"_index":175,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["route",{"_index":437,"title":{},"body":{"components/AvatarComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["router",{"_index":46,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{}}}],["routerlink",{"_index":1218,"title":{},"body":{"components/LoginComponent.html":{}}}],["routermodule",{"_index":1219,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{}}}],["routeroutlet",{"_index":336,"title":{},"body":{"components/AppComponent.html":{}}}],["rtl",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["runtransaction",{"_index":614,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["runtransaction(this.firestore",{"_index":672,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["rxjs",{"_index":1770,"title":{},"body":{"injectables/MessageService.html":{},"injectables/SharedService.html":{},"injectables/StateManagementService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":940,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["samstag",{"_index":2208,"title":{},"body":{"components/ThreadComponent.html":{}}}],["savemessage",{"_index":1554,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["savemessage(channelinput",{"_index":1578,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["saveuser",{"_index":2288,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["saveuser(name",{"_index":2312,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["schließen",{"_index":1526,"title":{},"body":{"components/MainPageComponent.html":{}}}],["schreiben",{"_index":2118,"title":{},"body":{"components/SignInComponent.html":{}}}],["search",{"_index":237,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["searchbarcomponent",{"_index":236,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["searchcontrol",{"_index":1963,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["searchinput",{"_index":263,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"injectables/UserManagementService.html":{}}}],["searchinput.trim().tolowercase",{"_index":2397,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["searchresultscomponent",{"_index":239,"title":{"components/SearchResultsComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["searchservice",{"_index":1987,"title":{"injectables/SearchService.html":{}},"body":{"injectables/SearchService.html":{},"coverage.html":{}}}],["searchterm",{"_index":1996,"title":{},"body":{"injectables/SearchService.html":{},"injectables/UserManagementService.html":{}}}],["searchterm(searchterm",{"_index":2015,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchterm.trim().tolowercase",{"_index":2024,"title":{},"body":{"injectables/SearchService.html":{}}}],["sein",{"_index":151,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["selectchannel",{"_index":1411,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["selectchannel(channelid",{"_index":1418,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["selected.id",{"_index":2403,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["selectedavatar",{"_index":427,"title":{},"body":{"components/AvatarComponent.html":{}}}],["selectedchannelid",{"_index":2131,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["selectedoption",{"_index":264,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["selecteduserid",{"_index":899,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/StateManagementService.html":{}}}],["selectedusers",{"_index":265,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"injectables/UserManagementService.html":{}}}],["selectedusers.filter((u",{"_index":2408,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["selectedusers.find((u",{"_index":2406,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["selectedusers.length",{"_index":326,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["selectedusers.map(user",{"_index":2410,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["selectedusers.push(user",{"_index":2407,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["selectedusers.some(selected",{"_index":2402,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["selector",{"_index":18,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"directives/OpenProfileDirective.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["selectuser",{"_index":2383,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["selectuser(selectedusers",{"_index":2393,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["send",{"_index":733,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["senden",{"_index":752,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["sendpasswordresetemail",{"_index":725,"title":{},"body":{"components/CheckEmailComponent.html":{},"injectables/UserAuthService.html":{}}}],["sendpasswordresetemail(this.auth",{"_index":2365,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["september",{"_index":2194,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["server",{"_index":2484,"title":{},"body":{"dependencies.html":{}}}],["serverconfig",{"_index":2431,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["servername",{"_index":1361,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["services/custom",{"_index":110,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MessageInputComponent.html":{}}}],["services/profile.service",{"_index":881,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowProfileComponent.html":{},"directives/OpenProfileDirective.html":{}}}],["services/shared.service",{"_index":302,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/ThreadComponent.html":{}}}],["services/state",{"_index":1430,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["services/thread.service",{"_index":1128,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/SearchResultsComponent.html":{},"components/ThreadComponent.html":{}}}],["services/user",{"_index":298,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["services/utility.service",{"_index":1977,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["set([currentchannel['creator",{"_index":687,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["setavatartouser",{"_index":434,"title":{},"body":{"components/AvatarComponent.html":{}}}],["setchannel",{"_index":544,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["setchannel(data",{"_index":578,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["setcurrentchannel",{"_index":545,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["setcurrentchannel(channel_id",{"_index":581,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["setfocus",{"_index":2162,"title":{},"body":{"components/ThreadComponent.html":{}}}],["setfocusoninput",{"_index":1555,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["setgoogleuser",{"_index":1234,"title":{},"body":{"components/LoginComponent.html":{}}}],["setmessage",{"_index":1705,"title":{},"body":{"injectables/MessageService.html":{}}}],["setmessage(data",{"_index":1740,"title":{},"body":{"injectables/MessageService.html":{}}}],["setmessagedata",{"_index":1556,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["setmessagedata(trimmedmessageinput",{"_index":1582,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["setmessagewithfile",{"_index":1557,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["setmessagewithfile(fileinput",{"_index":1585,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["setownprofilestatus",{"_index":1865,"title":{},"body":{"injectables/ProfileService.html":{}}}],["setownprofilestatus(status",{"_index":1872,"title":{},"body":{"injectables/ProfileService.html":{}}}],["setreaction",{"_index":1890,"title":{},"body":{"injectables/ReactionService.html":{}}}],["setreaction(data",{"_index":1897,"title":{},"body":{"injectables/ReactionService.html":{}}}],["setselectedchannelid",{"_index":2134,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["setselectedchannelid(id",{"_index":2138,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["setselecteduserid",{"_index":2135,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["setselecteduserid(id",{"_index":2140,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["settimeout",{"_index":406,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["setuserchannel",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["setviewinguserid",{"_index":1866,"title":{},"body":{"injectables/ProfileService.html":{}}}],["setviewinguserid(userid",{"_index":1875,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shared/dialog",{"_index":883,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["shared/directives/open",{"_index":300,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/LogOutDialogComponent.html":{},"components/SearchResultsComponent.html":{}}}],["shared/enums/channel",{"_index":106,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/SearchService.html":{}}}],["sharedservice",{"_index":266,"title":{"injectables/SharedService.html":{}},"body":{"components/AddMemberCardComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"injectables/SharedService.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["sharedservice.ismenuopen",{"_index":1523,"title":{},"body":{"components/MainPageComponent.html":{}}}],["shouldshowsearchresults",{"_index":1960,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["show",{"_index":195,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["showmobilediv",{"_index":2043,"title":{},"body":{"injectables/SharedService.html":{}}}],["showmobiledivsubject",{"_index":2044,"title":{},"body":{"injectables/SharedService.html":{}}}],["showmobileworkspace",{"_index":1366,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["showuserlist",{"_index":267,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["sie",{"_index":149,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/CheckEmailComponent.html":{},"components/MessageInputComponent.html":{},"components/SignInComponent.html":{}}}],["sign",{"_index":242,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["signinanonymously",{"_index":2330,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["signinanonymously(this.auth",{"_index":2338,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["signincomponent",{"_index":241,"title":{"components/SignInComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["signinwithemailandpassword",{"_index":2328,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["signinwithemailandpassword(this.auth",{"_index":2337,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["signinwithpopup",{"_index":2324,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["signinwithpopup(this.auth",{"_index":2354,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["signout",{"_index":2331,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["signout(this.auth",{"_index":2352,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["slack",{"_index":2512,"title":{},"body":{"index.html":{}}}],["snackbar",{"_index":249,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["snackbar'},{'name",{"_index":200,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["snackbar.component",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["snackbar.component.html",{"_index":1157,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["snackbar.component.scss",{"_index":1158,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["snackbar.component.ts",{"_index":1156,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["snackbar.component.ts:12",{"_index":1161,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["snackbar/email",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"components/CheckEmailComponent.html":{},"components/EmailSnackbarComponent.html":{},"coverage.html":{}}}],["snackbar/login",{"_index":1355,"title":{},"body":{"components/LoginSnackbarComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["snackbar/user",{"_index":471,"title":{},"body":{"components/AvatarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["snackbarref",{"_index":1159,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["snapshot",{"_index":1813,"title":{},"body":{"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["sollten",{"_index":148,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["some((part",{"_index":2029,"title":{},"body":{"injectables/SearchService.html":{},"injectables/UserManagementService.html":{}}}],["sonderzeichen",{"_index":2125,"title":{},"body":{"components/SignInComponent.html":{}}}],["sonntag",{"_index":2202,"title":{},"body":{"components/ThreadComponent.html":{}}}],["sopa",{"_index":1186,"title":{},"body":{"components/ImprintComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["specific",{"_index":325,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["speichern",{"_index":980,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["split",{"_index":2028,"title":{},"body":{"injectables/SearchService.html":{},"injectables/UserManagementService.html":{}}}],["src/.../app.config.server.ts",{"_index":2532,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2530,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../channel",{"_index":2497,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.server.ts",{"_index":2531,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":334,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:57",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:70",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:81",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:90",{"_index":361,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":2427,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":2432,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts",{"_index":524,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"coverage.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:104",{"_index":573,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:110",{"_index":562,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:115",{"_index":559,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:120",{"_index":579,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:135",{"_index":551,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:143",{"_index":584,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:158",{"_index":587,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:166",{"_index":590,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:183",{"_index":577,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:200",{"_index":556,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:208",{"_index":557,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:225",{"_index":554,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:23",{"_index":599,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:234",{"_index":575,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:24",{"_index":593,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:25",{"_index":595,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:35",{"_index":597,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:45",{"_index":592,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:47",{"_index":600,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:48",{"_index":602,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:49",{"_index":549,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:54",{"_index":561,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:63",{"_index":571,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:80",{"_index":582,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:86",{"_index":564,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:97",{"_index":567,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/message.service.ts",{"_index":1685,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["src/app/firebase.service/message.service.ts:111",{"_index":1713,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:119",{"_index":1744,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:134",{"_index":1746,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:149",{"_index":1742,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:161",{"_index":1748,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:172",{"_index":1750,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:188",{"_index":1725,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:202",{"_index":1723,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:215",{"_index":1718,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:227",{"_index":1721,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:234",{"_index":1738,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:243",{"_index":1736,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:29",{"_index":1758,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:30",{"_index":1753,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:31",{"_index":1754,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:32",{"_index":1756,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:33",{"_index":1751,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:34",{"_index":1759,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:35",{"_index":1755,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:49",{"_index":1760,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:50",{"_index":1761,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:51",{"_index":1711,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:58",{"_index":1715,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:63",{"_index":1734,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:70",{"_index":1730,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:75",{"_index":1732,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:80",{"_index":1733,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:85",{"_index":1727,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:90",{"_index":1741,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/reaction.service.ts",{"_index":1887,"title":{},"body":{"injectables/ReactionService.html":{},"coverage.html":{}}}],["src/app/firebase.service/reaction.service.ts:11",{"_index":1893,"title":{},"body":{"injectables/ReactionService.html":{}}}],["src/app/firebase.service/reaction.service.ts:16",{"_index":1896,"title":{},"body":{"injectables/ReactionService.html":{}}}],["src/app/firebase.service/reaction.service.ts:21",{"_index":1898,"title":{},"body":{"injectables/ReactionService.html":{}}}],["src/app/firebase.service/reaction.service.ts:34",{"_index":1895,"title":{},"body":{"injectables/ReactionService.html":{}}}],["src/app/firebase.service/reaction.service.ts:42",{"_index":1900,"title":{},"body":{"injectables/ReactionService.html":{}}}],["src/app/firebase.service/reaction.service.ts:56",{"_index":1903,"title":{},"body":{"injectables/ReactionService.html":{}}}],["src/app/firebase.service/user.auth.service.ts",{"_index":2275,"title":{},"body":{"injectables/UserAuthService.html":{},"coverage.html":{}}}],["src/app/firebase.service/user.auth.service.ts:103",{"_index":2293,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:110",{"_index":2309,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:115",{"_index":2297,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:12",{"_index":2316,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:120",{"_index":2294,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:13",{"_index":2315,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:133",{"_index":2295,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:14",{"_index":2318,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:15",{"_index":2317,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:16",{"_index":2290,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:18",{"_index":2314,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:22",{"_index":2305,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:27",{"_index":2301,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:32",{"_index":2300,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:37",{"_index":2292,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:52",{"_index":2303,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:64",{"_index":2298,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:69",{"_index":2307,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:74",{"_index":2306,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:89",{"_index":2313,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:98",{"_index":2311,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.service.ts",{"_index":2438,"title":{},"body":{"coverage.html":{}}}],["src/app/interfaces/channel.interface.ts",{"_index":521,"title":{},"body":{"interfaces/Channel.html":{},"coverage.html":{}}}],["src/app/interfaces/message.interface.ts",{"_index":1528,"title":{},"body":{"interfaces/Message.html":{},"coverage.html":{}}}],["src/app/interfaces/reaction.interface.ts",{"_index":1883,"title":{},"body":{"interfaces/Reaction.html":{},"coverage.html":{}}}],["src/app/interfaces/user.interface.ts",{"_index":2443,"title":{},"body":{"coverage.html":{}}}],["src/app/login",{"_index":418,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["src/app/main",{"_index":9,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/LogOutDialogComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["src/app/models/user.ts",{"_index":2253,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:10",{"_index":2255,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:2",{"_index":2258,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:24",{"_index":2265,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:3",{"_index":2262,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:4",{"_index":2257,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:5",{"_index":2263,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:6",{"_index":2261,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:7",{"_index":2259,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:8",{"_index":2264,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:9",{"_index":2260,"title":{},"body":{"classes/User.html":{}}}],["src/app/popups/email",{"_index":1155,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"coverage.html":{}}}],["src/app/popups/login",{"_index":1354,"title":{},"body":{"components/LoginSnackbarComponent.html":{},"coverage.html":{}}}],["src/app/popups/user",{"_index":2376,"title":{},"body":{"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["src/app/services/custom",{"_index":759,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"coverage.html":{}}}],["src/app/services/profile.service.ts",{"_index":1860,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/app/services/profile.service.ts:11",{"_index":1877,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:12",{"_index":1867,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:17",{"_index":1871,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:31",{"_index":1873,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:36",{"_index":1868,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:41",{"_index":1876,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:46",{"_index":1869,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/search.service.ts",{"_index":1988,"title":{},"body":{"injectables/SearchService.html":{},"coverage.html":{}}}],["src/app/services/search.service.ts:13",{"_index":1998,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:21",{"_index":2000,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:34",{"_index":2003,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:43",{"_index":2016,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:48",{"_index":2012,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:58",{"_index":2005,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:68",{"_index":2010,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:78",{"_index":2002,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:83",{"_index":2019,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:88",{"_index":2014,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:98",{"_index":2007,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/shared.service.ts",{"_index":2041,"title":{},"body":{"injectables/SharedService.html":{},"coverage.html":{}}}],["src/app/services/shared.service.ts:10",{"_index":2058,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:11",{"_index":2055,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:13",{"_index":2054,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:14",{"_index":2046,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:18",{"_index":2049,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:23",{"_index":2047,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:28",{"_index":2051,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:33",{"_index":2048,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:9",{"_index":2056,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/state",{"_index":2129,"title":{},"body":{"injectables/StateManagementService.html":{},"coverage.html":{}}}],["src/app/services/thread.service.ts",{"_index":2245,"title":{},"body":{"injectables/ThreadService.html":{},"coverage.html":{}}}],["src/app/services/thread.service.ts:13",{"_index":2250,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/thread.service.ts:18",{"_index":2249,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/thread.service.ts:8",{"_index":2248,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/user",{"_index":2378,"title":{},"body":{"injectables/UserManagementService.html":{},"coverage.html":{}}}],["src/app/services/utility.service.ts",{"_index":2413,"title":{},"body":{"injectables/UtilityService.html":{},"coverage.html":{}}}],["src/app/services/utility.service.ts:22",{"_index":2416,"title":{},"body":{"injectables/UtilityService.html":{}}}],["src/app/services/utility.service.ts:26",{"_index":2417,"title":{},"body":{"injectables/UtilityService.html":{}}}],["src/app/services/utility.service.ts:38",{"_index":2418,"title":{},"body":{"injectables/UtilityService.html":{}}}],["src/app/services/utility.service.ts:54",{"_index":2420,"title":{},"body":{"injectables/UtilityService.html":{}}}],["src/app/services/utility.service.ts:9",{"_index":2421,"title":{},"body":{"injectables/UtilityService.html":{}}}],["src/app/shared/dialog",{"_index":991,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"coverage.html":{}}}],["src/app/shared/directives/open",{"_index":1847,"title":{},"body":{"directives/OpenProfileDirective.html":{},"coverage.html":{}}}],["src/app/shared/enums/channel",{"_index":2499,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":1164,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:13",{"_index":1169,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:27",{"_index":1170,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/imprint/imprint.component.ts",{"_index":1176,"title":{},"body":{"components/ImprintComponent.html":{},"coverage.html":{}}}],["src/app/shared/imprint/imprint.component.ts:13",{"_index":1181,"title":{},"body":{"components/ImprintComponent.html":{}}}],["src/app/shared/imprint/imprint.component.ts:18",{"_index":1182,"title":{},"body":{"components/ImprintComponent.html":{}}}],["src/app/shared/privacy",{"_index":2464,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/search",{"_index":1952,"title":{},"body":{"components/SearchResultsComponent.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":2467,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stadt",{"_index":1196,"title":{},"body":{"components/ImprintComponent.html":{}}}],["standalone",{"_index":22,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"directives/OpenProfileDirective.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["start",{"_index":506,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["starte",{"_index":1647,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["started",{"_index":2501,"title":{"index.html":{}},"body":{}}],["state",{"_index":2114,"title":{},"body":{"components/SignInComponent.html":{}}}],["statemanagementservice",{"_index":1414,"title":{"injectables/StateManagementService.html":{}},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/StateManagementService.html":{},"coverage.html":{}}}],["statements",{"_index":2425,"title":{},"body":{"coverage.html":{}}}],["stateservice",{"_index":1413,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["status",{"_index":1874,"title":{},"body":{"injectables/ProfileService.html":{}}}],["stimme",{"_index":2127,"title":{},"body":{"components/SignInComponent.html":{}}}],["stimmen",{"_index":1950,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["storage",{"_index":1805,"title":{},"body":{"injectables/MessageService.html":{}}}],["storageref",{"_index":1808,"title":{},"body":{"injectables/MessageService.html":{}}}],["storeduser",{"_index":617,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["string",{"_index":282,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["styleurl",{"_index":36,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["suballmessages",{"_index":1706,"title":{},"body":{"injectables/MessageService.html":{}}}],["subchannels",{"_index":546,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["subchannels(user_id",{"_index":583,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["subject",{"_index":1757,"title":{},"body":{"injectables/MessageService.html":{},"injectables/SharedService.html":{}}}],["submessages",{"_index":1707,"title":{},"body":{"injectables/MessageService.html":{}}}],["submessages(channel_id",{"_index":1743,"title":{},"body":{"injectables/MessageService.html":{}}}],["submessagesthread",{"_index":1708,"title":{},"body":{"injectables/MessageService.html":{}}}],["submessagesthread(thread_id",{"_index":1745,"title":{},"body":{"injectables/MessageService.html":{}}}],["subreactionsformessage",{"_index":1891,"title":{},"body":{"injectables/ReactionService.html":{}}}],["subreactionsformessage(message_id",{"_index":1899,"title":{},"body":{"injectables/ReactionService.html":{}}}],["subscribe",{"_index":955,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["subscribetobacktochannels",{"_index":2045,"title":{},"body":{"injectables/SharedService.html":{}}}],["subscribetobacktochannels(togglemenu",{"_index":2050,"title":{},"body":{"injectables/SharedService.html":{}}}],["subscription",{"_index":2052,"title":{},"body":{"injectables/SharedService.html":{}}}],["switch",{"_index":810,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["table",{"_index":2470,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2469,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":939,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["team",{"_index":144,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["tempchanneldescription",{"_index":900,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["tempchannelname",{"_index":901,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["templateurl",{"_index":34,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["text",{"_index":1533,"title":{},"body":{"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["textfieldmodule",{"_index":891,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["themenbezogen",{"_index":150,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["then((querysnapshot",{"_index":705,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["then((result",{"_index":2355,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this._ngzone.onstable",{"_index":953,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this._snackbar.openfromcomponent(emailsnackbarcomponent",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/CheckEmailComponent.html":{}}}],["this._snackbar.openfromcomponent(loginsnackbarcomponent",{"_index":1944,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._snackbar.openfromcomponent(usercreatedsnackbarcomponent",{"_index":505,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.addchannel(newchannel",{"_index":712,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.allmessages",{"_index":1799,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.allmessages.push(this.setmessage(message.data",{"_index":1800,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.auth.currentuser",{"_index":2340,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.autosize.resizetofitcontent(true",{"_index":956,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.avatars[0",{"_index":464,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.avatars[i",{"_index":487,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["this.backtochannels$.subscribe(togglemenu",{"_index":2061,"title":{},"body":{"injectables/SharedService.html":{}}}],["this.backtochannelssubject.asobservable",{"_index":2053,"title":{},"body":{"injectables/SharedService.html":{}}}],["this.backtochannelssubject.next",{"_index":2060,"title":{},"body":{"injectables/SharedService.html":{}}}],["this.backtochannelssubject.unsubscribe",{"_index":2062,"title":{},"body":{"injectables/SharedService.html":{}}}],["this.button",{"_index":1857,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["this.cancelediting",{"_index":961,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.changeavatar",{"_index":1051,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.changechannelname",{"_index":959,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.changeemailonly(email",{"_index":1062,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.changenameonly(displayname",{"_index":1060,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.channel",{"_index":626,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channel.id",{"_index":633,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channel.name",{"_index":123,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["this.channelexists",{"_index":958,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelexists(message.channel_id",{"_index":2034,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.channelinput.nativeelement.focus",{"_index":1680,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.channels",{"_index":666,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channels.filter",{"_index":623,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channels.filter(channel",{"_index":701,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channels.find((channel",{"_index":634,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channels.find(channel",{"_index":714,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channels.push(channel",{"_index":709,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channels.push(this.setchannel(channel.data",{"_index":668,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channelservice.addchannel(newchannel).then(channelid",{"_index":1457,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.channelservice.addchannel(this.channel",{"_index":127,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["this.channelservice.addchannel(this.newdirectchannel",{"_index":1143,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.channelservice.channels",{"_index":972,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"injectables/SearchService.html":{}}}],["this.channelservice.channels.filter",{"_index":2040,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.channelservice.channels.some",{"_index":962,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.channels.some(channel",{"_index":121,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["this.channelservice.currentchannel",{"_index":831,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/MessageInputComponent.html":{}}}],["this.channelservice.currentchannel.active_members.includes(this.userservice.currentuser.id",{"_index":402,"title":{},"body":{"components/AppComponent.html":{}}}],["this.channelservice.currentchannel.creator",{"_index":2405,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["this.channelservice.currentchannel.description",{"_index":948,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.currentchannel.id",{"_index":963,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/MessageInputComponent.html":{},"injectables/UserManagementService.html":{}}}],["this.channelservice.currentchannel.members",{"_index":840,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.channelservice.currentchannel.members.find((member",{"_index":1636,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.channelservice.currentchannel.members.length",{"_index":966,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.currentchannel.name",{"_index":946,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.currentthread.id",{"_index":1611,"title":{},"body":{"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{}}}],["this.channelservice.deletechannel(thread.id",{"_index":976,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.getchannelsforcurrentuser",{"_index":1279,"title":{},"body":{"components/LoginComponent.html":{},"components/MainPageComponent.html":{}}}],["this.channelservice.getcurrentthread(thread_id",{"_index":2216,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.channelservice.getdirectchannelid(this.userservice.currentuser.id",{"_index":1136,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.channelservice.opennewchannel(this.userservice.currentuser.id",{"_index":970,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.removeuserfromchannel(this.channelservice.currentchannel.id",{"_index":968,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.setcurrentchannel(channelid",{"_index":128,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["this.channelservice.unsubcurrentthread",{"_index":2215,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.channelservice.updatechannel(this.channelservice.currentchannel",{"_index":960,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.updatechannelmembers(channelid",{"_index":2409,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["this.checkemail",{"_index":2107,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.checkiffileistoobig",{"_index":1658,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.checkurls",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["this.checkwheretosavemessage",{"_index":1604,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.closeavatardialog",{"_index":1055,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.closemenuifmobile",{"_index":318,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["this.closethread",{"_index":1139,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"components/ThreadComponent.html":{}}}],["this.confirmpopup",{"_index":497,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.converttodate(date",{"_index":2223,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.createelement(bloburl",{"_index":1832,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.createnewdirectchannel(user_id",{"_index":1138,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.createurl(file",{"_index":1655,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.createuserobject(user",{"_index":1288,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.currentchannel",{"_index":636,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.currentdate",{"_index":2221,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.currentfile",{"_index":1602,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.currentfile.name",{"_index":1618,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.currentfile.url",{"_index":1654,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.currenthread",{"_index":2212,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.currentthread",{"_index":642,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.currentuser",{"_index":475,"title":{},"body":{"components/AvatarComponent.html":{},"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{}}}],["this.currentuser.email",{"_index":490,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.currentuser.id",{"_index":1616,"title":{},"body":{"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{}}}],["this.currentuserid",{"_index":491,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.customdialogservice.opendialog(component",{"_index":1135,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MessageInputComponent.html":{},"injectables/ProfileService.html":{}}}],["this.customdialogservice.opendialogabsolute",{"_index":133,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["this.customdialogservice.opendialogabsolute({button",{"_index":1099,"title":{},"body":{"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"injectables/ProfileService.html":{}}}],["this.deletechannel(channelid",{"_index":699,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.deletechannelandmessages",{"_index":967,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.dialog.open(component",{"_index":793,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["this.dialogref",{"_index":797,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["this.dialogref.close",{"_index":131,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{}}}],["this.dialogref.close(emoji",{"_index":1085,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["this.dialogref.updateposition(positionasjson",{"_index":802,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["this.displayname",{"_index":2363,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.duplicatechannelname",{"_index":957,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.duplicatename",{"_index":124,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["this.editchanneldescription",{"_index":965,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.editchannelname",{"_index":964,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.editform.get('email')?.disable",{"_index":1043,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.editform.get('email')?.enable",{"_index":1044,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.editform.get('email')?.value",{"_index":1058,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.editform.get('name')?.value",{"_index":1057,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.editform.patchvalue",{"_index":1041,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.editform.valid",{"_index":1056,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.el.nativeelement.queryselector('.mobilediv",{"_index":1395,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.elref.nativeelement",{"_index":1858,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["this.email",{"_index":1294,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.emailexists",{"_index":1065,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/SignInComponent.html":{}}}],["this.error",{"_index":739,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{}}}],["this.errormessage",{"_index":1667,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.filterchannels(searchterm",{"_index":2021,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.filteredchannels.length",{"_index":1981,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["this.filteredmessages.length",{"_index":1982,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["this.filteredusers",{"_index":304,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.filteredusers.filter(u",{"_index":846,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.filteredusers.length",{"_index":1980,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["this.filtermessages(searchterm",{"_index":2022,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.filterusers(searchterm",{"_index":2020,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.findcurrentuserid",{"_index":477,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.getchanneldata",{"_index":1456,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.getchannelsref",{"_index":656,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.getdirectchanneluser()?.name",{"_index":1645,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.getmessagesref",{"_index":1788,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.getmobileposition(mobileposition",{"_index":803,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["this.getposition(buttonused",{"_index":801,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["this.getreactionsref",{"_index":1910,"title":{},"body":{"injectables/ReactionService.html":{}}}],["this.getuserdata",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["this.googleemail",{"_index":2358,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.googlename",{"_index":2357,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.googleprofileimg",{"_index":2359,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.gotologin",{"_index":499,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.hideelement",{"_index":1174,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["this.hideextras",{"_index":1339,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.hidemobileworkspace",{"_index":1392,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.iconsrc",{"_index":1304,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.id",{"_index":1296,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.imagechanged",{"_index":485,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["this.is_typing",{"_index":1300,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.isemaildisabled",{"_index":1030,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.isexpanded",{"_index":1434,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.isloading",{"_index":1272,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.ismobile",{"_index":799,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["this.isownprofile",{"_index":1880,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.last_channel",{"_index":1297,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.last_thread",{"_index":1298,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.loaduserdata('guest",{"_index":1303,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loaduserdata(this.userauth.googleemail",{"_index":1287,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logged_in",{"_index":1299,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.loginpassword",{"_index":1274,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":2343,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.mainmenu.opennewchannel",{"_index":1500,"title":{},"body":{"components/MainMenuHeaderComponent.html":{}}}],["this.mainpage.togglemenu",{"_index":1432,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.message.channel_id",{"_index":1609,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.message.created_at",{"_index":1626,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.message.id",{"_index":1612,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.message.message.attachements",{"_index":1620,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.message.message.attachements.push(path",{"_index":1621,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.message.message.text",{"_index":1625,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.message.modified_at",{"_index":1627,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.message.thread_id",{"_index":1610,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.message.user_id",{"_index":1624,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.messageinput",{"_index":1606,"title":{},"body":{"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{}}}],["this.messageinput.trim",{"_index":1601,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.messages",{"_index":1791,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messages.push(this.setmessage(message.data",{"_index":1793,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messageservice.addmessage(this.message",{"_index":1613,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.messageservice.allmessages",{"_index":2023,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.messageservice.getmessagesfromthread(thread_id",{"_index":2217,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.messageservice.messagesthread",{"_index":1629,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.messageservice.messagesthread[0",{"_index":1631,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.messageservice.removemessagesfromemptychannel(this.channelservice.currentchannel.id",{"_index":977,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.messageservice.removethreadmessagesfromchannel(this.channelservice.currentchannel.id",{"_index":975,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.messageservice.removethreadmessagesfromchannel(thread.id",{"_index":974,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.messageservice.unsubmessagesthread",{"_index":2220,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.messageservice.updatemessage(this.message",{"_index":1622,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.messageservice.updatemessage(threadmessage",{"_index":1635,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.messageservice.uploadfile(this.currentfile",{"_index":1619,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.messagesource.asobservable",{"_index":1752,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messagesource.next(messageid",{"_index":1773,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messagesthread",{"_index":1796,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messagesthread.push(this.setmessage(message.data",{"_index":1797,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.months[month",{"_index":2232,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.name",{"_index":1293,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.navigatetomainpage",{"_index":1277,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.newdirectchannel.created_at",{"_index":1141,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.newdirectchannel.creator",{"_index":1140,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.newdirectchannel.members",{"_index":1142,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.newlyaddedusers",{"_index":842,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.newlyaddedusers.filter(u",{"_index":847,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.newlyaddedusers.find(u",{"_index":843,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.newlyaddedusers.push(user",{"_index":845,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.onfilterusers",{"_index":310,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.oobcode",{"_index":1345,"title":{},"body":{"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.openadduserdialog(button",{"_index":132,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["this.openchannel(user_id",{"_index":1492,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["this.opennewchannel",{"_index":969,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.password",{"_index":1301,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.profile_img",{"_index":1295,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.profileservice.getownprofilestatus",{"_index":1131,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["this.profileservice.getviewinguserid",{"_index":1129,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["this.profileservice.openprofile(this.userid",{"_index":1859,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["this.profileservice.setownprofilestatus(false",{"_index":886,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["this.profileservice.setviewinguserid(userid",{"_index":887,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["this.removefile(fileinput",{"_index":1623,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.renderer.addclass(mobilediv",{"_index":1396,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.renderer.removeclass(mobilediv",{"_index":1398,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.resetemail",{"_index":738,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["this.resetuser",{"_index":1343,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.returntologin",{"_index":1947,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.route.snapshot.queryparams['oobcode",{"_index":1346,"title":{},"body":{"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":1172,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":474,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.router.navigate(['/login",{"_index":400,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{}}}],["this.router.navigate(['/main",{"_index":129,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuComponent.html":{},"injectables/UserAuthService.html":{}}}],["this.router.navigate(['login",{"_index":1348,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.router.navigatebyurl('/main",{"_index":1137,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.router.url",{"_index":1175,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["this.router.url.includes('/login",{"_index":399,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["this.router.url.includes('/reset",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["this.searchcontrol.value.trim().length",{"_index":1979,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["this.searchinput",{"_index":309,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.searchterm(prefix.slice(1",{"_index":2039,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.searchterm(searchterm",{"_index":2026,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.selectedavatar",{"_index":483,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.selectedchannelid.asobservable",{"_index":2150,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["this.selectedchannelid.next(id",{"_index":2146,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["this.selectedchannelid.next(null",{"_index":2149,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["this.selectedoption",{"_index":312,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["this.selecteduserid",{"_index":1491,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["this.selecteduserid.asobservable",{"_index":2151,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["this.selecteduserid.next(id",{"_index":2148,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["this.selecteduserid.next(null",{"_index":2147,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["this.selectedusers",{"_index":306,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.setavatartouser",{"_index":496,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.setchannel(channel.data",{"_index":640,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.setchannel(doc.data",{"_index":707,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.setcurrentchannel(channelfound.id",{"_index":716,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.setfocus",{"_index":2218,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.setgoogleuser",{"_index":1281,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.setmessagedata(trimmedmessageinput",{"_index":1603,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.setmessagewithfile(fileinput",{"_index":1605,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.setownprofilestatus(isownprofile",{"_index":1878,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.setuserchannel",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setviewinguserid(userid",{"_index":1879,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.sharedservice.backtochannels",{"_index":1399,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuComponent.html":{}}}],["this.sharedservice.backtochannels$.subscribe",{"_index":1397,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainPageComponent.html":{}}}],["this.sharedservice.ismenuopen",{"_index":1446,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MainPageComponent.html":{}}}],["this.sharedservice.showmobilediv",{"_index":1433,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{}}}],["this.sharedservice.showmobilediv$.subscribe",{"_index":1393,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.showmobiledivsubject.asobservable",{"_index":2057,"title":{},"body":{"injectables/SharedService.html":{}}}],["this.showmobiledivsubject.next",{"_index":2059,"title":{},"body":{"injectables/SharedService.html":{}}}],["this.showmobiledivsubject.unsubscribe",{"_index":2063,"title":{},"body":{"injectables/SharedService.html":{}}}],["this.showmobileworkspace",{"_index":1391,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.showuserlist",{"_index":307,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["this.stateservice.getselecteduserid().subscribe(id",{"_index":1490,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["this.stateservice.setselectedchannelid(channelid",{"_index":1431,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["this.stateservice.setselecteduserid(user_id",{"_index":1493,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["this.suballmessages",{"_index":1772,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.subchannels(currentuser.id",{"_index":621,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.submessages(channel_id",{"_index":1776,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.submessagesthread(thread_id",{"_index":1777,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.tempchanneldescription",{"_index":947,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.tempchannelname",{"_index":945,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.thisavatar",{"_index":1053,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.threadexists(message.thread_id",{"_index":2035,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.threadopen",{"_index":2251,"title":{},"body":{"injectables/ThreadService.html":{}}}],["this.threadservice.closethread",{"_index":1145,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SearchResultsComponent.html":{},"components/ThreadComponent.html":{}}}],["this.togglemenu",{"_index":1518,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.triggeranimation",{"_index":498,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.unsuballmessages",{"_index":1771,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.unsubchannels",{"_index":620,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.unsubcurrentchannel",{"_index":644,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.unsubmessages",{"_index":1774,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.unsubmessagesthread",{"_index":1775,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.update(memberids",{"_index":315,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["this.updatedialogposition(button",{"_index":796,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["this.updateloggedinuser",{"_index":1276,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.updatethreadmessage",{"_index":1614,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.uploadedavatar",{"_index":484,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.usedin",{"_index":1608,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["this.user",{"_index":1130,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/SignInComponent.html":{}}}],["this.user.email",{"_index":2105,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.user.password).then(async",{"_index":2110,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.user.profile_img",{"_index":494,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.userauth.changecurrentuser(displayname",{"_index":1063,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userauth.changecurrentuser(email",{"_index":1066,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userauth.changepassword(newpassword",{"_index":1945,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.userauth.checkauth().then(isloggedin",{"_index":390,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userauth.currentuser().then((user",{"_index":1040,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userauth.emailexists(email",{"_index":1064,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userauth.googleemail",{"_index":1046,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/LoginComponent.html":{}}}],["this.userauth.googleemail)?.id",{"_index":1284,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userauth.googlename",{"_index":1289,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userauth.googleprofileimg",{"_index":1290,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userauth.guestlogin",{"_index":1302,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userauth.handleactioncode(this.oobcode",{"_index":1347,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.userauth.loginuser(this.loginemail",{"_index":1273,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userauth.loginwithgoogle",{"_index":1280,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userauth.logout",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userauth.registeruser(this.user.email",{"_index":2109,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.userauth.resetpassword(this.resetemail).then",{"_index":737,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["this.userauth.saveuser(this.user.name",{"_index":2112,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.userid",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usermanagementservice.filterusers(this.searchinput",{"_index":305,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.usermanagementservice.getalluserids",{"_index":313,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["this.usermanagementservice.getcurrentchannelid",{"_index":316,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.usermanagementservice.getmemberids(this.selectedusers",{"_index":314,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.usermanagementservice.removeselecteduser(this.selectedusers",{"_index":311,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.usermanagementservice.selectuser(this.selectedusers",{"_index":308,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.usermanagementservice.updatemembers(channelid",{"_index":317,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.users",{"_index":1489,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["this.userservice",{"_index":1978,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["this.userservice.addavatartouser(this.currentuserid",{"_index":495,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.userservice.adddatabaseidtouser(this.currentuserid",{"_index":492,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.userservice.adduser(this.user",{"_index":2111,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.userservice.adduser(user",{"_index":1285,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.allusers",{"_index":488,"title":{},"body":{"components/AvatarComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/SearchService.html":{}}}],["this.userservice.allusers.filter((user",{"_index":2398,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["this.userservice.allusers.find(user",{"_index":1283,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.allusers.map(user",{"_index":2412,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["this.userservice.currentuser",{"_index":401,"title":{},"body":{"components/AppComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{}}}],["this.userservice.currentuser.email",{"_index":1061,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userservice.currentuser.id",{"_index":80,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/ProfileService.html":{}}}],["this.userservice.currentuser.last_channel",{"_index":403,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.currentuser.last_thread",{"_index":2219,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.userservice.currentuser.name",{"_index":1059,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userservice.currentuser.profile_img",{"_index":1052,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userservice.currentuser?.email",{"_index":1045,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userservice.currentuser?.profile_img",{"_index":1035,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.userservice.currentuserthread$.subscribe(thread_id",{"_index":2214,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.userservice.deleteuser(this.currentuserid",{"_index":478,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.userservice.getcurrentuser",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.getcurrentuser(loginemail",{"_index":1278,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.getuser(contact",{"_index":1637,"title":{},"body":{"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{}}}],["this.userservice.getuser(userid",{"_index":950,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/SearchResultsComponent.html":{}}}],["this.userservice.getusers",{"_index":404,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["this.userservice.getusersbyids(this.channelservice.currentchannel.members",{"_index":841,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.userservice.savelastthread(this.userservice.currentuser.id",{"_index":1144,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SearchResultsComponent.html":{},"components/ThreadComponent.html":{}}}],["this.userservice.subcurrentuserforthread(this.userservice.currentuser.id",{"_index":2213,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.userservice.updatelastchannel(this.userservice.currentuser.id",{"_index":1459,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.userservice.updateonlinestatus(this.userid",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.updateonlinestatus(this.userservice.currentuser.id",{"_index":1213,"title":{},"body":{"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{}}}],["this.userservice.updateuseremail(this.userservice.currentuser.id",{"_index":2342,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.userservice.updateuserimage(this.userservice.currentuser.id",{"_index":1054,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userservice.updateusername(this.userservice.currentuser.id",{"_index":2345,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.userservice.uploadimage(file",{"_index":482,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["this.utilityservice.getchannelcreationtime",{"_index":1983,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["this.validatepassword(this.user.password",{"_index":2108,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.viewinguserid",{"_index":1881,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.weekdays[day",{"_index":2231,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.wrongfiletype",{"_index":1666,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["thisavatar",{"_index":999,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["thread",{"_index":971,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/MessageInputComponent.html":{},"components/ThreadComponent.html":{},"miscellaneous/enumerations.html":{}}}],["thread'},{'name",{"_index":245,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["thread.component.html",{"_index":2153,"title":{},"body":{"components/ThreadComponent.html":{}}}],["thread.component.scss",{"_index":2154,"title":{},"body":{"components/ThreadComponent.html":{}}}],["thread.id",{"_index":2038,"title":{},"body":{"injectables/SearchService.html":{}}}],["thread.name",{"_index":973,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["thread/thread.component",{"_index":1517,"title":{},"body":{"components/MainPageComponent.html":{}}}],["thread_id",{"_index":568,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["threadcomponent",{"_index":244,"title":{"components/ThreadComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["threadexists",{"_index":1997,"title":{},"body":{"injectables/SearchService.html":{}}}],["threadexists(threadid",{"_index":2017,"title":{},"body":{"injectables/SearchService.html":{}}}],["threadid",{"_index":1739,"title":{},"body":{"injectables/MessageService.html":{},"injectables/SearchService.html":{}}}],["threadmessage",{"_index":1630,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["threadmessage.last_reply",{"_index":1634,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["threadmessage.total_replies",{"_index":1632,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["threadmessages",{"_index":1628,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["threadmessages.length",{"_index":1633,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["threadopen",{"_index":2246,"title":{},"body":{"injectables/ThreadService.html":{}}}],["threads",{"_index":2018,"title":{},"body":{"injectables/SearchService.html":{}}}],["threads.some(thread",{"_index":2037,"title":{},"body":{"injectables/SearchService.html":{}}}],["threadservice",{"_index":1110,"title":{"injectables/ThreadService.html":{}},"body":{"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/SearchResultsComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"coverage.html":{}}}],["throw",{"_index":677,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{}}}],["timeoutid",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["title",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["toggleexpansion",{"_index":1412,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["togglemenu",{"_index":1502,"title":{},"body":{"components/MainPageComponent.html":{},"injectables/SharedService.html":{}}}],["tojson",{"_index":1248,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["top",{"_index":778,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["total_replies",{"_index":1532,"title":{},"body":{"interfaces/Message.html":{},"injectables/MessageService.html":{}}}],["track",{"_index":329,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{},"components/ThreadComponent.html":{}}}],["transaction",{"_index":673,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["transaction.get(docref",{"_index":675,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["transaction.update(docref",{"_index":688,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["triggeranimation",{"_index":435,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["triggerresize",{"_index":908,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["trimmedmessageinput",{"_index":1584,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["true",{"_index":23,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"directives/OpenProfileDirective.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["tslib",{"_index":2491,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":62,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":107,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/SearchService.html":{}}}],["type.enum.ts",{"_index":2498,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeof",{"_index":643,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{},"components/SignInComponent.html":{}}}],["u.id",{"_index":844,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"injectables/UserManagementService.html":{}}}],["unbekannter",{"_index":951,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["und",{"_index":1195,"title":{},"body":{"components/ImprintComponent.html":{},"components/SignInComponent.html":{}}}],["undefined",{"_index":591,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/CustomDialogService.html":{},"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{},"components/SignInComponent.html":{},"injectables/UserManagementService.html":{}}}],["ungültig",{"_index":750,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["ungültiger",{"_index":1672,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["unicode",{"_index":1885,"title":{},"body":{"interfaces/Reaction.html":{},"injectables/ReactionService.html":{}}}],["unknown",{"_index":565,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"injectables/UserAuthService.html":{}}}],["unloadhandler",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["unloadhandler(event",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["unsuballmessages",{"_index":1690,"title":{},"body":{"injectables/MessageService.html":{}}}],["unsubchannels",{"_index":528,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["unsubcurrentchannel",{"_index":529,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["unsubcurrentthread",{"_index":530,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["unsubmessages",{"_index":1691,"title":{},"body":{"injectables/MessageService.html":{}}}],["unsubmessagesthread",{"_index":1692,"title":{},"body":{"injectables/MessageService.html":{}}}],["update",{"_index":274,"title":{},"body":{"components/AddMemberCardComponent.html":{},"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["update(memberids",{"_index":281,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["updatechannel",{"_index":547,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["updatechannel(channel",{"_index":586,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["updatechannelmembers",{"_index":548,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["updatechannelmembers(channelid",{"_index":588,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["updatedialogposition",{"_index":767,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["updatedialogposition(button",{"_index":786,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["updatedmemberids",{"_index":685,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["updatedoc",{"_index":608,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["updatedoc(docref",{"_index":670,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["updateeditedchannel",{"_index":909,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["updateemail",{"_index":2325,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["updateemail(user",{"_index":2351,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["updateloggedinuser",{"_index":1235,"title":{},"body":{"components/LoginComponent.html":{}}}],["updatemembers",{"_index":2384,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["updatemembers(channelid",{"_index":2395,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["updatemessage",{"_index":1709,"title":{},"body":{"injectables/MessageService.html":{}}}],["updatemessage(message",{"_index":1747,"title":{},"body":{"injectables/MessageService.html":{}}}],["updateprofile",{"_index":735,"title":{},"body":{"components/CheckEmailComponent.html":{},"injectables/UserAuthService.html":{}}}],["updateprofile(user",{"_index":2344,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["updateprofile(user_auth",{"_index":2362,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["updatereaction",{"_index":1892,"title":{},"body":{"injectables/ReactionService.html":{}}}],["updatereaction(reaction",{"_index":1902,"title":{},"body":{"injectables/ReactionService.html":{}}}],["updatethreadmessage",{"_index":1558,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["updateuserpassword",{"_index":1928,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["updateuserpassword(newpassword",{"_index":1937,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["uploadavatar",{"_index":436,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["uploadavatar(event",{"_index":451,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["uploadbytesresumable",{"_index":1764,"title":{},"body":{"injectables/MessageService.html":{}}}],["uploadbytesresumable(storageref",{"_index":1811,"title":{},"body":{"injectables/MessageService.html":{}}}],["uploadedavatar",{"_index":428,"title":{},"body":{"components/AvatarComponent.html":{}}}],["uploadfile",{"_index":1710,"title":{},"body":{"injectables/MessageService.html":{}}}],["uploadfile(file",{"_index":1749,"title":{},"body":{"injectables/MessageService.html":{}}}],["uploadtask",{"_index":1810,"title":{},"body":{"injectables/MessageService.html":{}}}],["uploadtask.on('state_changed",{"_index":1812,"title":{},"body":{"injectables/MessageService.html":{}}}],["url",{"_index":1816,"title":{},"body":{"injectables/MessageService.html":{}}}],["url.createobjecturl(file",{"_index":1675,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["use",{"_index":2518,"title":{},"body":{"index.html":{}}}],["usedin",{"_index":1561,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["user",{"_index":247,"title":{"classes/User.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"coverage.html":{}}}],["user.displayname",{"_index":1042,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"injectables/UserAuthService.html":{}}}],["user.email",{"_index":489,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{}}}],["user.id",{"_index":330,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/AvatarComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/LoginComponent.html":{},"injectables/UserManagementService.html":{}}}],["user.id).filter((id",{"_index":2411,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["user.isanonymous",{"_index":2374,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["user.last_channel",{"_index":1291,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.last_thread",{"_index":1292,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.logged_in",{"_index":331,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["user.name",{"_index":332,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/UserManagementService.html":{}}}],["user.photourl",{"_index":2360,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["user.service",{"_index":2335,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["user?.email",{"_index":1153,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["user?.id",{"_index":1148,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["user?.logged_in",{"_index":1149,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["user?.name",{"_index":1147,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["user_auth",{"_index":2361,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["user_auth.displayname",{"_index":2364,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["user_id",{"_index":585,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"interfaces/Message.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["userauth",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{}}}],["userauthservice",{"_index":354,"title":{"injectables/UserAuthService.html":{}},"body":{"components/AppComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{},"coverage.html":{}}}],["usercreatedsnackbarcomponent",{"_index":246,"title":{"components/UserCreatedSnackbarComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["userexists",{"_index":2106,"title":{},"body":{"components/SignInComponent.html":{}}}],["userheadbutton",{"_index":1132,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["userid",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfileComponent.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{}}}],["usermanagementservice",{"_index":268,"title":{"injectables/UserManagementService.html":{}},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"injectables/UserManagementService.html":{},"coverage.html":{}}}],["users",{"_index":1465,"title":{},"body":{"components/MainMenuDmComponent.html":{},"components/MessageInputComponent.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{}}}],["users.filter((user",{"_index":2027,"title":{},"body":{"injectables/SearchService.html":{}}}],["userservice",{"_index":47,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/ProfileService.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"coverage.html":{}}}],["userservice.allusers",{"_index":987,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["userservice.currentuser",{"_index":385,"title":{},"body":{"components/AppComponent.html":{}}}],["userservice.currentuser.email",{"_index":1152,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{}}}],["userservice.currentuser.id",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["userservice.currentuser.name",{"_index":1146,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["userservice.currentuser?.id",{"_index":989,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["userservice.currentuser?.name",{"_index":1107,"title":{},"body":{"components/DialogShowMembersComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SearchResultsComponent.html":{}}}],["userservice.getuser(member).logged_in",{"_index":1106,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["userservice.getuser(member).name",{"_index":1105,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["usevalue",{"_index":259,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["utilityservice",{"_index":1957,"title":{"injectables/UtilityService.html":{}},"body":{"components/SearchResultsComponent.html":{},"injectables/UtilityService.html":{},"coverage.html":{}}}],["validatepassword",{"_index":2080,"title":{},"body":{"components/SignInComponent.html":{}}}],["validatepassword(password",{"_index":2091,"title":{},"body":{"components/SignInComponent.html":{}}}],["validators",{"_index":1039,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["validators.email",{"_index":1031,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["validators.required",{"_index":1028,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["value",{"_index":74,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UtilityService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":171,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["variable",{"_index":2428,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2529,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vergessen",{"_index":1318,"title":{},"body":{"components/LoginComponent.html":{}}}],["verifybeforeupdateemail",{"_index":2333,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["verifybeforeupdateemail(user",{"_index":2341,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["verifypasswordresetcode",{"_index":2326,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["verifypasswordresetcode(auth",{"_index":2366,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["verlassen",{"_index":990,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["version",{"_index":2506,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versuchen",{"_index":1317,"title":{},"body":{"components/LoginComponent.html":{}}}],["verticalposition",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["verwenden",{"_index":515,"title":{},"body":{"components/AvatarComponent.html":{}}}],["verwendest",{"_index":1313,"title":{},"body":{"components/LoginComponent.html":{}}}],["viewchild",{"_index":938,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/MessageInputComponent.html":{},"components/SignInComponent.html":{}}}],["viewchild('autosize",{"_index":926,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["viewchild('channelinput",{"_index":1589,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["viewinguserid",{"_index":1861,"title":{},"body":{"injectables/ProfileService.html":{}}}],["void",{"_index":72,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/MessageInputComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{}}}],["vollständiger",{"_index":1069,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["von",{"_index":985,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["war",{"_index":1827,"title":{},"body":{"injectables/MessageService.html":{}}}],["webbrowser",{"_index":2511,"title":{},"body":{"index.html":{}}}],["weekdays",{"_index":2158,"title":{},"body":{"components/ThreadComponent.html":{}}}],["weiter",{"_index":518,"title":{},"body":{"components/AvatarComponent.html":{},"components/SignInComponent.html":{}}}],["werden",{"_index":1050,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["where('channel_id",{"_index":1789,"title":{},"body":{"injectables/MessageService.html":{}}}],["where('members",{"_index":662,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["where('message_id",{"_index":1912,"title":{},"body":{"injectables/ReactionService.html":{}}}],["where('thread_id",{"_index":1795,"title":{},"body":{"injectables/MessageService.html":{}}}],["window",{"_index":1349,"title":{},"body":{"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{},"components/SignInComponent.html":{}}}],["window.innerwidth",{"_index":319,"title":{},"body":{"components/AddMemberCardComponent.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"components/LogOutDialogComponent.html":{},"components/MainPageComponent.html":{},"components/SignInComponent.html":{}}}],["window.localstorage",{"_index":1350,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1831,"title":{},"body":{"injectables/MessageService.html":{}}}],["window.url.revokeobjecturl(bloburl",{"_index":1840,"title":{},"body":{"injectables/MessageService.html":{}}}],["window:resize",{"_index":1503,"title":{},"body":{"components/MainPageComponent.html":{}}}],["window:resize(event",{"_index":1505,"title":{},"body":{"components/MainPageComponent.html":{}}}],["window:unload",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["window:unload(event",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["wir",{"_index":751,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{}}}],["wird",{"_index":681,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["workspace",{"_index":1524,"title":{},"body":{"components/MainPageComponent.html":{}}}],["wrongfiletype",{"_index":1559,"title":{},"body":{"components/MessageInputComponent.html":{}}}],["wähle",{"_index":507,"title":{},"body":{"components/AvatarComponent.html":{}}}],["wählen",{"_index":163,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AvatarComponent.html":{},"components/MessageInputComponent.html":{}}}],["y",{"_index":2237,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["yes",{"_index":775,"title":{},"body":{"injectables/CustomDialogService.html":{},"injectables/MessageService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{}}}],["zahl",{"_index":2124,"title":{},"body":{"components/SignInComponent.html":{}}}],["zeichen",{"_index":2121,"title":{},"body":{"components/SignInComponent.html":{}}}],["zertürk",{"_index":1192,"title":{},"body":{"components/ImprintComponent.html":{}}}],["zone.js",{"_index":2493,"title":{},"body":{"dependencies.html":{}}}],["zu",{"_index":1309,"title":{},"body":{"components/LoginComponent.html":{},"components/MessageInputComponent.html":{},"components/SignInComponent.html":{}}}],["zum",{"_index":153,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["zur",{"_index":145,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["zurücksetzen",{"_index":741,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddChannelCardComponent.html":{"url":"components/AddChannelCardComponent.html","title":"component - AddChannelCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddChannelCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-channel-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCardModule\n                            MatIconModule\n                            MatInputModule\n                            MatButtonModule\n                            MatDialogContent\n                            MatDialogActions\n                            MatDialogModule\n                            FormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./add-channel-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./add-channel-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channel\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                customDialogService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                duplicateName\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createChannel\n                            \n                            \n                                openAddUserDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog, channelService: ChannelFirebaseService, userService: UserService, customDialogService: CustomDialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    createChannel(button: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddUserDialog\n                        \n                    \n                \n            \n            \n                \nopenAddUserDialog(button: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    name: '',\n    description: '',\n    created_at: Date.now(),\n    creator: this.userService.currentUser.id,\n    members: [this.userService.currentUser.id],\n    active_members: [],\n    channel_type: ChannelTypeEnum.main,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        customDialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomDialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duplicateName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MatDialogContent,\n  MatDialogActions,\n  MatDialogRef,\n  MatDialogModule,\n  MatDialog,\n} from '@angular/material/dialog';\nimport { ChannelFirebaseService } from '../../../../firebase.service/channelFirebase.service';\nimport { Channel } from '../../../../interfaces/channel.interface';\nimport { ChannelTypeEnum } from '../../../../shared/enums/channel-type.enum';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from '../../../../firebase.service/user.service';\nimport { CustomDialogService } from '../../../../services/custom-dialog.service';\nimport { AddMemberCardComponent } from '../add-member-card/add-member-card.component';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-channel-card',\n  standalone: true,\n  imports: [\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogContent,\n    MatDialogActions,\n    MatDialogModule,\n    FormsModule,\n    CommonModule\n  ],\n  templateUrl: './add-channel-card.component.html',\n  styleUrl: './add-channel-card.component.scss',\n})\nexport class AddChannelCardComponent {\n  duplicateName = false;\n  channel: Channel = {\n    id: '',\n    name: '',\n    description: '',\n    created_at: Date.now(),\n    creator: this.userService.currentUser.id,\n    members: [this.userService.currentUser.id],\n    active_members: [],\n    channel_type: ChannelTypeEnum.main,\n  };\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public dialog: MatDialog,\n    public channelService: ChannelFirebaseService,\n    public userService: UserService,\n    public customDialogService: CustomDialogService,\n    public router: Router\n  ) { }\n\n\n  async createChannel(button: HTMLElement): Promise {\n    const isDuplicate = this.channelService.channels.some(channel => channel.name === this.channel.name);\n    if (isDuplicate) {\n      this.duplicateName = true;\n    } else {\n      const channelId = await this.channelService.addChannel(this.channel);\n      this.channelService.setCurrentChannel(channelId);\n      this.router.navigate(['/main-page', channelId]);\n      this.dialogRef.close();\n      this.openAddUserDialog(button);\n    }\n  }\n\n\n  openAddUserDialog(button: HTMLElement): void {\n    const component = AddMemberCardComponent;\n    this.customDialogService.openDialogAbsolute({ button, component, position: 'mid', mobilePosition: 'bottom', maxWidth: '554px' });\n  }\n}\n\n    \n\n    \n        \n    \n        Channel erstellen\n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n\n    \n        Channels dienen deinem Team zur Kommunikation. Am besten sollten sie themenbezogen sein #marketing zum Beispiel.\n    \n\n    \n        Channel-Name\n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n            \n            \n        \n        @if (duplicateName){\n            Ein Kanal mit diesem Namen existiert bereits. Bitte wählen Sie einen anderen Namen.\n        }\n    \n\n    \n        Beschreibung (optional)\n        \n            \n        \n    \n\n    \n        Erstellen\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Channel erstellen                                                                                                                                                                Channels dienen deinem Team zur Kommunikation. Am besten sollten sie themenbezogen sein #marketing zum Beispiel.                Channel-Name                                                                                                                                                                                @if (duplicateName){            Ein Kanal mit diesem Namen existiert bereits. Bitte wählen Sie einen anderen Namen.        }                Beschreibung (optional)                                            Erstellen    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddChannelCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddMemberCardComponent.html":{"url":"components/AddMemberCardComponent.html","title":"component - AddMemberCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddMemberCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: MAT_RADIO_DEFAULT_OPTIONS, useValue: { color:  } }\n                \n            \n\n\n            \n                selector\n                app-add-member-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                            MatRadioModule\n                            FormsModule\n                                OpenProfileDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./add-member-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./add-member-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                searchInput\n                            \n                            \n                                selectedOption\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                    Public\n                                sharedService\n                            \n                            \n                                showUserList\n                            \n                            \n                                    Public\n                                userManagementService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenuIfMobile\n                            \n                            \n                                onFilterUsers\n                            \n                            \n                                onRemoveSelectedUser\n                            \n                            \n                                onSelectUser\n                            \n                            \n                                onUpdateMembers\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, userService: UserService, channelService: ChannelFirebaseService, userManagementService: UserManagementService, router: Router, sharedService: SharedService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userManagementService\n                                                  \n                                                        \n                                                                        UserManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenuIfMobile\n                        \n                    \n                \n            \n            \n                \ncloseMenuIfMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilterUsers\n                        \n                    \n                \n            \n            \n                \nonFilterUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveSelectedUser\n                        \n                    \n                \n            \n            \n                \nonRemoveSelectedUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectUser\n                        \n                    \n                \n            \n            \n                \nonSelectUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdateMembers\n                        \n                    \n                \n            \n            \n                \nonUpdateMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(memberIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sharedService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SharedService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUserList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userManagementService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserManagementService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport {\n  MatRadioModule,\n  MAT_RADIO_DEFAULT_OPTIONS,\n} from '@angular/material/radio';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from '../../../../firebase.service/user.service';\nimport { User } from '../../../../interfaces/user.interface';\nimport { ChannelFirebaseService } from '../../../../firebase.service/channelFirebase.service';\nimport { UserManagementService } from '../../../../services/user-management.service';\nimport { OpenProfileDirective } from '../../../../shared/directives/open-profile.directive';\nimport { Router } from '@angular/router';\nimport { SharedService } from '../../../../services/shared.service';\n\n@Component({\n  selector: 'app-add-member-card',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, MatRadioModule, FormsModule, OpenProfileDirective],\n  providers: [\n    { provide: MAT_RADIO_DEFAULT_OPTIONS, useValue: { color: 'primary' } },\n  ],\n  templateUrl: './add-member-card.component.html',\n  styleUrl: './add-member-card.component.scss',\n})\nexport class AddMemberCardComponent {\n  selectedOption: string = 'all';\n  searchInput: string = '';\n  filteredUsers: User[] = [];\n  selectedUsers: User[] = [];\n  showUserList: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    public userManagementService: UserManagementService,\n    public router: Router,\n    public sharedService: SharedService\n  ) { }\n\n\n  onFilterUsers(): void {\n    this.filteredUsers = this.userManagementService.filterUsers(this.searchInput, this.selectedUsers);\n    this.showUserList = true;\n  }\n\n\n  onSelectUser(user: User): void {\n    this.selectedUsers = this.userManagementService.selectUser(this.selectedUsers, user);\n    this.searchInput = '';\n    this.onFilterUsers();\n  }\n\n\n  onRemoveSelectedUser(user: User): void {\n    this.selectedUsers = this.userManagementService.removeSelectedUser(this.selectedUsers, user);\n    this.onFilterUsers();\n  }\n\n\n  onUpdateMembers(): void {\n    let memberIds: string[];\n    if (this.selectedOption === 'all') {\n      memberIds = this.userManagementService.getAllUserIds();\n    } else {\n      memberIds = this.userManagementService.getMemberIds(this.selectedUsers);\n    }\n    this.update(memberIds);\n    \n  }\n\n\n  update(memberIds: string[]) {\n    const channelId = this.userManagementService.getCurrentChannelId();\n    if (channelId) {\n      this.userManagementService.updateMembers(channelId, memberIds)\n      this.closeMenuIfMobile();\n      this.router.navigate(['/main-page/' + channelId])\n        .then(() =>\n          this.dialogRef.close()\n        );\n    }\n  }\n\n\n  closeMenuIfMobile() {\n    if (window.innerWidth \n    \n\n    \n        \n    \n    \n        Leute hinzufügen\n        \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n\n    \n        Alle Mitglieder hinzufügen\n        Bestimmte Leute hinzufügen\n    \n\n    @if (selectedOption === 'specific') {\n    \n        @if (selectedUsers.length > 0) {\n        @for(user of selectedUsers; track user.id) {\n        \n            \n                \n                @if (!user.logged_in){\n                \n                }\n                @if (user.logged_in){\n                \n                }\n            \n            \n                {{ user.name }}\n            \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n        \n        }\n        }\n    \n\n    \n        \n            \n            @if (filteredUsers.length > 0 && showUserList) {\n            \n                \n                    @for(user of filteredUsers; track user.id) {\n                    \n                        \n                            \n                            @if (!user.logged_in){\n                            \n                            }\n                            @if (user.logged_in){\n                            \n                            }\n                        \n                        {{user.name}}\n                    \n                    }\n                \n            \n            }\n        \n    \n    }\n\n    Erstellen\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Leute hinzufügen                                                                                                                                                                        Alle Mitglieder hinzufügen        Bestimmte Leute hinzufügen        @if (selectedOption === \\'specific\\') {            @if (selectedUsers.length > 0) {        @for(user of selectedUsers; track user.id) {                                                    @if (!user.logged_in){                                }                @if (user.logged_in){                                }                                        {{ user.name }}                                                                                                                                                                                                                    }        }                                        @if (filteredUsers.length > 0 && showUserList) {                                                @for(user of filteredUsers; track user.id) {                                                                                                    @if (!user.logged_in){                                                        }                            @if (user.logged_in){                                                        }                                                {{user.name}}                                        }                                        }                }    Erstellen'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddMemberCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                LoginPageComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                timeoutId\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                userAuth\n                            \n                            \n                                userId\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUrls\n                            \n                            \n                                confirmPopup\n                            \n                            \n                                getUserData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setUserChannel\n                            \n                            \n                                    \n                                unloadHandler\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:unload\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _snackBar: MatSnackBar, userAuth: UserAuthService, userService: UserService, channelService: ChannelFirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:unload\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:unload(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:34\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkUrls\n                        \n                    \n                \n            \n            \n                \ncheckUrls()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPopup\n                        \n                    \n                \n            \n            \n                \nconfirmPopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserChannel\n                        \n                    \n                \n            \n            \n                \nsetUserChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unloadHandler\n                        \n                    \n                \n            \n            \n                \n                        \n                    unloadHandler(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:unload', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeoutId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DABubble'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserAuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { EmailSnackbarComponent } from './popups/email-snackbar/email-snackbar.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserAuthService } from './firebase.service/user.auth.service';\nimport { UserService } from './firebase.service/user.service';\nimport { ChannelFirebaseService } from './firebase.service/channelFirebase.service';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, LoginPageComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'DABubble';\n  timeoutId: any;\n  userId: any;\n\n  constructor(private router: Router, \n    private _snackBar: MatSnackBar, \n    public userAuth: UserAuthService,\n    public userService: UserService, \n    public channelService: ChannelFirebaseService) {\n    if (userService.currentUser) {\n      this.userId = userService.currentUser.id;\n    }\n  }\n\n\n  @HostListener('window:unload', ['$event'])\n  unloadHandler(event: Event) {\n    this.userAuth.logout();\n    if (this.userId) {\n    this.userService.updateOnlineStatus(this.userId, false);\n    }\n  }\n\n\n  ngOnInit(): void {\n    this.userAuth.checkAuth().then(isLoggedIn => {\n      if (isLoggedIn) {\n        if (this.router.url.includes('/reset-password')){\n          return;\n        }\n        this.getUserData();\n        this.setUserChannel();\n      } if (!isLoggedIn) {\n        this.checkUrls();\n      }\n    });\n  }\n\n\n  checkUrls(){\n    if (this.router.url.includes('/reset-password?mode=action&oobCode=code') || this.router.url.includes('/reset-password')) {\n      return;\n    } if (this.router.url.includes('/login-page/login')) {\n      return;\n    }\n    else {\n    this.userAuth.logout();\n    this.router.navigate(['/login-page/login']);\n    }\n  }\n\n\n  setUserChannel() {\n    if (this.userService.currentUser) {\n      if (this.channelService.currentChannel.active_members.includes(this.userService.currentUser.id)) {\n        this.router.navigate(['/main-page/' + this.userService.currentUser.last_channel]);\n      } else { \n        this.router.navigate(['/main-page']);\n      }\n    }\n  }\n\n\n  getUserData(){\n    this.userService.getUsers();\n    this.userService.getCurrentUser();\n    setTimeout(() => {\n      localStorage.setItem('currentUser', JSON.stringify(this.userService.currentUser));\n    }, 500);\n  }\n\n\n  confirmPopup() {\n    this._snackBar.openFromComponent(EmailSnackbarComponent, {\n      duration: 2000,\n      horizontalPosition: 'right',\n      verticalPosition: 'bottom',\n      direction: 'rtl'\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AvatarComponent.html":{"url":"components/AvatarComponent.html","title":"component - AvatarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AvatarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/avatar/avatar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-avatar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./avatar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./avatar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatars\n                            \n                            \n                                currentUser\n                            \n                            \n                                currentUserId\n                            \n                            \n                                imageChanged\n                            \n                            \n                                selectedAvatar\n                            \n                            \n                                uploadedAvatar\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAvatar\n                            \n                            \n                                confirmPopup\n                            \n                            \n                                createUser\n                            \n                            \n                                findCurrentUserId\n                            \n                            \n                                goToLogin\n                            \n                            \n                                goToSignIn\n                            \n                            \n                                ngonInit\n                            \n                            \n                                setAvatarToUser\n                            \n                            \n                                triggerAnimation\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _snackBar: MatSnackBar, route: ActivatedRoute, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/avatar/avatar.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeAvatar\n                        \n                    \n                \n            \n            \n                \nchangeAvatar(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPopup\n                        \n                    \n                \n            \n            \n                \nconfirmPopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findCurrentUserId\n                        \n                    \n                \n            \n            \n                \nfindCurrentUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToLogin\n                        \n                    \n                \n            \n            \n                \ngoToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToSignIn\n                        \n                    \n                \n            \n            \n                \ngoToSignIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngonInit\n                        \n                    \n                \n            \n            \n                \nngonInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAvatarToUser\n                        \n                    \n                \n            \n            \n                \nsetAvatarToUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerAnimation\n                        \n                    \n                \n            \n            \n                \ntriggerAnimation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'assets/img/person.png',\n    'assets/img/avatar-1.jpg',\n    'assets/img/avatar-2.jpg',\n    'assets/img/avatar-3.jpg',\n    'assets/img/avatar-4.jpg',\n    'assets/img/avatar-5.jpg',\n    'assets/img/avatar-6.jpg',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageChanged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedAvatar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.avatars[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadedAvatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserCreatedSnackbarComponent } from '../../popups/user-created-snackbar/user-created-snackbar.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserService } from '../../firebase.service/user.service';\nimport { User } from '../../models/user';\n\n@Component({\n  selector: 'app-avatar',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './avatar.component.html',\n  styleUrl: './avatar.component.scss'\n})\nexport class AvatarComponent {\n  avatars = [\n    'assets/img/person.png',\n    'assets/img/avatar-1.jpg',\n    'assets/img/avatar-2.jpg',\n    'assets/img/avatar-3.jpg',\n    'assets/img/avatar-4.jpg',\n    'assets/img/avatar-5.jpg',\n    'assets/img/avatar-6.jpg',\n  ];\n  selectedAvatar = this.avatars[0];\n  uploadedAvatar = '';\n  imageChanged: boolean = false;\n  userId: string | any;\n  user: User = new User();\n  currentUser: any;\n  currentUserId: string | any;\n\n  constructor(private router: Router, private _snackBar: MatSnackBar, private route: ActivatedRoute, \n    private userService: UserService) { \n      const navigation = this.router.getCurrentNavigation();\n      this.currentUser = navigation?.extras.state?.['user'];\n    }\n\n\n  ngonInit() {\n    this.userService.getUsers();\n  }\n\n\n  goToSignIn(){\n    this.findCurrentUserId();\n    this.userService.deleteUser(this.currentUserId);\n    this.router.navigate(['/login-page/signin']);\n  }\n\n\n  goToLogin(){\n    setTimeout(() => {\n      this.router.navigate(['/login-page/login']);\n    }, 2000);\n  }\n\n\n  async uploadAvatar(event: any) {\n    const file = event.target.files[0];\n    const imageUrl = await this.userService.uploadImage(file);\n    this.selectedAvatar = imageUrl;\n    this.uploadedAvatar = this.selectedAvatar;\n    this.imageChanged = true;\n  }\n\n\n  changeAvatar(i:number){\n    this.selectedAvatar = this.avatars[i];\n    this.imageChanged = true;\n  }\n\n\n  findCurrentUserId(): void {\n    for (let user of this.userService.allUsers) {\n      if (user.email === this.currentUser.email) {\n        this.currentUserId = user.id;\n        this.userService.addDatabaseIdToUser(this.currentUserId);\n        break;\n        \n      }\n    }\n  }\n\n\n  setAvatarToUser(){\n    this.findCurrentUserId();\n    this.user.profile_img = this.selectedAvatar;\n    this.userService.addAvatarToUser(this.currentUserId, this.selectedAvatar);\n  }\n\n\n  createUser(){\n    this.setAvatarToUser();\n    this.confirmPopup();\n    this.triggerAnimation();\n    this.goToLogin();\n  }\n\n\n  triggerAnimation() {\n    const element = document.querySelector('.cdk-overlay-container');\n    if (element) {\n      element.classList.add('animate');\n      setTimeout(() => {\n        element.classList.remove('animate');\n      }, 2000);\n    }\n  }\n  \n\n  confirmPopup(){\n    this._snackBar.openFromComponent(UserCreatedSnackbarComponent, {\n      duration: 2000,\n      horizontalPosition: 'start',\n      verticalPosition: 'bottom',\n      direction: 'rtl',\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    Wähle deinen Avatar\n    \n        \n            \n        \n        {{currentUser?.name}}\n        \n            Aus der Liste wählen\n\n        \n\n        \n            \n            \n            \n            \n            \n            \n        \n        \n            eigenes Bild verwenden\n            \n            Datei Hochladen\n        \n    \n    \n        Weiter\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Wähle deinen Avatar                                        {{currentUser?.name}}                    Aus der Liste wählen                                                                                                                    eigenes Bild verwenden                        Datei Hochladen                        Weiter    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'AvatarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Channel.html":{"url":"interfaces/Channel.html","title":"interface - Channel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Channel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/channel.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active_members\n                                        \n                                \n                                \n                                        \n                                            channel_type\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active_members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active_members:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channel_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channel_type:         ChannelTypeEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChannelTypeEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChannelTypeEnum } from '../shared/enums/channel-type.enum';\n\nexport interface Channel {\n  id: string;\n  name: string;\n  description: string;\n  created_at: number;\n  creator: string;\n  members: string[];\n  active_members: string[];\n  channel_type: ChannelTypeEnum;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChannelFirebaseService.html":{"url":"injectables/ChannelFirebaseService.html","title":"injectable - ChannelFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChannelFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/firebase.service/channelFirebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channel\n                            \n                            \n                                channels\n                            \n                            \n                                currentChannel\n                            \n                            \n                                currentThread\n                            \n                            \n                                firestore\n                            \n                            \n                                unsubChannels\n                            \n                            \n                                unsubCurrentChannel\n                            \n                            \n                                unsubCurrentThread\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addChannel\n                            \n                            \n                                    Async\n                                createNewChannel\n                            \n                            \n                                    Async\n                                deleteChannel\n                            \n                            \n                                    Async\n                                getAllChannels\n                            \n                            \n                                getChannelRef\n                            \n                            \n                                    Async\n                                getChannelsForCurrentUser\n                            \n                            \n                                getChannelsRef\n                            \n                            \n                                    Async\n                                getCurrentChannel\n                            \n                            \n                                getCurrentThread\n                            \n                            \n                                getDirectChannelId\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                openNewChannel\n                            \n                            \n                                    Async\n                                removeUserFromChannel\n                            \n                            \n                                setChannel\n                            \n                            \n                                setCurrentChannel\n                            \n                            \n                                subChannels\n                            \n                            \n                                    Async\n                                updateChannel\n                            \n                            \n                                    Async\n                                updateChannelMembers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:49\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChannel(channel: Channel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel\n                                            \n                                                            Channel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createNewChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    createNewChannel(channel: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteChannel(channelId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:200\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllChannels\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:208\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChannelRef\n                        \n                    \n                \n            \n            \n                \ngetChannelRef(channel_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getChannelsForCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChannelsForCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChannelsRef\n                        \n                    \n                \n            \n            \n                \ngetChannelsRef()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentChannel(channel_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentThread\n                        \n                    \n                \n            \n            \n                \ngetCurrentThread(thread_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                thread_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirectChannelId\n                        \n                    \n                \n            \n            \n                \ngetDirectChannelId(currentUser_id: string, dm_target_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dm_target_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openNewChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    openNewChannel(currentUserId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:234\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUserId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeUserFromChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUserFromChannel(channelId: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChannel\n                        \n                    \n                \n            \n            \n                \nsetChannel(data: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Channel\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentChannel\n                        \n                    \n                \n            \n            \n                \nsetCurrentChannel(channel_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subChannels\n                        \n                    \n                \n            \n            \n                \nsubChannels(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateChannel(channel: Channel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel\n                                            \n                                                            Channel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateChannelMembers\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateChannelMembers(channelId: string, newMemberIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newMemberIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    name: '',\n    description: '',\n    created_at: 0,\n    creator: '', // 'user_id'\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.new,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentThread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    name: '',\n    description: '',\n    created_at: 0,\n    creator: '',\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.thread,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubChannels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubCurrentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : function () { }\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubCurrentThread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : function () { }\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:49\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Channel } from '../interfaces/channel.interface';\nimport {\n  Firestore,\n  collection,\n  onSnapshot,\n  addDoc,\n  doc,\n  updateDoc,\n  deleteDoc,\n  getDoc,\n  where,\n  query,\n  getDocs,\n} from '@angular/fire/firestore';\nimport { ChannelTypeEnum } from '../shared/enums/channel-type.enum';\nimport { runTransaction } from 'firebase/firestore';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChannelFirebaseService {\n  firestore: Firestore = inject(Firestore);\n  channels: Channel[] = [];\n  currentChannel: Channel = {\n    id: '',\n    name: '',\n    description: '',\n    created_at: 0,\n    creator: '', // 'user_id'\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.new,\n  };\n  currentThread: Channel = {\n    id: '',\n    name: '',\n    description: '',\n    created_at: 0,\n    creator: '',\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.thread,\n  };\n  channel: Channel | undefined;\n\n  unsubChannels: any;\n  unsubCurrentChannel: any = function () { };\n  unsubCurrentThread: any = function () { };\n\n  constructor() { }\n\n\n  async getChannelsForCurrentUser() {\n    const storedUser = localStorage.getItem('currentUser');\n    if (storedUser) {\n      let currentUser = await JSON.parse(storedUser);\n      this.unsubChannels = this.subChannels(currentUser.id);\n    }\n  }\n\n\n  getDirectChannelId(currentUser_id: string, dm_target_id: string): string {\n    let directChannels = this.channels.filter(\n      (channel) => channel.channel_type == 'direct'\n    );\n    this.channel = undefined;\n    if (currentUser_id == dm_target_id) {\n      this.channel = directChannels.find((channel) => channel.members[0] == channel.members[1] || channel.members.length == 1);\n    } else {\n      this.channel = directChannels.find((channel) =>\n        channel.members.includes(dm_target_id)\n      );\n    }\n    if (this.channel) return this.channel.id;\n    else return '';\n  }\n\n\n  setCurrentChannel(channel_id: string) {\n    let channel = this.channels.find((channel) => channel.id == channel_id);\n    if (channel) this.currentChannel = channel;\n  }\n\n\n  async getCurrentChannel(channel_id: string) {\n    return onSnapshot(this.getChannelRef(channel_id), (channel) => {\n      const channelData = channel.data();\n      if (!channelData) {\n        return;\n      }\n      this.currentChannel = this.setChannel(channel.data(), channel.id);\n    });\n  }\n\n\n  getCurrentThread(thread_id: string) {\n    return onSnapshot(this.getChannelRef(thread_id), (channel) => {\n      this.currentThread = this.setChannel(channel.data(), channel.id);\n    });\n  }\n\n\n  ngOnDestroy(): void {\n    if (this.unsubChannels === typeof function () { }) this.unsubChannels();\n    this.unsubCurrentChannel();\n  }\n\n\n  getChannelsRef() {\n    return collection(this.firestore, 'channels');\n  }\n\n\n  getChannelRef(channel_id: string) {\n    return doc(collection(this.firestore, 'channels'), channel_id);\n  }\n\n\n  setChannel(data: any, id: string): Channel {\n    return {\n      id: id || '',\n      name: data.name || '',\n      description: data.description || '',\n      created_at: data.created_at || 0,\n      creator: data.creator || '', // 'user_id'\n      members: data.members || [],\n      active_members: data.active_members || [],\n      channel_type: data.channel_type || '',\n    };\n  }\n\n  \n  /* CREATE */\n  async addChannel(channel: Channel): Promise {\n    let ref = this.getChannelsRef();\n    const docRef = await addDoc(ref, channel);\n    return docRef.id;\n  }\n\n\n  /* READ */\n  subChannels(user_id: string) {\n    const q = query(\n      this.getChannelsRef(),\n      where('members', 'array-contains', user_id)\n    );\n    return onSnapshot(q, (channels) => {\n      this.channels = [];\n      channels.forEach((channel) => {\n        this.channels.push(this.setChannel(channel.data(), channel.id));\n      });\n    });\n  }\n\n\n  /* UPDATE */\n  async updateChannel(channel: Channel) {\n    if (channel.id) {\n      let docRef = doc(this.getChannelsRef(), channel.id);\n      await updateDoc(docRef, JSON.parse(JSON.stringify(channel)))\n    }\n  }\n\n\n  async updateChannelMembers(channelId: string, newMemberIds: string[]): Promise {\n    const docRef = doc(this.getChannelsRef(), channelId);\n    await runTransaction(this.firestore, async (transaction) => {\n      const docSnapshot = await transaction.get(docRef);\n      if (!docSnapshot.exists()) {\n        throw new Error('Channel nicht gefunden'); // wird das gebraucht?\n      }\n      const currentChannel = docSnapshot.data();\n      const updatedMemberIds = Array.from(\n        new Set([currentChannel['creator'], ...newMemberIds])\n      );\n      transaction.update(docRef, { members: updatedMemberIds });\n      currentChannel['members'] = updatedMemberIds;\n    });\n  }\n\n\n  async removeUserFromChannel(channelId: string, userId: string) {\n    if (!channelId) return;\n    const docRef = doc(this.getChannelsRef(), channelId);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      const channelData = docSnap.data() as Channel;\n      const newMembers = channelData.members.filter(memberId => memberId !== userId);\n      channelData.members = newMembers;\n      if (newMembers.length === 0) {\n        this.deleteChannel(channelId);\n      } else {\n        await updateDoc(docRef, { members: newMembers })\n      }\n    }\n  }\n\n\n  async deleteChannel(channelId: string) {\n    if (!channelId) return;\n    const docRef = doc(this.getChannelsRef(), channelId);\n    await deleteDoc(docRef);\n    this.channels = this.channels.filter(channel => channel.id !== channelId);\n  }\n\n\n  async getAllChannels(): Promise {\n    const allChannelsQuery = query(this.getChannelsRef());\n    return getDocs(allChannelsQuery)\n      .then((querySnapshot) => {\n        this.channels = [];\n        querySnapshot.forEach((doc) => {\n          const channel = this.setChannel(doc.data(), doc.id);\n          this.channels.push(channel);\n        });\n        return this.channels;\n      })\n      .catch((error) => {\n        return [];\n      });\n  }\n\n\n  async createNewChannel(channel: Omit): Promise {\n    const newChannel: Channel = {\n      ...channel,\n      channel_type: ChannelTypeEnum.new,\n    };\n    return this.addChannel(newChannel);\n  }\n\n\n  async openNewChannel(currentUserId: string) {\n    const channelFound = this.channels.find(channel => channel.members.includes(currentUserId) && channel.channel_type === 'main');\n    if (channelFound) {\n      this.setCurrentChannel(channelFound.id);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckEmailComponent.html":{"url":"components/CheckEmailComponent.html","title":"component - CheckEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/check-email/check-email.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-check-email\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            MatSnackBarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./check-email.component.html\n            \n\n\n\n            \n                styleUrl\n                ./check-email.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                resetEmail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPopup\n                            \n                            \n                                goToLogin\n                            \n                            \n                                sendPasswordResetEmail\n                            \n                            \n                                triggerAnimation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _snackBar: MatSnackBar, userAuth: UserAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/check-email/check-email.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPopup\n                        \n                    \n                \n            \n            \n                \nconfirmPopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/check-email/check-email.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToLogin\n                        \n                    \n                \n            \n            \n                \ngoToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/check-email/check-email.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendPasswordResetEmail\n                        \n                    \n                \n            \n            \n                \nsendPasswordResetEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/check-email/check-email.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerAnimation\n                        \n                    \n                \n            \n            \n                \ntriggerAnimation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/check-email/check-email.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/check-email/check-email.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/check-email/check-email.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar,MatSnackBarModule} from '@angular/material/snack-bar';\nimport { EmailSnackbarComponent } from '../../popups/email-snackbar/email-snackbar.component';\nimport { send } from 'process';\nimport { UserAuthService } from '../../firebase.service/user.auth.service';\nimport { updateProfile } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-check-email',\n  standalone: true,\n  imports: [CommonModule, FormsModule, MatSnackBarModule],\n  templateUrl: './check-email.component.html',\n  styleUrl: './check-email.component.scss'\n})\nexport class CheckEmailComponent {\n  resetEmail: string = '';\n  error = false;\n\n  constructor(private router: Router, private _snackBar: MatSnackBar, private userAuth: UserAuthService) { }\n\n\n  goToLogin(){\n    this.router.navigate(['/login-page/login']);\n  }\n\n\n  sendPasswordResetEmail(){\n    this.userAuth.resetPassword(this.resetEmail).then(() => {\n      this.confirmPopup();\n      this.triggerAnimation();\n      this.resetEmail = '';\n      this.error = false;\n    })\n  }\n\n\n  triggerAnimation() {\n    const element = document.querySelector('.cdk-overlay-container');\n    if (element) {\n      element.classList.add('animate');\n      setTimeout(() => {\n        element.classList.remove('animate');\n      }, 2000);\n    }\n  }\n\n\n  confirmPopup(){\n    this._snackBar.openFromComponent(EmailSnackbarComponent, {\n      duration: 2000,\n      horizontalPosition: 'start',\n      verticalPosition: 'bottom',\n      direction: 'rtl',\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        Passwort zurücksetzen\n        Bitte geben Sie Ihre E-Mail-Adresse ein.\n        \n            \n                \n                *Diese E-Mail-Adresse ist leider ungültig.\n            \n        \n        Wir senden Ihnen ein E-Mail, über die Sie Ihr Passwort ändern können\n        \n            E-Mail senden\n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Passwort zurücksetzen        Bitte geben Sie Ihre E-Mail-Adresse ein.                                                    *Diese E-Mail-Adresse ist leider ungültig.                            Wir senden Ihnen ein E-Mail, über die Sie Ihr Passwort ändern können                    E-Mail senden        '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomDialogService.html":{"url":"injectables/CustomDialogService.html","title":"injectable - CustomDialogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomDialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/custom-dialog.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMobilePosition\n                            \n                            \n                                getPanelClass\n                            \n                            \n                                getPosition\n                            \n                            \n                                isMobile\n                            \n                            \n                                    Public\n                                openDialog\n                            \n                            \n                                    Public\n                                openDialogAbsolute\n                            \n                            \n                                updateDialogPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/custom-dialog.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMobilePosition\n                        \n                    \n                \n            \n            \n                \ngetMobilePosition(mobilePosition: \"mid\" | \"bottom\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/custom-dialog.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mobilePosition\n                                            \n                                                        \"mid\" | \"bottom\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { left?: undefined; bottom?: undefined; } | { left: string; bottom: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPanelClass\n                        \n                    \n                \n            \n            \n                \ngetPanelClass(position: \"left\" | \"right\" | \"mid\", mobilePosition?: \"mid\" | \"bottom\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/custom-dialog.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                        \"left\" | \"right\" | \"mid\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mobilePosition\n                                            \n                                                        \"mid\" | \"bottom\"\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPosition\n                        \n                    \n                \n            \n            \n                \ngetPosition(button: HTMLElement, position: \"left\" | \"right\" | \"mid\", mobilePosition?: \"mid\" | \"bottom\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/custom-dialog.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                position\n                                            \n                                                        \"left\" | \"right\" | \"mid\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mobilePosition\n                                            \n                                                        \"mid\" | \"bottom\"\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { left?: undefined; bottom?: undefined; } | { left: string; bottom: string; } | { top: string; left: string; right?: undefined; } | { top: string; right: string; left?: undefined; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n            \n                \nisMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/custom-dialog.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    openDialog(component: ComponentType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/custom-dialog.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                        ComponentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     MatDialogRef\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openDialogAbsolute\n                        \n                    \n                \n            \n            \n                \n                        \n                    openDialogAbsolute(undefined: DialogParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/custom-dialog.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            DialogParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDialogPosition\n                        \n                    \n                \n            \n            \n                \nupdateDialogPosition(button: HTMLElement, position: \"left\" | \"right\" | \"mid\", mobilePosition?: \"mid\" | \"bottom\", mobileButton?: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/custom-dialog.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                position\n                                            \n                                                        \"left\" | \"right\" | \"mid\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mobilePosition\n                                            \n                                                        \"mid\" | \"bottom\"\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                mobileButton\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/custom-dialog.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialogRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/custom-dialog.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\n\n\ninterface DialogParams {\n  button: HTMLElement;\n  component: ComponentType;\n  position: 'left' | 'right' | 'mid';\n  mobilePosition?: 'mid' | 'bottom';\n  mobileButton?: HTMLElement;\n  maxWidth: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomDialogService {\n  dialogRef: MatDialogRef | null = null;\n\n  constructor(public dialog: MatDialog) {}\n\n\n  public openDialog(component: ComponentType): MatDialogRef {\n    return this.dialog.open(component, {\n      panelClass: 'custom-dialog',\n    });\n  }\n\n\n  isMobile() {\n    return window.innerWidth \n        this.updateDialogPosition(button, position, mobilePosition, mobileButton)\n      );\n    }\n  }\n\n\n  updateDialogPosition(button: HTMLElement, position: 'left' | 'right' | 'mid', \n    mobilePosition?: 'mid' | 'bottom', mobileButton?: HTMLElement,): void {\n    if (this.dialogRef) {\n      let buttonUsed = this.isMobile() && mobileButton ? mobileButton : button;\n      let positionAsJSON = this.getPosition(buttonUsed, position, mobilePosition);\n      this.dialogRef.updatePosition(positionAsJSON);\n    }\n  }\n\n\n  getPosition(button: HTMLElement, position: 'left' | 'right' | 'mid', mobilePosition?: 'mid' | 'bottom') {\n    if (this.isMobile() && mobilePosition) {\n      return this.getMobilePosition(mobilePosition);\n    } else {\n      const rect = button.getBoundingClientRect();\n      if (position == 'left') return {\n        top: rect.bottom + 'px',\n        left:  rect.left + 'px',\n      };\n      else if (position == 'right') return {\n        top: rect.bottom + 'px',\n        right:  (window.innerWidth - rect.right) + 'px',\n      };\n      else return {};\n    }\n  }\n\n\n  getMobilePosition(mobilePosition: 'mid' | 'bottom') {\n    switch (mobilePosition) {\n      case 'mid':\n        return {};\n      case 'bottom':\n        return { left: '0px', bottom: '0px' };\n    }\n  }\n  \n\n  getPanelClass(position: 'left' | 'right' | 'mid', mobilePosition?: 'mid' | 'bottom') {\n    let pannelClass = '';\n    switch (position) {\n      case 'left': pannelClass = 'custom-dialog-anchorTopLeft';\n      break;\n      case 'right' : pannelClass = 'custom-dialog-anchorTopRight';\n      break;\n      case 'mid': pannelClass = 'custom-dialog';\n      break;\n      default : pannelClass = 'custom-dialog';\n    }\n    if (mobilePosition) pannelClass += '-mobile';\n    return pannelClass;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogAddMemberComponent.html":{"url":"components/DialogAddMemberComponent.html","title":"component - DialogAddMemberComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogAddMemberComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-add-member\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-add-member.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-add-member.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                currentChannel\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                newlyAddedUsers\n                            \n                            \n                                searchInput\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                    Public\n                                userManagementService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFilterUsers\n                            \n                            \n                                onRemoveSelectedUser\n                            \n                            \n                                onSelectUser\n                            \n                            \n                                onUpdateMembers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, userService: UserService, channelService: ChannelFirebaseService, userManagementService: UserManagementService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userManagementService\n                                                  \n                                                        \n                                                                        UserManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilterUsers\n                        \n                    \n                \n            \n            \n                \nonFilterUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveSelectedUser\n                        \n                    \n                \n            \n            \n                \nonRemoveSelectedUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectUser\n                        \n                    \n                \n            \n            \n                \nonSelectUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdateMembers\n                        \n                    \n                \n            \n            \n                \nonUpdateMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : this.channelService.currentChannel\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newlyAddedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userManagementService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserManagementService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from '../../../firebase.service/user.service';\nimport { User } from '../../../interfaces/user.interface';\nimport { ChannelFirebaseService } from '../../../firebase.service/channelFirebase.service';\nimport { UserManagementService } from '../../../services/user-management.service';\nimport { Channel } from '../../../interfaces/channel.interface';\n\n@Component({\n  selector: 'app-dialog-add-member',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, FormsModule],\n  templateUrl: './dialog-add-member.component.html',\n  styleUrl: './dialog-add-member.component.scss',\n})\nexport class DialogAddMemberComponent implements OnInit {\n  searchInput: string = '';\n  filteredUsers: User[] = [];\n  selectedUsers: User[] = [];\n  newlyAddedUsers: User[] = [];\n  currentChannel: Channel =\n    this.channelService.currentChannel;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    public userManagementService: UserManagementService,\n  ) { }\n\n\n  ngOnInit(): void {\n    if (this.channelService.currentChannel && this.channelService.currentChannel.members) {\n      this.selectedUsers = this.userService.getUsersByIds(this.channelService.currentChannel.members);\n      this.newlyAddedUsers = [];\n    }\n  }\n\n\n  onFilterUsers(): void {\n    this.filteredUsers = this.userManagementService.filterUsers(this.searchInput, this.selectedUsers);\n  }\n\n\n  onSelectUser(user: User): void {\n    this.selectedUsers = this.userManagementService.selectUser(this.selectedUsers, user);\n    if (!this.newlyAddedUsers.find(u => u.id === user.id)) {\n      this.newlyAddedUsers.push(user);\n    }\n    this.filteredUsers = this.filteredUsers.filter(u => u.id !== user.id);\n    this.searchInput = '';\n    this.onFilterUsers();\n  }\n\n\n  onRemoveSelectedUser(user: User): void {\n    this.selectedUsers = this.userManagementService.removeSelectedUser(this.selectedUsers, user);\n    this.newlyAddedUsers = this.newlyAddedUsers.filter(u => u.id !== user.id);\n    this.onFilterUsers();\n  }\n\n\n  onUpdateMembers(): void {\n    const memberIds = this.userManagementService.getMemberIds(this.selectedUsers);\n    const channelId = this.userManagementService.getCurrentChannelId();\n    if (channelId) {\n      this.userManagementService.updateMembers(channelId, memberIds)\n        .then(() => {\n          this.dialogRef.close();\n        })\n        .catch(error => {\n          console.error('Fehler beim Aktualisieren der Mitgliederliste:', error);\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        Leute hinzufügen\n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n\n    \n        \n            \n                \n            \n            \n                \n            \n        \n        {{ currentChannel.name }}\n    \n\n    \n        @if (newlyAddedUsers.length > 0) {\n            \n        @for(user of newlyAddedUsers; track user.id) {\n        \n            \n                \n                @if (!user.logged_in){\n                \n                }\n                @if (user.logged_in){\n                \n                }\n            \n            \n                {{ user.name }}\n            \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n        \n        }\n            \n        }\n  \n\n    \n        \n            \n            @if (filteredUsers.length > 0) {\n            \n                \n                    @for(user of filteredUsers; track user.id) {\n                    \n                        \n                            \n                            @if (!user.logged_in){\n                            \n                            }\n                            @if (user.logged_in){\n                            \n                            }\n                        \n                        {{user.name}}\n                    \n                    }\n                \n            \n            }\n        \n    \n\n    Hinzufügen\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Leute hinzufügen                                                                                                                                                                                                                                                                {{ currentChannel.name }}                @if (newlyAddedUsers.length > 0) {                    @for(user of newlyAddedUsers; track user.id) {                                                    @if (!user.logged_in){                                }                @if (user.logged_in){                                }                                        {{ user.name }}                                                                                                                                                                                                                    }                    }                                      @if (filteredUsers.length > 0) {                                                @for(user of filteredUsers; track user.id) {                                                                                                    @if (!user.logged_in){                                                        }                            @if (user.logged_in){                                                        }                                                {{user.name}}                                        }                                        }                Hinzufügen'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogAddMemberComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogAddMemberMobileComponent.html":{"url":"components/DialogAddMemberMobileComponent.html","title":"component - DialogAddMemberMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogAddMemberMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-add-member-mobile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-add-member-mobile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-add-member-mobile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                currentChannel\n                            \n                            \n                                    Public\n                                customDialogService\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                newlyAddedUsers\n                            \n                            \n                                searchInput\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                    Public\n                                userManagementService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFilterUsers\n                            \n                            \n                                onRemoveSelectedUser\n                            \n                            \n                                onSelectUser\n                            \n                            \n                                onUpdateMembers\n                            \n                            \n                                openUserProfile\n                            \n                            \n                                removeFilterUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, userService: UserService, channelService: ChannelFirebaseService, userManagementService: UserManagementService, customDialogService: CustomDialogService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userManagementService\n                                                  \n                                                        \n                                                                        UserManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilterUsers\n                        \n                    \n                \n            \n            \n                \nonFilterUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveSelectedUser\n                        \n                    \n                \n            \n            \n                \nonRemoveSelectedUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectUser\n                        \n                    \n                \n            \n            \n                \nonSelectUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdateMembers\n                        \n                    \n                \n            \n            \n                \nonUpdateMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserProfile\n                        \n                    \n                \n            \n            \n                \nopenUserProfile(userId: string, button: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFilterUsers\n                        \n                    \n                \n            \n            \n                \nremoveFilterUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : this.channelService.currentChannel\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        customDialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomDialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newlyAddedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userManagementService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserManagementService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { UserService } from '../../../firebase.service/user.service';\nimport { ChannelFirebaseService } from '../../../firebase.service/channelFirebase.service';\nimport { UserManagementService } from '../../../services/user-management.service';\nimport { CustomDialogService } from '../../../services/custom-dialog.service';\nimport { ProfileService } from '../../../services/profile.service';\nimport { DialogAddMemberComponent } from '../dialog-add-member/dialog-add-member.component';\nimport { Channel } from '../../../interfaces/channel.interface';\nimport { DialogShowProfileComponent } from '../../../shared/dialog-show-profile/dialog-show-profile.component';\nimport { User } from '../../../interfaces/user.interface';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-dialog-add-member-mobile',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, FormsModule],\n  templateUrl: './dialog-add-member-mobile.component.html',\n  styleUrl: './dialog-add-member-mobile.component.scss'\n})\nexport class DialogAddMemberMobileComponent {\n  searchInput: string = '';\n  filteredUsers: User[] = [];\n  selectedUsers: User[] = [];\n  newlyAddedUsers: User[] = [];\n\n  currentChannel: Channel =\n    this.channelService.currentChannel;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    public userManagementService: UserManagementService,\n    public customDialogService: CustomDialogService,\n    private profileService: ProfileService\n  ) { }\n\n\n  ngOnInit(): void {\n    if (this.channelService.currentChannel && this.channelService.currentChannel.members) {\n      this.selectedUsers = this.userService.getUsersByIds(this.channelService.currentChannel.members);\n      this.newlyAddedUsers = [];\n    }\n  }\n\n\n  onFilterUsers(): void {\n    this.filteredUsers = this.userManagementService.filterUsers(this.searchInput, this.selectedUsers);\n  }\n\n\n  removeFilterUsers(): void {\n    this.filteredUsers = [];\n  }\n\n\n  onSelectUser(user: User): void {\n    this.selectedUsers = this.userManagementService.selectUser(this.selectedUsers, user);\n    if (!this.newlyAddedUsers.find(u => u.id === user.id)) {\n      this.newlyAddedUsers.push(user);\n    }\n    this.filteredUsers = this.filteredUsers.filter(u => u.id !== user.id);\n    this.searchInput = '';\n    this.onFilterUsers();\n  }\n\n\n  onRemoveSelectedUser(user: User): void {\n    this.selectedUsers = this.userManagementService.removeSelectedUser(this.selectedUsers, user);\n    this.newlyAddedUsers = this.newlyAddedUsers.filter(u => u.id !== user.id);\n    this.onFilterUsers();\n  }\n\n\n  onUpdateMembers(): void {\n    const memberIds = this.userManagementService.getMemberIds(this.selectedUsers);\n    const channelId = this.userManagementService.getCurrentChannelId();\n    if (channelId) {\n      this.userManagementService.updateMembers(channelId, memberIds)\n        .then(() => {\n          this.dialogRef.close();\n        })\n        .catch(error => {\n          console.error('Fehler beim Aktualisieren der Mitgliederliste:', error);\n        });\n    } \n  }\n\n\n  openUserProfile(userId: string, button: HTMLElement): void {\n    this.profileService.setOwnProfileStatus(false);\n    this.profileService.setViewingUserId(userId);\n    const component = DialogShowProfileComponent;\n    this.customDialogService.openDialogAbsolute({ button, component, position: 'right', maxWidth: '500px' });\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n        Leute hinzufügen\n        \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n\n    \n        \n            \n                \n            \n            \n                \n            \n        \n        {{ currentChannel.name }}\n    \n\n    \n    @if (newlyAddedUsers.length > 0) {\n        \n            @for(user of newlyAddedUsers; track user.id) {\n            \n                \n                    \n                    @if (!user.logged_in){\n                    \n                    }\n                    @if (user.logged_in){\n                    \n                    }\n                \n            {{ user.name }}\n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n            \n            }\n        \n    }\n\n\n    \n        \n            \n            @if (filteredUsers.length > 0) {\n            \n                \n                    @for(user of filteredUsers; track user.id) {\n                    \n                        \n                            \n                            @if (!user.logged_in){\n                            \n                            }\n                            @if (user.logged_in){\n                            \n                            }\n                        \n                        {{user.name}}\n                    \n                    }\n                \n            \n            }\n        \n    \n\n    Hinzufügen\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Leute hinzufügen                                                                                                                                                                                                                                                                        {{ currentChannel.name }}            @if (newlyAddedUsers.length > 0) {                    @for(user of newlyAddedUsers; track user.id) {                                                                    @if (!user.logged_in){                                        }                    @if (user.logged_in){                                        }                            {{ user.name }}                                                                                                                                                                                                                }            }                                    @if (filteredUsers.length > 0) {                                                @for(user of filteredUsers; track user.id) {                                                                                                    @if (!user.logged_in){                                                        }                            @if (user.logged_in){                                                        }                                                {{user.name}}                                        }                                        }                Hinzufügen'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogAddMemberMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogEditChannelComponent.html":{"url":"components/DialogEditChannelComponent.html","title":"component - DialogEditChannelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogEditChannelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-edit-channel\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                            TextFieldModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-edit-channel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-edit-channel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                autosize\n                            \n                            \n                                channelExists\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                customDialogService\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                editChannelDescription\n                            \n                            \n                                editChannelName\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                selectedUserId\n                            \n                            \n                                tempChannelDescription\n                            \n                            \n                                tempChannelName\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelEditing\n                            \n                            \n                                    Async\n                                changeChannelName\n                            \n                            \n                                deleteChannelAndMessages\n                            \n                            \n                                duplicateChannelName\n                            \n                            \n                                getCreatorName\n                            \n                            \n                                    Async\n                                leaveChannel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openAddUserDialog\n                            \n                            \n                                openNewChannel\n                            \n                            \n                                triggerResize\n                            \n                            \n                                    Async\n                                updateEditedChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, _ngZone: NgZone, userService: UserService, channelService: ChannelFirebaseService, router: Router, customDialogService: CustomDialogService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelEditing\n                        \n                    \n                \n            \n            \n                \ncancelEditing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeChannelName\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeChannelName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteChannelAndMessages\n                        \n                    \n                \n            \n            \n                \ndeleteChannelAndMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duplicateChannelName\n                        \n                    \n                \n            \n            \n                \nduplicateChannelName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCreatorName\n                        \n                    \n                \n            \n            \n                \ngetCreatorName(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        leaveChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    leaveChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddUserDialog\n                        \n                    \n                \n            \n            \n                \nopenAddUserDialog(button: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNewChannel\n                        \n                    \n                \n            \n            \n                \nopenNewChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerResize\n                        \n                    \n                \n            \n            \n                \ntriggerResize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateEditedChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEditedChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        autosize\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CdkTextareaAutosize\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('autosize')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        customDialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomDialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editChannelDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editChannelName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tempChannelDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tempChannelName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, NgZone, ViewChild, OnInit } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { CdkTextareaAutosize, TextFieldModule } from '@angular/cdk/text-field';\nimport { UserService } from '../../../firebase.service/user.service';\nimport { ChannelFirebaseService } from '../../../firebase.service/channelFirebase.service';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DialogAddMemberMobileComponent } from '../dialog-add-member-mobile/dialog-add-member-mobile.component';\nimport { CustomDialogService } from '../../../services/custom-dialog.service';\nimport { MessageService } from '../../../firebase.service/message.service';\n\n@Component({\n  selector: 'app-dialog-edit-channel',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, TextFieldModule, FormsModule],\n  templateUrl: './dialog-edit-channel.component.html',\n  styleUrl: './dialog-edit-channel.component.scss',\n})\nexport class DialogEditChannelComponent implements OnInit {\n  editChannelName: boolean = false;\n  editChannelDescription: boolean = false;\n  tempChannelName!: string;\n  tempChannelDescription!: string;\n  selectedUserId: string = '';\n  channelExists: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private _ngZone: NgZone,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    private router: Router,\n    public customDialogService: CustomDialogService,\n    public messageService: MessageService\n  ) { }\n\n  @ViewChild('autosize') autosize!: CdkTextareaAutosize;\n\n  ngOnInit(): void {\n    this.tempChannelName = this.channelService.currentChannel.name;\n    this.tempChannelDescription =\n      this.channelService.currentChannel.description;\n  }\n\n\n  openAddUserDialog(button: HTMLElement) {\n    const component = DialogAddMemberMobileComponent;\n    this.customDialogService.openDialogAbsolute({ button, component, position: 'mid', mobilePosition: 'bottom', maxWidth: '100dvw' });\n  }\n\n\n  getCreatorName(userId: string): string {\n    const user = this.userService.getUser(userId);\n    return user ? user.name : 'Unbekannter Benutzer';\n  }\n\n\n  triggerResize() {\n    this._ngZone.onStable\n      .pipe(take(1))\n      .subscribe(() => this.autosize.resizeToFitContent(true));\n  }\n\n\n  async updateEditedChannel(): Promise {\n      if (this.duplicateChannelName()) {\n        this.channelExists = true;\n        return;\n      } else {\n        this.changeChannelName();\n      }\n  }\n\n\n  async changeChannelName(): Promise {\n    this.channelExists = false;\n    this.channelService.currentChannel.name = this.tempChannelName;\n    this.channelService.currentChannel.description = this.tempChannelDescription;\n    await this.channelService.updateChannel(this.channelService.currentChannel);\n    this.cancelEditing();\n    this.dialogRef.close();\n  }\n\n\n  duplicateChannelName(): boolean {\n    return this.channelService.channels.some(\n      (channel) =>\n        channel.name === this.tempChannelName &&\n        channel.id !== this.channelService.currentChannel.id\n    );\n  }\n\n\n  cancelEditing(): void {\n    this.editChannelName = false;\n    this.editChannelDescription = false;\n  }\n\n\n  async leaveChannel(): Promise {\n    if (!this.channelService.currentChannel || !this.channelService.currentChannel.id) {\n      return;\n    }\n      if (this.channelService.currentChannel.members.length === 1){\n        this.deleteChannelAndMessages();\n      }\n      await this.channelService.removeUserFromChannel(this.channelService.currentChannel.id, this.userService.currentUser.id);\n      this.openNewChannel();\n  }\n\n\n  openNewChannel(){\n    this.dialogRef.close();\n    this.channelService.openNewChannel(this.userService.currentUser.id);\n    this.router.navigate(['/main-page/' + this.channelService.currentChannel.id]);\n  }\n\n\n  deleteChannelAndMessages(){\n    for (let thread of this.channelService.channels) {\n      if (thread.name === this.channelService.currentChannel.name) {\n        this.messageService.removeThreadMessagesFromChannel(thread.id);\n        this.messageService.removeThreadMessagesFromChannel(this.channelService.currentChannel.id);\n        this.channelService.deleteChannel(thread.id);\n      }\n    }\n    this.messageService.removeMessagesFromEmptyChannel(this.channelService.currentChannel.id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n        \n      \n    \n    {{ channelService.currentChannel.name }}\n  \n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      {{ channelService.currentChannel.name }}\n    \n    \n    \n      \n        \n          \n        \n        \n          \n        \n      \n    \n  \n  \n  \n    \n      \n        Channel-Name\n        @if (!editChannelName) {\n        \n          Bearbeiten\n        \n        \n        } @else {\n        \n          Speichern\n        \n        \n        }\n      \n      \n        \n          \n            \n              \n            \n            \n              \n            \n          \n        \n        \n      \n      @if(channelExists){\n        Dieser Channel existiert bereits.\n      }\n    \n    \n      \n        Beschreibung\n        @if (!editChannelDescription) {\n        \n          Bearbeiten\n        \n        \n        } @else {\n        \n          Speichern\n        \n        \n        }\n      \n      \n        {{ channelService.currentChannel.description }}\n      \n      \n      Erstellt von\n      {{ getCreatorName(channelService.currentChannel.creator) }}\n    \n\n    \n      Mitglieder\n      \n        @for(user of userService.allUsers; track user.id) {\n          @if(user.id != userService.currentUser?.id ) {\n          \n              \n                  \n                      \n                      \n                  \n      \n                  \n                      {{ user.name }}\n                  \n              \n          \n          }\n          }\n          \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n            Mitglieder hinzufügen\n        \n      \n\n    \n  Channel verlassen\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{ channelService.currentChannel.name }}                                                                                                                                                                {{ channelService.currentChannel.name }}                                                                                                        Channel-Name        @if (!editChannelName) {                  Bearbeiten                        } @else {                  Speichern                        }                                                                                                                                                @if(channelExists){        Dieser Channel existiert bereits.      }                      Beschreibung        @if (!editChannelDescription) {                  Bearbeiten                        } @else {                  Speichern                        }                    {{ channelService.currentChannel.description }}                  Erstellt von      {{ getCreatorName(channelService.currentChannel.creator) }}              Mitglieder              @for(user of userService.allUsers; track user.id) {          @if(user.id != userService.currentUser?.id ) {                                                                                                                                                      {{ user.name }}                                                    }          }                                                                                                                                                                                                              Mitglieder hinzufügen                    Channel verlassen  '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogEditChannelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogEditProfileComponent.html":{"url":"components/DialogEditProfileComponent.html","title":"component - DialogEditProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogEditProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-edit-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-edit-profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-edit-profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatars\n                            \n                            \n                                changeAvatar\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                editForm\n                            \n                            \n                                emailExists\n                            \n                            \n                                imageChanged\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                thisAvatar\n                            \n                            \n                                    Public\n                                userAuth\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeEmailOnly\n                            \n                            \n                                    Async\n                                changeNameOnly\n                            \n                            \n                                    Async\n                                changeUserAvatar\n                            \n                            \n                                closeAvatarDialog\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                isEmailDisabled\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                openAvatarDialog\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, userService: UserService, userAuth: UserAuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeEmailOnly\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeEmailOnly(email: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeNameOnly\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeNameOnly(displayName: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                displayName\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeUserAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeUserAvatar(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeAvatarDialog\n                        \n                    \n                \n            \n            \n                \ncloseAvatarDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailPlaceholder\n                        \n                    \n                \n            \n            \n                \nemailPlaceholder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailDisabled\n                        \n                    \n                \n            \n            \n                \nisEmailDisabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAvatarDialog\n                        \n                    \n                \n            \n            \n                \nopenAvatarDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'assets/img/avatar-1.jpg',\n    'assets/img/avatar-2.jpg',\n    'assets/img/avatar-3.jpg',\n    'assets/img/avatar-4.jpg',\n    'assets/img/avatar-5.jpg',\n    'assets/img/avatar-6.jpg',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeAvatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    email: new FormControl({ value: '', disabled: this.isEmailDisabled() }, [\n      Validators.required,\n      Validators.email,\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageChanged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thisAvatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.userService.currentUser?.profile_img\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserAuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { UserService } from '../../firebase.service/user.service';\nimport { UserAuthService } from '../../firebase.service/user.auth.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dialog-edit-profile',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, FormsModule, ReactiveFormsModule],\n  templateUrl: './dialog-edit-profile.component.html',\n  styleUrl: './dialog-edit-profile.component.scss',\n})\nexport class DialogEditProfileComponent implements OnInit {\n  editForm = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    email: new FormControl({ value: '', disabled: this.isEmailDisabled() }, [\n      Validators.required,\n      Validators.email,\n    ]),\n  });\n  avatars = [\n    'assets/img/avatar-1.jpg',\n    'assets/img/avatar-2.jpg',\n    'assets/img/avatar-3.jpg',\n    'assets/img/avatar-4.jpg',\n    'assets/img/avatar-5.jpg',\n    'assets/img/avatar-6.jpg',\n  ];\n  emailExists: boolean = false;\n  changeAvatar: boolean = false;\n  thisAvatar: string = this.userService.currentUser?.profile_img;\n  imageChanged: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public userService: UserService,\n    public userAuth: UserAuthService,\n    public router: Router\n  ) { }\n\n\n  ngOnInit(): void {\n    this.userAuth.currentUser().then((user) => {\n      if (user) {\n        this.editForm.patchValue({\n          name: user.displayName,\n          email: user.email,\n        });\n        if (this.isEmailDisabled()) {\n          this.editForm.get('email')?.disable();\n        } else {\n          this.editForm.get('email')?.enable();\n        }\n      }\n    });\n  }\n\n\n  emailPlaceholder(): string {\n    return this.userService.currentUser?.email == this.userAuth.googleEmail\n      ? 'Kann hier nicht bearbeitet werden'\n      : this.userService.currentUser?.email;\n  }\n\n\n  isEmailDisabled(): boolean {\n    return this.userService.currentUser?.email == this.userAuth.googleEmail;\n  }\n\n\n  openAvatarDialog() {\n    this.changeAvatar = true;\n  }\n\n\n  closeAvatarDialog() {\n    if (this.changeAvatar) {\n      this.userService.currentUser.profile_img = this.thisAvatar;\n      this.router.navigate(['/main-page']);\n      this.changeAvatar = false;\n    }\n  }\n\n\n  async changeUserAvatar(i: number) {\n    this.thisAvatar = this.avatars[i];\n    await this.userService.updateUserImage(this.userService.currentUser.id, this.thisAvatar);\n    this.imageChanged = true;\n  }\n\n\n  async uploadAvatar(event: any) {\n    const file = event.target.files[0];\n    const imageUrl = await this.userService.uploadImage(file);\n    this.thisAvatar = imageUrl;\n    await this.userService.updateUserImage(this.userService.currentUser.id, this.thisAvatar);\n    this.closeAvatarDialog();\n    this.imageChanged = true;\n  }\n\n\n  async onSubmit() {\n    if (this.editForm.valid) {\n      const displayName = this.editForm.get('name')?.value;\n      const email = this.editForm.get('email')?.value;\n      if (displayName != this.userService.currentUser.name) {\n        this.changeNameOnly(displayName);\n      }\n      if (email != this.userService.currentUser.email) {\n        this.changeEmailOnly(email);\n      }\n      else {\n        return;\n      }\n    }\n  }\n\n\n  async changeNameOnly(displayName: any) {\n    await this.userAuth.changeCurrentUser(displayName);\n    this.userService.currentUser.name = displayName;\n    this.dialogRef.close();\n  }\n  \n\n  async changeEmailOnly(email: any) {\n    const emailExists = await this.userAuth.emailExists(email);\n    if (emailExists) {\n      this.emailExists = true;\n      return;\n    }\n    this.emailExists = false;\n    await this.userAuth.changeCurrentUser(email);\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n        \n            Dein Profil bearbeiten\n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n        \n\n        \n            @if (!changeAvatar){\n            \n            }\n            @if (changeAvatar){\n            \n            \n                \n                    \n                    \n                    \n                    \n                    \n                    \n                \n                \n                    \n                    Bild Hochladen\n                \n            \n            }\n        \n\n        \n            \n                \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    Vollständiger Name\n                \n                \n                    \n                \n            \n\n            \n                \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    E-Mail-Adresse\n                \n\n                \n                    \n                \n                @if (emailExists) {\n                Email existiert bereits\n                }\n\n            \n        \n\n        \n            \n                Abbrechen\n            \n            \n                Speichern\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Dein Profil bearbeiten                                                                                                                                                                                                                    @if (!changeAvatar){                        }            @if (changeAvatar){                                                                                                                                                                                                                                        Bild Hochladen                                        }                                                                                                                                                                                                                                                                Vollständiger Name                                                                                                                                                                                                                                                                                                                                E-Mail-Adresse                                                                                    @if (emailExists) {                Email existiert bereits                }                                                        Abbrechen                                        Speichern                        '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogEditProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogEmojiPickerComponent.html":{"url":"components/DialogEmojiPickerComponent.html","title":"component - DialogEmojiPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogEmojiPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/channel/dialog-emoji-picker/dialog-emoji-picker.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-emoji-picker\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            PickerComponent\n                            MatDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-emoji-picker.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-emoji-picker.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEmoji\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/channel/dialog-emoji-picker/dialog-emoji-picker.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEmoji\n                        \n                    \n                \n            \n            \n                \naddEmoji(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-emoji-picker/dialog-emoji-picker.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-emoji-picker/dialog-emoji-picker.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { PickerComponent } from '@ctrl/ngx-emoji-mart';\n\n@Component({\n  selector: 'app-dialog-emoji-picker',\n  standalone: true,\n  imports: [PickerComponent, MatDialogModule],\n  templateUrl: './dialog-emoji-picker.component.html',\n  styleUrl: './dialog-emoji-picker.component.scss'\n})\nexport class DialogEmojiPickerComponent {\n\n  constructor(public dialogRef: MatDialogRef) { }\n\n  addEmoji(event : any) {\n    const emoji = event.emoji.native;\n    this.dialogRef.close(emoji);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogEmojiPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogParams.html":{"url":"interfaces/DialogParams.html","title":"interface - DialogParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/custom-dialog.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            button\n                                        \n                                \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            maxWidth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mobileButton\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mobilePosition\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        button\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        button:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:     ComponentType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ComponentType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxWidth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxWidth:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobileButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mobileButton:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobilePosition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mobilePosition:     \"mid\" | \"bottom\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"mid\" | \"bottom\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:     \"left\" | \"right\" | \"mid\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\" | \"mid\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\n\n\ninterface DialogParams {\n  button: HTMLElement;\n  component: ComponentType;\n  position: 'left' | 'right' | 'mid';\n  mobilePosition?: 'mid' | 'bottom';\n  mobileButton?: HTMLElement;\n  maxWidth: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomDialogService {\n  dialogRef: MatDialogRef | null = null;\n\n  constructor(public dialog: MatDialog) {}\n\n\n  public openDialog(component: ComponentType): MatDialogRef {\n    return this.dialog.open(component, {\n      panelClass: 'custom-dialog',\n    });\n  }\n\n\n  isMobile() {\n    return window.innerWidth \n        this.updateDialogPosition(button, position, mobilePosition, mobileButton)\n      );\n    }\n  }\n\n\n  updateDialogPosition(button: HTMLElement, position: 'left' | 'right' | 'mid', \n    mobilePosition?: 'mid' | 'bottom', mobileButton?: HTMLElement,): void {\n    if (this.dialogRef) {\n      let buttonUsed = this.isMobile() && mobileButton ? mobileButton : button;\n      let positionAsJSON = this.getPosition(buttonUsed, position, mobilePosition);\n      this.dialogRef.updatePosition(positionAsJSON);\n    }\n  }\n\n\n  getPosition(button: HTMLElement, position: 'left' | 'right' | 'mid', mobilePosition?: 'mid' | 'bottom') {\n    if (this.isMobile() && mobilePosition) {\n      return this.getMobilePosition(mobilePosition);\n    } else {\n      const rect = button.getBoundingClientRect();\n      if (position == 'left') return {\n        top: rect.bottom + 'px',\n        left:  rect.left + 'px',\n      };\n      else if (position == 'right') return {\n        top: rect.bottom + 'px',\n        right:  (window.innerWidth - rect.right) + 'px',\n      };\n      else return {};\n    }\n  }\n\n\n  getMobilePosition(mobilePosition: 'mid' | 'bottom') {\n    switch (mobilePosition) {\n      case 'mid':\n        return {};\n      case 'bottom':\n        return { left: '0px', bottom: '0px' };\n    }\n  }\n  \n\n  getPanelClass(position: 'left' | 'right' | 'mid', mobilePosition?: 'mid' | 'bottom') {\n    let pannelClass = '';\n    switch (position) {\n      case 'left': pannelClass = 'custom-dialog-anchorTopLeft';\n      break;\n      case 'right' : pannelClass = 'custom-dialog-anchorTopRight';\n      break;\n      case 'mid': pannelClass = 'custom-dialog';\n      break;\n      default : pannelClass = 'custom-dialog';\n    }\n    if (mobilePosition) pannelClass += '-mobile';\n    return pannelClass;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogShowMembersComponent.html":{"url":"components/DialogShowMembersComponent.html","title":"component - DialogShowMembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogShowMembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-show-members\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                            FormsModule\n                                OpenProfileDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-show-members.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-show-members.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                currentChannel\n                            \n                            \n                                    Public\n                                customDialogService\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openAddUserDialog\n                            \n                            \n                                openUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, customDialogService: CustomDialogService, userService: UserService, channelService: ChannelFirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openAddUserDialog\n                        \n                    \n                \n            \n            \n                \nopenAddUserDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserProfile\n                        \n                    \n                \n            \n            \n                \nopenUserProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : this.channelService.currentChannel\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        customDialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomDialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from '../../../firebase.service/user.service';\nimport { ChannelFirebaseService } from '../../../firebase.service/channelFirebase.service';\nimport { Channel } from '../../../interfaces/channel.interface';\nimport { CustomDialogService } from '../../../services/custom-dialog.service';\nimport { DialogAddMemberComponent } from '../dialog-add-member/dialog-add-member.component';\nimport { OpenProfileDirective } from '../../../shared/directives/open-profile.directive';\n\n@Component({\n  selector: 'app-dialog-show-members',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, FormsModule, OpenProfileDirective],\n  templateUrl: './dialog-show-members.component.html',\n  styleUrl: './dialog-show-members.component.scss',\n})\nexport class DialogShowMembersComponent {\n  currentChannel: Channel = this.channelService.currentChannel;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public customDialogService: CustomDialogService,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService\n  ) {}\n\n\n  openAddUserDialog() {\n    const component = DialogAddMemberComponent;\n    let button = document.getElementById('addMemberBtn');\n    if(button) this.customDialogService.openDialogAbsolute({button, component,position : 'right', maxWidth : '554px'});\n    this.dialogRef.close();\n  }\n  \n\n  openUserProfile(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n    \n        Mitglieder\n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n    \n        \n            @for(member of currentChannel.members; track member; let index = $index) {\n                @if(userService.getUser(member)) {\n                    \n                \n                    @if(userService.getUser(member).profile_img && userService.getUser(member).name) {\n                        \n                    }\n                    @if (!userService.getUser(member).logged_in){\n                    \n                    }\n                    @if (userService.getUser(member).logged_in){\n                    \n                    }    \n                \n                \n                    {{ userService.getUser(member).name }}{{ userService.getUser(member).name ===\n                    userService.currentUser?.name ? ' (Du)' : '' }}\n                \n                \n                }\n            }\n            \n        \n    \n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n        Mitglieder hinzufügen\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Mitglieder                                                                                                                                                                            @for(member of currentChannel.members; track member; let index = $index) {                @if(userService.getUser(member)) {                                                        @if(userService.getUser(member).profile_img && userService.getUser(member).name) {                                            }                    @if (!userService.getUser(member).logged_in){                                        }                    @if (userService.getUser(member).logged_in){                                        }                                                        {{ userService.getUser(member).name }}{{ userService.getUser(member).name ===                    userService.currentUser?.name ? \\' (Du)\\' : \\'\\' }}                                                }            }                                                                                                                                                                                    Mitglieder hinzufügen    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogShowMembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogShowProfileComponent.html":{"url":"components/DialogShowProfileComponent.html","title":"component - DialogShowProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogShowProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/dialog-show-profile/dialog-show-profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-show-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-show-profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-show-profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                newDirectChannel\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                user\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeThread\n                            \n                            \n                                    Async\n                                createNewDirectChannel\n                            \n                            \n                                editCurrentUser\n                            \n                            \n                                isOwnProfile\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                openDirectChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, profileService: ProfileService, customDialogService: CustomDialogService, userService: UserService, channelService: ChannelFirebaseService, router: Router, threadService: ThreadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeThread\n                        \n                    \n                \n            \n            \n                \ncloseThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createNewDirectChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    createNewDirectChannel(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editCurrentUser\n                        \n                    \n                \n            \n            \n                \neditCurrentUser(button: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnProfile\n                        \n                    \n                \n            \n            \n                \nisOwnProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openDirectChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    openDirectChannel(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newDirectChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    name: 'Direct Channel',\n    description: '',\n    created_at: new Date().getTime(),\n    creator: '',\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.direct,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { ProfileService } from '../../services/profile.service';\nimport { DialogEditProfileComponent } from '../../shared/dialog-edit-profile/dialog-edit-profile.component';\nimport { CustomDialogService } from '../../services/custom-dialog.service';\nimport { UserService } from '../../firebase.service/user.service';\nimport { User } from '../../interfaces/user.interface';\nimport { ChannelFirebaseService } from '../../firebase.service/channelFirebase.service';\nimport { Channel } from '../../interfaces/channel.interface';\nimport { ChannelTypeEnum } from '../../shared/enums/channel-type.enum';\nimport { Router } from '@angular/router';\nimport { ThreadService } from '../../services/thread.service';\n\n@Component({\n  selector: 'app-dialog-show-profile',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule],\n  templateUrl: './dialog-show-profile.component.html',\n  styleUrl: './dialog-show-profile.component.scss',\n})\nexport class DialogShowProfileComponent implements OnInit {\n  user: User | null = null;\n  newDirectChannel : Channel = {\n    id: '',\n    name: 'Direct Channel',\n    description: '',\n    created_at: new Date().getTime(),\n    creator: '',\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.direct,\n  }\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private profileService: ProfileService,\n    private customDialogService: CustomDialogService,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    private router : Router,\n    public threadService : ThreadService,\n  ) {}\n\n\n  ngOnInit(): void {\n    const userId = this.profileService.getViewingUserId();\n    if (userId) {\n      this.user = this.userService.getUser(userId);\n    }\n  }\n\n\n  isOwnProfile(): boolean {\n    return this.profileService.getOwnProfileStatus();\n  }\n\n\n  editCurrentUser(button: HTMLElement): void {\n    const component = DialogEditProfileComponent;\n    let userHeadButton = document.getElementById('userHead');\n    if(userHeadButton) {this.customDialogService.openDialogAbsolute({button : userHeadButton, component, \n        position : 'right', mobilePosition: 'mid', maxWidth: '500px'});}\n    else {this.customDialogService.openDialog(component)};\n    this.dialogRef.close();\n  }\n\n\n  async openDirectChannel(user_id: string): Promise {\n    let channel_id = this.channelService.getDirectChannelId(this.userService.currentUser.id, user_id);\n    if (channel_id != '') {\n      this.router.navigateByUrl('/main-page/' + channel_id);\n    } else {\n      channel_id = await this.createNewDirectChannel(user_id);\n      this.router.navigateByUrl('/main-page/' + channel_id);\n    }\n    this.closeThread();\n    this.dialogRef.close();\n  }\n\n\n  async createNewDirectChannel(user_id : string) {\n    this.newDirectChannel.creator = this.userService.currentUser.id;\n    this.newDirectChannel.created_at = new Date().getTime();\n    this.newDirectChannel.members = [this.userService.currentUser.id, user_id];\n    return await this.channelService.addChannel(this.newDirectChannel);\n  }\n  \n\n  closeThread() {\n    this.userService.saveLastThread(this.userService.currentUser.id, '');\n    this.threadService.closeThread();\n  }\n}\n\n    \n\n    \n        \n\n    \n        Profil\n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n\n    \n        \n    \n\n    \n        \n            {{ isOwnProfile() ? userService.currentUser.name : user?.name }}\n            \n            @if (isOwnProfile()) {\n            Bearbeiten\n            \n            \n            }\n        \n\n        \n            \n            \n                {{ (userService.currentUser.id === user?.id || user?.logged_in) ? 'Aktiv' : 'Offline' }}\n        \n    \n\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n            E-Mail-Adresse\n        \n        {{ isOwnProfile() ? userService.currentUser.email : user?.email }}\n    \n\n    \n    @if (!isOwnProfile()) {\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n            Nachricht\n        \n    \n    }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Profil                                                                                                                                                                                            {{ isOwnProfile() ? userService.currentUser.name : user?.name }}                        @if (isOwnProfile()) {            Bearbeiten                                    }                                                        {{ (userService.currentUser.id === user?.id || user?.logged_in) ? \\'Aktiv\\' : \\'Offline\\' }}                                                                                                                                                                    E-Mail-Adresse                {{ isOwnProfile() ? userService.currentUser.email : user?.email }}            @if (!isOwnProfile()) {                                                                                                                                                        Nachricht                }'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogShowProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailSnackbarComponent.html":{"url":"components/EmailSnackbarComponent.html","title":"component - EmailSnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailSnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/popups/email-snackbar/email-snackbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-snackbar\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./email-snackbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./email-snackbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                snackBarRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        snackBarRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBarRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/popups/email-snackbar/email-snackbar.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSnackBarRef } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-email-snackbar',\n  standalone: true,\n  imports: [],\n  templateUrl: './email-snackbar.component.html',\n  styleUrl: './email-snackbar.component.scss'\n})\nexport class EmailSnackbarComponent {\n  snackBarRef = inject(MatSnackBarRef);\n}\n\n    \n\n    \n        \n    \n    E-Mail gesendet\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        E-Mail gesendet'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailSnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToSignin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/header/header.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToSignin\n                        \n                    \n                \n            \n            \n                \ngoToSignin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/header/header.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hideElement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/header/header.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent {\n  hideElement = false;\n\n  \n  constructor(\n    private router: Router\n  ) { \n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.hideElement = this.router.url !== '/login-page/login';\n      }\n    });\n  }\n\n\n  goToSignin() {\n    this.router.navigate(['/login-page/signin']);\n  }\n}\n\n    \n\n    \n        \n        \n            \n            \n                DABubble\n            \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                DABubble                    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImprintComponent.html":{"url":"components/ImprintComponent.html","title":"component - ImprintComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ImprintComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/imprint/imprint.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-imprint\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                HeaderComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./imprint.component.html\n            \n\n\n\n            \n                styleUrl\n                ./imprint.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/imprint/imprint.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/imprint/imprint.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HeaderComponent } from '../header/header.component';\n\n@Component({\n  selector: 'app-imprint',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  templateUrl: './imprint.component.html',\n  styleUrl: './imprint.component.scss'\n})\nexport class ImprintComponent {\n\n  constructor(private router: Router) { }\n\n  \n  goBack(){\n    this.router.navigate(['/login-page/login']);\n  }\n}\n\n    \n\n    \n        \n\n    \n    Impressum\n    \n        Bari Sopa\n        Ricardo Geada\n        Guiseppe Cino\n        Mesut Özertürk [Mentor]\n    \n    \n        PLZ und Stadt\n    \n    Contact\n    Email: EMAILADRESSE\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Impressum            Bari Sopa        Ricardo Geada        Guiseppe Cino        Mesut Özertürk [Mentor]                PLZ und Stadt        Contact    Email: EMAILADRESSE'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'ImprintComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogOutDialogComponent.html":{"url":"components/LogOutDialogComponent.html","title":"component - LogOutDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogOutDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-log-out-dialog\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                OpenProfileDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./log-out-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./log-out-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isMobile\n                            \n                            \n                                logOut\n                            \n                            \n                                openCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, userAuth: UserAuthService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n            \n                \nisMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCurrentUser\n                        \n                    \n                \n            \n            \n                \nopenCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { UserAuthService } from '../../../firebase.service/user.auth.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../../firebase.service/user.service';\nimport { OpenProfileDirective } from '../../../shared/directives/open-profile.directive';\n\n@Component({\n  selector: 'app-log-out-dialog',\n  standalone: true,\n  imports: [CommonModule, OpenProfileDirective],\n  templateUrl: './log-out-dialog.component.html',\n  styleUrl: './log-out-dialog.component.scss',\n})\nexport class LogOutDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private userAuth: UserAuthService,\n    private router: Router,\n    public userService: UserService\n  ) {}\n\n\n  openCurrentUser(): void {\n    this.dialogRef.close();\n  }\n\n\n  isMobile() {\n    return window.innerWidth  {\n      this.router.navigate(['/login-page']);\n      localStorage.removeItem('currentUser');\n      this.dialogRef.close();\n      this.userService.updateOnlineStatus(this.userService.currentUser.id, false);\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        @if(isMobile()){}\n        @if (userService.currentUser.email == 'guest') {\n         @if (isMobile()){}Logout\n        }\n        @if (userService.currentUser.email != 'guest'){\n            @if(isMobile()){} Profil\n        @if (isMobile()){}Logout\n        }\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @if(isMobile()){}        @if (userService.currentUser.email == \\'guest\\') {         @if (isMobile()){}Logout        }        @if (userService.currentUser.email != \\'guest\\'){            @if(isMobile()){} Profil        @if (isMobile()){}Logout        }    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogOutDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterLink\n                            RouterModule\n                                ResetPasswordComponent\n                            MatProgressBarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                firestore\n                            \n                            \n                                iconSrc\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginEmail\n                            \n                            \n                                loginPassword\n                            \n                            \n                                oobCode\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeIcon\n                            \n                            \n                                createUserObject\n                            \n                            \n                                loadUserData\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                loginAsGuest\n                            \n                            \n                                    Async\n                                loginWithGoogle\n                            \n                            \n                                navigateToMainPage\n                            \n                            \n                                ngonInit\n                            \n                            \n                                setGoogleUser\n                            \n                            \n                                updateLoggedInUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userAuth: UserAuthService, userService: UserService, router: Router, channelService: ChannelFirebaseService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/login/login.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeIcon\n                        \n                    \n                \n            \n            \n                \nchangeIcon(focus: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:140\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                focus\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUserObject\n                        \n                    \n                \n            \n            \n                \ncreateUserObject(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: any; email: any; profile_img: any; id: any; last_channel: any; last_thread: any; logged_in: boolean; is_typing: boolean; password: string; toJSON(): { name: any; email: any; profile_img: any; id: any; ... 4 more ...; password: any; }; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserData\n                        \n                    \n                \n            \n            \n                \nloadUserData(loginEmail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginEmail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loginAsGuest\n                        \n                    \n                \n            \n            \n                \n                        \n                    loginAsGuest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:129\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loginWithGoogle\n                        \n                    \n                \n            \n            \n                \n                        \n                    loginWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToMainPage\n                        \n                    \n                \n            \n            \n                \nnavigateToMainPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngonInit\n                        \n                    \n                \n            \n            \n                \nngonInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGoogleUser\n                        \n                    \n                \n            \n            \n                \nsetGoogleUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { name: any; email: any; profile_img: any; id: any; last_channel: any; last_thread: any; logged_in: boolean; is_typing: boolean; password: string; toJSON(): { name: any; email: any; profile_img: any; id: any; ... 4 more ...; password: any; }; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLoggedInUser\n                        \n                    \n                \n            \n            \n                \nupdateLoggedInUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconSrc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/img/mail.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oobCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ActivatedRoute, Router, RouterLink, RouterModule } from '@angular/router';\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component';\nimport { UserAuthService } from '../../firebase.service/user.auth.service';\nimport { Firestore } from '@angular/fire/firestore';\nimport { UserService } from '../../firebase.service/user.service';\nimport { ChannelFirebaseService } from '../../firebase.service/channelFirebase.service';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { create } from 'domain';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterLink, RouterModule, ResetPasswordComponent,\n    MatProgressBarModule\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\n  firestore: Firestore = inject(Firestore);\n  error = false;\n  loginEmail: string = '';\n  loginPassword: string = '';\n  isLoading = false;\n  iconSrc = '/assets/img/mail.png';\n  oobCode: string = '';\n\n  constructor(private userAuth: UserAuthService, private userService: UserService,\n    private router: Router, private channelService: ChannelFirebaseService,\n    public route: ActivatedRoute) { }\n\n\n  ngonInit() {\n    this.error = false;\n  }\n\n\n  async login() {\n    this.isLoading = true;\n    this.userAuth.loginUser(this.loginEmail, this.loginPassword)\n      .then(() => {\n        return Promise.all([this.loadUserData(this.loginEmail)]);\n      })\n      .then(() => {\n        this.updateLoggedInUser();\n      })\n      .catch((error) => {\n        this.error = true;\n        this.isLoading = false;\n      });\n  }\n\n\n  updateLoggedInUser() {\n    this.error = false;\n    this.isLoading = false;\n    this.userService.updateOnlineStatus(this.userService.currentUser.id, true);\n    localStorage.setItem('currentUser', JSON.stringify(this.userService.currentUser));\n    this.navigateToMainPage();\n  }\n\n\n  loadUserData(loginEmail: string) {\n    this.error = false;\n    this.userService.getUsers();\n    this.userService.getCurrentUser(loginEmail);\n    this.channelService.getChannelsForCurrentUser();\n  }\n\n\n  async loginWithGoogle() {\n      await this.userAuth.loginWithGoogle();\n      this.isLoading = true;\n      let user = this.setGoogleUser();\n      let googleUserId = this.userService.allUsers.find(user => user.email === this.userAuth.googleEmail)?.id;\n      if (!googleUserId) {\n        await this.userService.addUser(user);\n      }\n      await Promise.all([\n        this.loadUserData(this.userAuth.googleEmail),\n      ]).then(() => {\n        this.updateLoggedInUser();\n      });\n  }\n\n\n  navigateToMainPage() {\n    this.router.navigate(['/main-page']);\n  }\n\n\n  setGoogleUser() {\n    let user = this.userService.allUsers.find(user => user.email === this.userAuth.googleEmail);\n    return this.createUserObject(user);\n  }\n\n\n  createUserObject(user: any) {\n    return {\n      name: this.userAuth.googleName,\n      email: this.userAuth.googleEmail,\n      profile_img: this.userAuth.googleProfileImg,\n      id: user.id,\n      last_channel: user.last_channel || '',\n      last_thread: user.last_thread || '',\n      logged_in: true,\n      is_typing: false,\n      password: '',\n      toJSON() {\n          return {\n              name: this.name,\n              email: this.email,\n              profile_img: this.profile_img,\n              id: this.id,\n              last_channel: this.last_channel,\n              last_thread: this.last_thread,\n              logged_in: this.logged_in,\n              is_typing: this.is_typing,\n              password: this.password\n          };\n      }\n  };\n  }\n\n\n  async loginAsGuest() {\n    this.isLoading = true;\n      await this.userAuth.guestLogin();\n      await Promise.all([\n        this.loadUserData('guest'),\n      ]).then(() => {\n        this.updateLoggedInUser();\n      });\n  }\n\n\n  changeIcon(focus: boolean) {\n    this.iconSrc = focus ? '/assets/img/mail_b.png' : '/assets/img/mail.png';\n  }\n}\n\n    \n\n    \n        \n    @if (isLoading) {}\n        \n    Anmeldung\n\n    Wir empfehlen dir, die E-Mail-Adresse zu nutzen, die du bei der Arbeit verwendest.\n\n    \n        \n            \n            \n            *Diese E-Mail-Adresse ist leider ungültig.\n        \n\n        \n            \n            Falsches Passwort. Bitte noch einmal versuchen.\n        \n        \n    \n    \n\n    Passwort vergessen?\n\n    ODER\n\n    Anmelden mit Google\n\n    \n        Anmelden\n\n        Gäste-Login\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if (isLoading) {}            Anmeldung    Wir empfehlen dir, die E-Mail-Adresse zu nutzen, die du bei der Arbeit verwendest.                                                *Diese E-Mail-Adresse ist leider ungültig.                                        Falsches Passwort. Bitte noch einmal versuchen.                            Passwort vergessen?    ODER    Anmelden mit Google            Anmelden        Gäste-Login    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                                LoginComponent\n                                SignInComponent\n                                ResetPasswordComponent\n                                AvatarComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideElement\n                            \n                            \n                                hideExtras\n                            \n                            \n                                oobCode\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToSignin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userAuth: UserAuthService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/login-page.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToSignin\n                        \n                    \n                \n            \n            \n                \ngoToSignin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetUser\n                        \n                    \n                \n            \n            \n                \nresetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hideElement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideExtras\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oobCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { AvatarComponent } from './avatar/avatar.component';\nimport { CommonModule } from '@angular/common';\nimport { UserAuthService } from '../firebase.service/user.auth.service';\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  imports: [RouterModule, LoginComponent, SignInComponent, ResetPasswordComponent,\n    AvatarComponent, CommonModule],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss'\n})\nexport class LoginPageComponent {\n  hideElement = false;\n  hideExtras = false;\n  oobCode: string = '';\n\n  constructor(private router: Router, private userAuth: UserAuthService, public route: ActivatedRoute) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.hideElement = this.router.url !== '/login-page/login';\n      }\n    });\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.hideExtras = this.router.url == '/login-page/imprint' || this.router.url == '/login-page/privacy-policy';\n      }\n    });\n    this.resetUser();\n  }\n\n\n  goToSignin() {\n    this.router.navigate(['/login-page/signin']);\n  }\n\n\n  ngOnInit(): void {\n    if (this.router.url.includes('/login-page/email-reset')) {\n      this.oobCode = this.route.snapshot.queryParams['oobCode'];\n      if (this.oobCode) {\n        this.userAuth.handleActionCode(this.oobCode);\n      }\n    } else {\n      this.router.navigate(['login-page/login']);\n    }\n  }\n\n\n  resetUser(): void {\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.removeItem('currentUser');\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n            \n                DABubble\n            \n        \n    \n\n    \n\n    \n        Neu bei DABubble?\n        Konto erstellen\n    \n\n    \n        Impressum\n        Datenschutz\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            DABubble                                        Neu bei DABubble?        Konto erstellen                Impressum        Datenschutz    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginSnackbarComponent.html":{"url":"components/LoginSnackbarComponent.html","title":"component - LoginSnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginSnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/popups/login-snackbar/login-snackbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-snackbar\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./login-snackbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-snackbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                snackBarRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        snackBarRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBarRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/popups/login-snackbar/login-snackbar.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSnackBarRef } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login-snackbar',\n  standalone: true,\n  imports: [],\n  templateUrl: './login-snackbar.component.html',\n  styleUrl: './login-snackbar.component.scss'\n})\nexport class LoginSnackbarComponent {\n  snackBarRef = inject(MatSnackBarRef);\n}\n\n    \n\n    \n        \n    Anmelden\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Anmelden'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginSnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainHeaderComponent.html":{"url":"components/MainHeaderComponent.html","title":"component - MainHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-header/main-header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                SearchBarComponent\n                            MatCardModule\n                                MainMenuComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                anonymImg\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                isMenuOpen\n                            \n                            \n                                    Public\n                                mainPage\n                            \n                            \n                                serverName\n                            \n                            \n                                    Public\n                                sharedService\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToChannels\n                            \n                            \n                                hideMobileWorkspace\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                openLogOutDialog\n                            \n                            \n                                showMobileWorkspace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(customDialogService: CustomDialogService, userService: UserService, channelService: ChannelFirebaseService, renderer: Renderer2, el: ElementRef, sharedService: SharedService, mainPage: MainPageComponent, threadService: ThreadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-header/main-header.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainPage\n                                                  \n                                                        \n                                                                        MainPageComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backToChannels\n                        \n                    \n                \n            \n            \n                \nbackToChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/main-header.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideMobileWorkspace\n                        \n                    \n                \n            \n            \n                \nhideMobileWorkspace()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/main-header.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/main-header.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openLogOutDialog\n                        \n                    \n                \n            \n            \n                \nopenLogOutDialog(button: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/main-header.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMobileWorkspace\n                        \n                    \n                \n            \n            \n                \nshowMobileWorkspace()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/main-header.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        anonymImg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/img/person.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mainPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MainPageComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : 'Dabbuble'\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sharedService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SharedService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Renderer2 } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { SearchBarComponent } from './search-bar/search-bar.component';\nimport { LogOutDialogComponent } from './log-out-dialog/log-out-dialog.component';\nimport { CustomDialogService } from '../../services/custom-dialog.service';\nimport { UserService } from '../../firebase.service/user.service';\nimport { MainMenuComponent } from '../main-menu/main-menu.component';\nimport { ChannelFirebaseService } from '../../firebase.service/channelFirebase.service';\nimport { SharedService } from '../../services/shared.service';\nimport { MainPageComponent } from '../main-page.component';\nimport { ThreadService } from '../../services/thread.service';\n@Component({\n  selector: 'app-main-header',\n  standalone: true,\n  imports: [CommonModule, SearchBarComponent, MatCardModule, MainMenuComponent],\n  templateUrl: './main-header.component.html',\n  styleUrl: './main-header.component.scss',\n})\nexport class MainHeaderComponent {\n  anonymImg = 'assets/img/person.png';\n  serverName: any = 'Dabbuble';\n  isMenuOpen: boolean = true;\n\n  constructor(\n    private customDialogService: CustomDialogService,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    private renderer: Renderer2, \n    private el: ElementRef,\n    public sharedService: SharedService,\n    public mainPage: MainPageComponent,\n    public threadService: ThreadService) {\n  }\n\n\n  ngAfterViewInit() {\n    this.showMobileWorkspace();\n    this.hideMobileWorkspace();\n  }\n\n\n  showMobileWorkspace(){\n    this.sharedService.showMobileDiv$.subscribe(() => {\n      const mobileDiv = this.el.nativeElement.querySelector('.mobileDiv');\n      this.renderer.addClass(mobileDiv, 'show');\n    });\n  }\n\n\n  hideMobileWorkspace(){\n    this.sharedService.backToChannels$.subscribe(() => {\n      const mobileDiv = this.el.nativeElement.querySelector('.mobileDiv');\n      this.renderer.removeClass(mobileDiv, 'show');\n    });\n  }\n\n\n  backToChannels() {\n    this.sharedService.backToChannels();\n    this.threadService.closeThread();\n  }\n\n\n  openLogOutDialog(button: HTMLElement) {\n    const component = LogOutDialogComponent;\n    this.customDialogService.openDialogAbsolute({button, component, position : 'right', mobilePosition : 'bottom', maxWidth : '282px'});\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n        DABubble\n    \n    \n    \n        \n            \n        \n        \n        Devspace\n    \n\n    \n\n    \n        {{userService.currentUser?.name}}\n        \n            \n            \n        \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    DABubble                                                        Devspace                    {{userService.currentUser?.name}}                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuChannelsComponent.html":{"url":"components/MainMenuChannelsComponent.html","title":"component - MainMenuChannelsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuChannelsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu-channels\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatCardModule\n                            MatExpansionModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-menu-channels.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-menu-channels.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeChannelId\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                isExpanded\n                            \n                            \n                                    Public\n                                mainPage\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                sharedService\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mobileChange\n                            \n                            \n                                openAddChannelDialog\n                            \n                            \n                                selectChannel\n                            \n                            \n                                toggleExpansion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(customDialogService: CustomDialogService, channelService: ChannelFirebaseService, messageService: MessageService, userService: UserService, router: Router, threadService: ThreadService, mainPage: MainPageComponent, sharedService: SharedService, stateService: StateManagementService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainPage\n                                                  \n                                                        \n                                                                        MainPageComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mobileChange\n                        \n                    \n                \n            \n            \n                \nmobileChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddChannelDialog\n                        \n                    \n                \n            \n            \n                \nopenAddChannelDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectChannel\n                        \n                    \n                \n            \n            \n                \nselectChannel(channelId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExpansion\n                        \n                    \n                \n            \n            \n                \ntoggleExpansion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeChannelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpanded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mainPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MainPageComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sharedService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SharedService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { AddChannelCardComponent } from './add-channel-card/add-channel-card.component';\nimport { CustomDialogService } from '../../../services/custom-dialog.service';\nimport { ChannelFirebaseService } from '../../../firebase.service/channelFirebase.service';\nimport { MessageService } from '../../../firebase.service/message.service';\nimport { UserService } from '../../../firebase.service/user.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { ThreadService } from '../../../services/thread.service';\nimport { MainPageComponent } from '../../main-page.component';\nimport { SharedService } from '../../../services/shared.service';\nimport { StateManagementService } from '../../../services/state-management.service';\n\n@Component({\n  selector: 'app-main-menu-channels',\n  standalone: true,\n  imports: [CommonModule, MatCardModule, MatExpansionModule, RouterModule],\n  templateUrl: './main-menu-channels.component.html',\n  styleUrl: './main-menu-channels.component.scss',\n})\nexport class MainMenuChannelsComponent {\n  isExpanded: boolean = true;\n  activeChannelId: string = '';\n\n  constructor(\n    private customDialogService: CustomDialogService,\n    public channelService: ChannelFirebaseService,\n    public messageService: MessageService,\n    public userService: UserService,\n    public router: Router,\n    public threadService: ThreadService,\n    public mainPage: MainPageComponent,\n    public sharedService: SharedService,\n    private stateService: StateManagementService\n  ) {}\n\n\n  selectChannel(channelId: string) {\n    this.stateService.setSelectedChannelId(channelId);\n    this.userService.saveLastThread(this.userService.currentUser.id, '');\n    this.threadService.closeThread();\n  }\n\n\n  mobileChange() {\n    this.mainPage.toggleMenu();\n    this.sharedService.showMobileDiv();\n  }\n\n\n  toggleExpansion(): void {\n    this.isExpanded = !this.isExpanded;\n  }\n\n\n  openAddChannelDialog(): void {\n    const component = AddChannelCardComponent;\n    this.customDialogService.openDialog(component);\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n                Channels\n            \n        \n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n                \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        @if (isExpanded) {\n        @for(channel of channelService.channels; track channel.id) {\n        @if (channel.channel_type === 'main') {\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n                {{channel.name}}\n            \n        \n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n                {{channel.name}}\n            \n        \n        }\n        }\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n                Channel hinzufügen\n            \n        \n        }\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                        Channels                                                                                                                                                                                                                                                                                                                                            @if (isExpanded) {        @for(channel of channelService.channels; track channel.id) {        @if (channel.channel_type === \\'main\\') {                                                                                                                                                                                                    {{channel.name}}                                                                                                                                                                                                                        {{channel.name}}                            }        }                                                                                                                                                                                                    Channel hinzufügen                            }    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuChannelsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuComponent.html":{"url":"components/MainMenuComponent.html","title":"component - MainMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-menu/main-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatCardModule\n                                MainMenuHeaderComponent\n                                MainMenuDmComponent\n                                MainMenuChannelsComponent\n                                SearchBarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                isMenuOpen\n                            \n                            \n                                    Public\n                                mainPage\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                sharedService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChannelData\n                            \n                            \n                                openNewChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelFirebaseService, sharedService: SharedService, userService: UserService, router: Router, mainPage: MainPageComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-menu/main-menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainPage\n                                                  \n                                                        \n                                                                        MainPageComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChannelData\n                        \n                    \n                \n            \n            \n                \ngetChannelData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { id: string; name: string; description: string; created_at: number; creator: any; members: {}; active_members: {}; channel_type: any; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNewChannel\n                        \n                    \n                \n            \n            \n                \nopenNewChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.sharedService.isMenuOpen\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mainPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MainPageComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sharedService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SharedService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MainMenuHeaderComponent } from './main-menu-header/main-menu-header.component';\nimport { MainMenuDmComponent } from './main-menu-dm/main-menu-dm.component';\nimport { ChannelFirebaseService } from '../../firebase.service/channelFirebase.service';\nimport { SharedService } from '../../services/shared.service';\nimport { MainMenuChannelsComponent } from './main-menu-channels/main-menu-channels.component';\nimport { UserService } from '../../firebase.service/user.service';\nimport { Router } from '@angular/router';\nimport { Channel } from '../../interfaces/channel.interface';\nimport { ChannelTypeEnum } from '../../shared/enums/channel-type.enum';\nimport { MainPageComponent } from '../main-page.component';\nimport { SearchBarComponent } from '../main-header/search-bar/search-bar.component';\n\n@Component({\n  selector: 'app-main-menu',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MainMenuHeaderComponent,\n    MainMenuDmComponent,\n    MainMenuChannelsComponent,\n    SearchBarComponent\n  ],\n  templateUrl: './main-menu.component.html',\n  styleUrl: './main-menu.component.scss',\n})\nexport class MainMenuComponent{\n  isMenuOpen: boolean = this.sharedService.isMenuOpen;\n\n  constructor(\n    public channelService: ChannelFirebaseService, \n    public sharedService: SharedService,\n    public userService: UserService,\n    public router: Router,\n    public mainPage: MainPageComponent\n  ) { }\n    \n\n  openNewChannel(){\n    const newChannel: Channel = this.getChannelData();\n    this.sharedService.backToChannels();\n    this.sharedService.showMobileDiv(); \n    this.channelService.addChannel(newChannel).then(channelId => {\n      newChannel.id = channelId;\n      this.userService.updateLastChannel(this.userService.currentUser.id, channelId); \n      localStorage.setItem('currentUser', JSON.stringify(this.userService.currentUser));\n      this.router.navigate(['/main-page/', channelId]); \n    });\n  }\n\n\n  getChannelData(){\n    return {\n      id: '',\n      name: '',\n      description: '',\n      created_at: 0,\n      creator: this.userService.currentUser.id,\n      members: [this.userService.currentUser.id],\n      active_members: [this.userService.currentUser.id],\n      channel_type: ChannelTypeEnum.new,\n  };\n  }\n}\n    \n\n    \n        \n    \n    \n    \n        \n        \n    \n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuDmComponent.html":{"url":"components/MainMenuDmComponent.html","title":"component - MainMenuDmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuDmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu-dm\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-menu-dm.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-menu-dm.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                isExpanded\n                            \n                            \n                                    Public\n                                mainpage\n                            \n                            \n                                newDirectChannel\n                            \n                            \n                                profileImg\n                            \n                            \n                                selectedUserId\n                            \n                            \n                                    Public\n                                sharedService\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                users\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeThread\n                            \n                            \n                                    Async\n                                createNewDirectChannel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                openChannel\n                            \n                            \n                                    Async\n                                openDirectChannel\n                            \n                            \n                                    Async\n                                openDirectChannelMobile\n                            \n                            \n                                toggleExpansion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, channelService: ChannelFirebaseService, router: Router, threadService: ThreadService, stateService: StateManagementService, mainpage: MainPageComponent, sharedService: SharedService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainpage\n                                                  \n                                                        \n                                                                        MainPageComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeThread\n                        \n                    \n                \n            \n            \n                \ncloseThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createNewDirectChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    createNewDirectChannel(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    openChannel(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openDirectChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    openDirectChannel(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openDirectChannelMobile\n                        \n                    \n                \n            \n            \n                \n                        \n                    openDirectChannelMobile(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExpansion\n                        \n                    \n                \n            \n            \n                \ntoggleExpansion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpanded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mainpage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MainPageComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newDirectChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    name: 'Direct Channel',\n    description: '',\n    created_at: new Date().getTime(),\n    creator: '',\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.direct,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userService.currentUser?.profile_img\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sharedService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SharedService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../../firebase.service/user.service';\nimport { User } from '../../../interfaces/user.interface';\nimport { ChannelFirebaseService } from '../../../firebase.service/channelFirebase.service';\nimport { Router } from '@angular/router';\nimport { Channel } from '../../../interfaces/channel.interface';\nimport { ChannelTypeEnum } from '../../../shared/enums/channel-type.enum';\nimport { ThreadService } from '../../../services/thread.service';\nimport { StateManagementService } from '../../../services/state-management.service';\nimport { MainPageComponent } from '../../main-page.component';\nimport { SharedService } from '../../../services/shared.service';\n\n\n@Component({\n  selector: 'app-main-menu-dm',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './main-menu-dm.component.html',\n  styleUrl: './main-menu-dm.component.scss',\n})\nexport class MainMenuDmComponent implements OnInit {\n  isExpanded: boolean = true;\n  users: User[] = [];\n  selectedUserId: string = '';\n  profileImg = this.userService.currentUser?.profile_img;\n  newDirectChannel : Channel = {\n    id: '',\n    name: 'Direct Channel',\n    description: '',\n    created_at: new Date().getTime(),\n    creator: '',\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.direct,\n  }\n\n  constructor(\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    private router : Router,\n    public threadService : ThreadService,\n    private stateService: StateManagementService,\n    public mainpage: MainPageComponent,\n    public sharedService: SharedService\n  ) {}\n\n\n  ngOnInit(): void {\n    this.users = this.userService.allUsers;\n    this.stateService.getSelectedUserId().subscribe(id => {\n      this.selectedUserId = id ? id : '';\n    });\n  }\n\n\n  toggleExpansion(): void {\n    this.isExpanded = !this.isExpanded;\n  }\n\n\n  async openDirectChannel(user_id: string): Promise {\n    this.openChannel(user_id);\n    this.closeThread();\n    this.stateService.setSelectedUserId(user_id);\n  }\n\n\n  async openDirectChannelMobile(user_id: string): Promise {\n    this.mainpage.toggleMenu();\n    this.sharedService.showMobileDiv();\n    this.openChannel(user_id);\n    this.closeThread();\n    this.stateService.setSelectedUserId(user_id);\n  }\n\n\n  async openChannel(user_id: string): Promise {\n    let channel_id = this.channelService.getDirectChannelId(this.userService.currentUser.id, user_id);\n    if (channel_id != '') {\n      this.router.navigateByUrl('/main-page/' + channel_id);\n    } else {\n      channel_id = await this.createNewDirectChannel(user_id);\n      this.router.navigateByUrl('/main-page/' + channel_id);\n    }\n  }\n\n\n  async createNewDirectChannel(user_id : string) {\n    this.newDirectChannel.creator = this.userService.currentUser.id;\n    this.newDirectChannel.created_at = new Date().getTime();\n    this.newDirectChannel.members = [this.userService.currentUser.id, user_id];\n    return await this.channelService.addChannel(this.newDirectChannel);\n  }\n\n\n  closeThread() {\n    this.userService.saveLastThread(this.userService.currentUser.id, '');\n    this.threadService.closeThread();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n                Direktnachrichten\n            \n        \n    \n    \n        \n            @if (isExpanded) {\n            \n            \n                \n                    \n                        \n                        \n\n                    \n                    \n                        {{ userService.currentUser?.name }} (Du)\n                    \n                \n            \n\n            \n            @for(user of userService.allUsers; track user?.id) {\n            @if(user?.id != userService.currentUser?.id ) {\n            \n                \n                    \n                        \n                        \n                    \n\n                    \n                        {{ user.name }}\n                    \n                \n            \n            }\n            }\n            }\n        \n        \n            @if (isExpanded) {\n            \n            \n                \n                    \n                        \n                        \n                    \n                    \n                        {{ userService.currentUser?.name }} (Du)\n                    \n                \n            \n\n            \n            @for(user of userService.allUsers; track user?.id) {\n            @if(user?.id != userService.currentUser?.id ) {\n            \n                \n                    \n                        \n                        \n                    \n\n                    \n                        {{ user.name }}\n                    \n                \n            \n            }\n            }\n\n            }\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                        Direktnachrichten                                                @if (isExpanded) {                                                                                                                                                                            {{ userService.currentUser?.name }} (Du)                                                                        @for(user of userService.allUsers; track user?.id) {            @if(user?.id != userService.currentUser?.id ) {                                                                                                                                                                {{ user.name }}                                                            }            }            }                            @if (isExpanded) {                                                                                                                                                                            {{ userService.currentUser?.name }} (Du)                                                                        @for(user of userService.allUsers; track user?.id) {            @if(user?.id != userService.currentUser?.id ) {                                                                                                                                                                {{ user.name }}                                                            }            }            }            '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuDmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuHeaderComponent.html":{"url":"components/MainMenuHeaderComponent.html","title":"component - MainMenuHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-menu/main-menu-header/main-menu-header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatCardModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-menu-header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-menu-header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mainMenu\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openNewChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, mainMenu: MainMenuComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-menu/main-menu-header/main-menu-header.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainMenu\n                                                  \n                                                        \n                                                                        MainMenuComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openNewChannel\n                        \n                    \n                \n            \n            \n                \nopenNewChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-header/main-menu-header.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mainMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MainMenuComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-header/main-menu-header.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-header/main-menu-header.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { Router, RouterModule} from '@angular/router';\nimport { MainMenuComponent } from '../main-menu.component';\n\n\n@Component({\n  selector: 'app-main-menu-header',\n  standalone: true,\n  imports: [CommonModule, MatCardModule, RouterModule],\n  templateUrl: './main-menu-header.component.html',\n  styleUrl: './main-menu-header.component.scss',\n})\nexport class MainMenuHeaderComponent {\n\n  constructor( public router: Router,\n    public mainMenu: MainMenuComponent,\n  ) {}\n\n  \n  openNewChannel() {\n    this.mainMenu.openNewChannel();\n  }\n}\n\n    \n\n    \n        \n    \n        \n        Devspace\n    \n    \n        \n            \n                \n            \n            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Devspace                                                                                                            '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainPageComponent.html":{"url":"components/MainPageComponent.html","title":"component - MainPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCardModule\n                                ChannelComponent\n                                MainMenuComponent\n                                MainHeaderComponent\n                            RouterModule\n                            CommonModule\n                                ThreadComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                sharedService\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, channelService: ChannelFirebaseService, threadService: ThreadService, sharedService: SharedService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-page.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sharedService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SharedService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { ChannelComponent } from './channel/channel.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\nimport { MainHeaderComponent } from './main-header/main-header.component';\nimport { ChannelFirebaseService } from '../firebase.service/channelFirebase.service';\nimport { UserService } from '../firebase.service/user.service';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ThreadComponent } from './thread/thread.component';\nimport { ThreadService } from '../services/thread.service';\nimport { SharedService } from '../services/shared.service';\n\n@Component({\n  selector: 'app-main-page',\n  standalone: true,\n  imports: [MatCardModule, ChannelComponent, MainMenuComponent, MainHeaderComponent, RouterModule, CommonModule, ThreadComponent],\n  templateUrl: './main-page.component.html',\n  styleUrl: './main-page.component.scss',\n})\n\nexport class MainPageComponent {\n\n  constructor(public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    public threadService: ThreadService,\n    public sharedService: SharedService) {\n    if (this.userService.currentUser) this.channelService.getChannelsForCurrentUser();\n  }\n\n\n  ngOnInit(): void {\n    this.sharedService.backToChannels$.subscribe(() => {\n      this.toggleMenu();\n    });\n    if (typeof window !== 'undefined' && window.innerWidth > 768 && window.innerWidth  768 && window.innerWidth  768 && this.sharedService.isMenuOpen) {\n        this.sharedService.isMenuOpen = false;\n        this.sharedService.showMobileDiv();\n      } if (event.target.innerWidth > 1200 && event.target.innerWidth  1200 && !this.sharedService.isMenuOpen) {\n          this.sharedService.isMenuOpen = true;\n          this.sharedService.showMobileDiv();\n        }\n      }\n    }\n  }\n}\n    \n\n    \n        \n  \n  \n    \n    \n      \n    \n    @if(threadService.threadOpen) {\n    \n    }\n  \n\n\n\n\n  \n    {{ sharedService.isMenuOpen ? 'Workspace-Menü schließen' : 'Workspace-Menü öffnen' }}\n\n    @if (!sharedService.isMenuOpen) {\n    \n      \n      \n      \n    \n    }\n\n    @if (sharedService.isMenuOpen) {\n    \n      \n      \n      \n    \n    }\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          @if(threadService.threadOpen) {        }        {{ sharedService.isMenuOpen ? \\'Workspace-Menü schließen\\' : \\'Workspace-Menü öffnen\\' }}    @if (!sharedService.isMenuOpen) {                              }    @if (sharedService.isMenuOpen) {                              }  '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/message.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            channel_id\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_deleted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            last_reply\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            modified_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            thread_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            total_replies\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channel_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channel_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_deleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_deleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_reply\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_reply:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modified_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modified_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thread_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thread_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_replies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_replies:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n    id?: string,\n    user_id: string,\n    channel_id: string,\n    thread_id?: string,\n    message: {\n        text: string, \n        reactions?: string[],\n        attachements?: string[], \n    },\n    created_at: number,\n    modified_at?: number,\n    is_deleted: boolean,\n    total_replies?: number,\n    last_reply?: number,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MessageInputComponent.html":{"url":"components/MessageInputComponent.html","title":"component - MessageInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MessageInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/message-input/message-input.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message-input\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./message-input.component.html\n            \n\n\n\n            \n                styleUrl\n                ./message-input.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                channelInput\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                currentFile\n                            \n                            \n                                currentUser\n                            \n                            \n                                    Public\n                                customDialogService\n                            \n                            \n                                errorMessage\n                            \n                            \n                                message\n                            \n                            \n                                messageInput\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addDocument\n                            \n                            \n                                checkIfFileIsTooBig\n                            \n                            \n                                    Async\n                                checkWhereToSaveMessage\n                            \n                            \n                                createURL\n                            \n                            \n                                getDirectChannelUser\n                            \n                            \n                                getTextareaPlaceholderText\n                            \n                            \n                                openDialogEmojiPicker\n                            \n                            \n                                removeFile\n                            \n                            \n                                    Async\n                                saveMessage\n                            \n                            \n                                    Async\n                                setFocusOnInput\n                            \n                            \n                                setMessageData\n                            \n                            \n                                    Async\n                                setMessageWithFile\n                            \n                            \n                                updateThreadMessage\n                            \n                            \n                                wrongFileType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                usedIn\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, channelService: ChannelFirebaseService, messageService: MessageService, customDialogService: CustomDialogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/message-input/message-input.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        usedIn\n                    \n                \n                \n                    \n                        Type :     \"channel\" | \"thread\"\n\n                    \n                \n                \n                    \n                        Default value : 'channel'\n                    \n                \n                        \n                            \n                                    Defined in src/app/main-page/message-input/message-input.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addDocument\n                        \n                    \n                \n            \n            \n                \naddDocument(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/message-input/message-input.component.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkIfFileIsTooBig\n                        \n                    \n                \n            \n            \n                \ncheckIfFileIsTooBig()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/message-input/message-input.component.ts:128\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkWhereToSaveMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkWhereToSaveMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/message-input/message-input.component.ts:61\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createURL\n                        \n                    \n                \n            \n            \n                \ncreateURL(file: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/message-input/message-input.component.ts:142\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirectChannelUser\n                        \n                    \n                \n            \n            \n                \ngetDirectChannelUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/message-input/message-input.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTextareaPlaceholderText\n                        \n                    \n                \n            \n            \n                \ngetTextareaPlaceholderText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/message-input/message-input.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialogEmojiPicker\n                        \n                    \n                \n            \n            \n                \nopenDialogEmojiPicker(input: HTMLDivElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/message-input/message-input.component.ts:154\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLDivElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFile\n                        \n                    \n                \n            \n            \n                \nremoveFile(input: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/message-input/message-input.component.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveMessage(channelInput: HTMLDivElement, fileInput: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/message-input/message-input.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelInput\n                                            \n                                                        HTMLDivElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                fileInput\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setFocusOnInput\n                        \n                    \n                \n            \n            \n                \n                        \n                    setFocusOnInput()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/message-input/message-input.component.ts:166\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMessageData\n                        \n                    \n                \n            \n            \n                \nsetMessageData(trimmedMessageInput: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/message-input/message-input.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                trimmedMessageInput\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setMessageWithFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    setMessageWithFile(fileInput: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/message-input/message-input.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fileInput\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateThreadMessage\n                        \n                    \n                \n            \n            \n                \nupdateThreadMessage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/message-input/message-input.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wrongFileType\n                        \n                    \n                \n            \n            \n                \nwrongFileType()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/message-input/message-input.component.ts:135\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        channelInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('channelInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/message-input/message-input.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/message-input/message-input.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/message-input/message-input.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : this.userService.currentUser\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/message-input/message-input.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        customDialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomDialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/message-input/message-input.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/message-input/message-input.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message\n\n                    \n                \n                \n                    \n                        Default value : {\n    user_id: '',\n    channel_id: '',\n    message: {\n      text: '',\n      attachements: [],\n    },\n    created_at: 0,\n    modified_at: 0,\n    is_deleted: false,\n    last_reply: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/message-input/message-input.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/message-input/message-input.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/message-input/message-input.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/message-input/message-input.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ChannelFirebaseService } from '../../firebase.service/channelFirebase.service';\nimport { UserService } from '../../firebase.service/user.service';\nimport { User } from '../../interfaces/user.interface';\nimport { Message } from '../../interfaces/message.interface';\nimport { MessageService } from '../../firebase.service/message.service';\nimport { CustomDialogService } from '../../services/custom-dialog.service';\nimport { DialogEmojiPickerComponent } from '../channel/dialog-emoji-picker/dialog-emoji-picker.component';\n\n@Component({\n  selector: 'app-message-input',\n  standalone: true,\n  imports: [FormsModule],\n  templateUrl: './message-input.component.html',\n  styleUrl: './message-input.component.scss'\n})\nexport class MessageInputComponent {\n  @ViewChild('channelInput') channelInput!: ElementRef;\n  @Input() usedIn: 'channel' | 'thread' = 'channel';\n\n  messageInput: string = '';\n  currentUser: User = this.userService.currentUser;\n  message: Message = {\n    user_id: '',\n    channel_id: '',\n    message: {\n      text: '',\n      attachements: [],\n    },\n    created_at: 0,\n    modified_at: 0,\n    is_deleted: false,\n    last_reply: 0,\n  };\n  currentFile: any | null = null;\n  errorMessage: string = '';\n\n  constructor(\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    public messageService: MessageService,\n    public customDialogService: CustomDialogService,\n  ) {  }\n\n\n  async saveMessage(channelInput: HTMLDivElement, fileInput: HTMLInputElement) {\n    const trimmedMessageInput = this.messageInput.trim();\n    if (trimmedMessageInput != '' || this.currentFile != null) {\n      this.setMessageData(trimmedMessageInput);\n      this.checkWhereToSaveMessage();\n      if (this.currentFile != null) {\n        this.setMessageWithFile(fileInput);\n      }\n      this.messageInput = '';\n      channelInput.innerText = '';\n    }\n  }\n\n\n  async checkWhereToSaveMessage() {\n    if (this.usedIn == 'channel') this.message.channel_id = this.channelService.currentChannel.id;\n    if (this.usedIn == 'thread') this.message.thread_id = this.channelService.currentThread.id;\n    this.message.id = await this.messageService.addMessage(this.message);\n    if (this.usedIn == 'thread') this.updateThreadMessage();\n  }\n\n\n  async setMessageWithFile(fileInput: HTMLInputElement){\n    const path = 'users/' + this.currentUser.id + '/messages/' + this.message.id + '/' + this.currentFile.name;\n    await this.messageService.uploadFile(this.currentFile, path);\n    this.message.message.attachements = [];\n    this.message.message.attachements.push(path);\n    this.messageService.updateMessage(this.message);\n    this.removeFile(fileInput);\n  }\n\n\n  setMessageData(trimmedMessageInput: string){\n    this.message.user_id = this.currentUser.id;\n    this.message.message.text = trimmedMessageInput;\n    this.message.created_at = new Date().getTime();\n    this.message.modified_at = this.message.created_at;\n  }\n\n\n  updateThreadMessage() {\n    let threadMessages = this.messageService.messagesThread;\n    let threadMessage = this.messageService.messagesThread[0];\n    threadMessage.total_replies = threadMessages.length - 1;\n    threadMessage.last_reply = this.message.created_at;\n    this.messageService.updateMessage(threadMessage);\n  }\n\n\n  getDirectChannelUser() {\n    let contact = this.channelService.currentChannel.members.find((member) => member != this.currentUser.id);\n    if (contact) return this.userService.getUser(contact);\n    else return this.currentUser;\n  }\n\n\n  getTextareaPlaceholderText() {\n    const channel = this.channelService.currentChannel;\n    const channelType = channel.channel_type;\n    const channelName = channel.name;\n    const members = channel.members;\n    if (channelType === 'main') return `Nachricht an #${channelName}`;\n    if (channelType === 'direct') return `Nachricht an ${members[0] === members[1] || members.length === 1 ? 'dich' : this.getDirectChannelUser()?.name}`;\n    if (channelType === 'thread') return 'Antworten...';\n    return 'Starte eine neue Nachricht';\n  }\n\n\n  addDocument(event: Event) {\n    const input = event.target as HTMLInputElement;\n    if (input.files && input.files.length) {\n      const file = input.files[0];\n      this.currentFile = file;\n      this.currentFile.URL = this.createURL(file);\n      if (file.size > 500 * 1024) this.checkIfFileIsTooBig();\n      const allowedTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/svg+xml', 'application/pdf'];\n      if (!allowedTypes.includes(file.type)) this.wrongFileType();\n    }\n  }\n\n\n  checkIfFileIsTooBig(){\n      this.currentFile = null;\n      this.errorMessage = 'Die Datei ist zu groß. Max. 500KB.';\n      setTimeout(() => this.errorMessage = '', 5000);\n  }\n\n\n  wrongFileType() {\n    this.currentFile = null;\n    this.errorMessage = 'Ungültiger Dateityp. Bitte wählen Sie eine Bild- oder PDF-Datei.';\n    setTimeout(() => this.errorMessage = '', 5000);\n  }\n\n\n  createURL(file: File) {\n    return URL.createObjectURL(file);\n  }\n\n\n  removeFile(input: HTMLInputElement) {\n    this.currentFile = null;\n    input.value = '';\n  }\n\n\n  /* Dialog Emoji Picker */\n  openDialogEmojiPicker(input: HTMLDivElement) {\n    const component = DialogEmojiPickerComponent;\n    const dialogRef = this.customDialogService.openDialog(component);\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.messageInput = this.messageInput + result;\n        input.innerText = this.messageInput;\n      }\n    })\n  }\n\n\n  async setFocusOnInput() {\n    await this.channelInput.nativeElement.focus();\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n    \n      @if(currentFile) {\n          @if(currentFile.type == 'application/pdf') { \n            \n              \n                pdf\n                {{currentFile.name}}\n              \n              \n              \n                \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n              \n            \n\n          }\n          @else { \n            \n              \n                \n                  \n                \n              \n              \n              \n                \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n              \n            \n\n          }\n      }\n      @if(errorMessage != '') {\n        {{errorMessage}}\n      }\n    \n    \n    \n      \n        \n        \n        \n          \n            \n              \n                \n              \n              \n                \n              \n            \n            \n              \n                \n              \n            \n          \n        \n        \n        \n        \n          \n            \n              \n            \n            \n              \n            \n          \n        \n        \n        \n          \n            \n              \n            \n            \n              \n            \n          \n        \n      \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n    \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      @if(currentFile) {          @if(currentFile.type == \\'application/pdf\\') {                                           pdf                {{currentFile.name}}                                                                                                                                                                                                                            }          @else {                                                                                                                                                                                                                                                                                                         }      }      @if(errorMessage != \\'\\') {        {{errorMessage}}      }n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'MessageInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/firebase.service/message.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allMessages\n                            \n                            \n                                currentMessage\n                            \n                            \n                                firestore\n                            \n                            \n                                message\n                            \n                            \n                                messages\n                            \n                            \n                                    Private\n                                messageSource\n                            \n                            \n                                messagesThread\n                            \n                            \n                                unsubAllMessages\n                            \n                            \n                                unsubMessages\n                            \n                            \n                                unsubMessagesThread\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMessage\n                            \n                            \n                                changeMessage\n                            \n                            \n                                createElement\n                            \n                            \n                                deleteFile\n                            \n                            \n                                    Async\n                                downloadFile\n                            \n                            \n                                    Async\n                                getFileData\n                            \n                            \n                                getMessageRef\n                            \n                            \n                                getMessagesFromChannel\n                            \n                            \n                                getMessagesFromThread\n                            \n                            \n                                getMessagesRef\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                removeMessagesFromEmptyChannel\n                            \n                            \n                                    Async\n                                removeThreadMessagesFromChannel\n                            \n                            \n                                setMessage\n                            \n                            \n                                subAllMessages\n                            \n                            \n                                subMessages\n                            \n                            \n                                subMessagesThread\n                            \n                            \n                                    Async\n                                updateMessage\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/firebase.service/message.service.ts:51\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    addMessage(message: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMessage\n                        \n                    \n                \n            \n            \n                \nchangeMessage(messageId: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messageId\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createElement\n                        \n                    \n                \n            \n            \n                \ncreateElement(blobUrl: string, metadata: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:215\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blobUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFile\n                        \n                    \n                \n            \n            \n                \ndeleteFile(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:227\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        downloadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadFile(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFileData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileData(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessageRef\n                        \n                    \n                \n            \n            \n                \ngetMessageRef(message_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromChannel\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromChannel(channel_id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel_id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromThread\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromThread(thread_id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                thread_id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesRef\n                        \n                    \n                \n            \n            \n                \ngetMessagesRef()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeMessagesFromEmptyChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeMessagesFromEmptyChannel(channelId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:243\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeThreadMessagesFromChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeThreadMessagesFromChannel(threadId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:234\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                threadId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMessage\n                        \n                    \n                \n            \n            \n                \nsetMessage(data: any, id?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Message\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subAllMessages\n                        \n                    \n                \n            \n            \n                \nsubAllMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subMessages\n                        \n                    \n                \n            \n            \n                \nsubMessages(channel_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subMessagesThread\n                        \n                    \n                \n            \n            \n                \nsubMessagesThread(thread_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                thread_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMessage(message: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(file: File, path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.messageSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message\n\n                    \n                \n                \n                    \n                        Default value : {\n    user_id: '',\n    channel_id: '',\n    thread_id: '',\n    message: {\n      text: '',\n      reactions: [],\n      attachements: [],\n    },\n    created_at: 0,\n    modified_at: 0,\n    is_deleted: false,\n    total_replies: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messagesThread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubAllMessages\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubMessages\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubMessagesThread\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport {\n  Firestore,\n  collection,\n  onSnapshot,\n  addDoc,\n  doc,\n  updateDoc,\n  where,\n  query,\n  orderBy,\n  deleteDoc,\n  getDocs,\n} from '@angular/fire/firestore';\nimport { Message } from '../interfaces/message.interface';\nimport {\n  getStorage,\n  ref,\n  uploadBytesResumable,\n  getDownloadURL,\n} from 'firebase/storage';\nimport { deleteObject, getMetadata } from '@angular/fire/storage';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  private messageSource = new Subject();\n  currentMessage = this.messageSource.asObservable();\n  firestore: Firestore = inject(Firestore);\n  messages: Message[] = [];\n  allMessages: any[] = [];\n  messagesThread: Message[] = [];\n  message: Message = {\n    user_id: '',\n    channel_id: '',\n    thread_id: '',\n    message: {\n      text: '',\n      reactions: [],\n      attachements: [],\n    },\n    created_at: 0,\n    modified_at: 0,\n    is_deleted: false,\n    total_replies: 0,\n  };\n  unsubMessages = () => { };\n  unsubMessagesThread = () => { };\n  unsubAllMessages;\n\n  constructor() {\n    this.unsubAllMessages = this.subAllMessages();\n  }\n\n\n  changeMessage(messageId: any) {\n    this.messageSource.next(messageId);\n  }\n\n\n  ngOnDestroy() {\n    this.unsubMessages();\n    this.unsubMessagesThread();\n    this.unsubAllMessages();\n  }\n\n\n  getMessagesFromChannel(channel_id: any) {\n    this.unsubMessages = this.subMessages(channel_id);\n  }\n\n\n  getMessagesFromThread(thread_id: any) {\n    this.unsubMessagesThread = this.subMessagesThread(thread_id);\n  }\n\n\n  getMessagesRef() {\n    return collection(this.firestore, 'messages');\n  }\n\n\n  getMessageRef(message_id: string) {\n    return doc(collection(this.firestore, 'messages', message_id));\n  }\n\n\n  setMessage(data: any, id?: string): Message {\n    return {\n      id: id || '',\n      user_id: data.user_id || '',\n      channel_id: data.channel_id || '',\n      thread_id: data.thread_id || '',\n      message: {\n        text: data.message.text || '',\n        reactions: data.message.reactions || [],\n        attachements: data.message.attachements || [],\n      },\n      created_at: data.created_at || 0,\n      modified_at: data.modified_at || 0,\n      is_deleted: data.is_deleted || false,\n      total_replies: data.total_replies || 0,\n      last_reply: data.last_reply || 0,\n    };\n  }\n\n\n  /* CREATE */\n  async addMessage(message: Message) {\n    let ref = this.getMessagesRef();\n    const docRef = await addDoc(ref, message);\n    return docRef.id;\n  }\n\n\n  /* READ */\n  subMessages(channel_id: string) {\n    const q = query(\n      this.getMessagesRef(),\n      where('channel_id', '==', channel_id),\n      orderBy('created_at')\n    );\n    return onSnapshot(q, (messages) => {\n      this.messages = [];\n      messages.forEach((message) => {\n        this.messages.push(this.setMessage(message.data(), message.id));\n      });\n    });\n  }\n\n\n  subMessagesThread(thread_id: string) {\n    const q = query(\n      this.getMessagesRef(),\n      where('thread_id', '==', thread_id),\n      orderBy('created_at')\n    );\n    return onSnapshot(q, (messages) => {\n      this.messagesThread = [];\n      messages.forEach((message) => {\n        this.messagesThread.push(this.setMessage(message.data(), message.id));\n      });\n    });\n  }\n\n\n  subAllMessages() {\n    const q = query(this.getMessagesRef(), orderBy('created_at'));\n    return onSnapshot(q, (messages) => {\n      this.allMessages = [];\n      messages.forEach((message) => {\n        this.allMessages.push(this.setMessage(message.data(), message.id));\n      });\n    });\n  }\n\n\n  /* UPDATE */\n  async updateMessage(message: Message) {\n    if (message.id) {\n      let docRef = doc(this.getMessagesRef(), message.id);\n      await updateDoc(docRef, JSON.parse(JSON.stringify(message))).catch(\n        (err) => console.error(err)\n      );\n    }\n  }\n\n\n  /* STORAGE */\n  uploadFile(file: File, path: string): Promise {\n    return new Promise((resolve, reject) => {\n      const storage = getStorage();\n      const storageRef = ref(storage, path);\n      const uploadTask = uploadBytesResumable(storageRef, file);\n      uploadTask.on('state_changed', (snapshot) => { },\n        (error) => {\n          reject(error);\n        }, () => {\n          resolve();\n        }\n      );\n    });\n  }\n\n\n  async getFileData(path: string) {\n    const storage = getStorage();\n    const storageRef = ref(storage, path);\n    const url = await getDownloadURL(storageRef);\n    const metadata = await getMetadata(storageRef);\n    return {\n      path: path,\n      name: metadata.name,\n      type: metadata.contentType,\n      url: url,\n    };\n  }\n\n\n  async downloadFile(path: string) {\n    const storage = getStorage();\n    const storageRef = ref(storage, path);\n    const metadata = await getMetadata(storageRef);\n    const url = await getDownloadURL(storageRef);\n    const response = await fetch(url, { mode: 'cors' });\n    if (!response.ok) throw new Error('Netzwerkantwort war nicht ok.');\n    const blob = await response.blob();\n    const blobUrl = window.URL.createObjectURL(blob);\n    this.createElement(blobUrl, metadata);\n  }\n\n\n  createElement(blobUrl: string, metadata: any){\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = blobUrl;\n    a.download = metadata.name;\n    document.body.appendChild(a);\n    a.click();\n    window.URL.revokeObjectURL(blobUrl);\n    document.body.removeChild(a);\n  }\n\n\n  deleteFile(path: string) {\n    const storage = getStorage();\n    const storageRef = ref(storage, path);\n    deleteObject(storageRef);\n  }\n\n\n  async removeThreadMessagesFromChannel(threadId: string) {\n    const q = query(this.getMessagesRef(), where('thread_id', '==', threadId));\n    const querySnapshot = await getDocs(q);\n    for (let doc of querySnapshot.docs) {\n      await deleteDoc(doc.ref);\n    }\n  }\n\n\n  async removeMessagesFromEmptyChannel(channelId: string) {\n    const q = query(this.getMessagesRef(), where('channel_id', '==', channelId));\n    const querySnapshot = await getDocs(q);\n    for (let doc of querySnapshot.docs) {\n      await deleteDoc(doc.ref);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OpenProfileDirective.html":{"url":"directives/OpenProfileDirective.html","title":"directive - OpenProfileDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  OpenProfileDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/open-profile.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appOpenProfile]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileService: ProfileService, elRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/open-profile.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        button\n                    \n                \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/open-profile.directive.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/open-profile.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/open-profile.directive.ts:18\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/open-profile.directive.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input, HostListener, ElementRef } from '@angular/core';\nimport { ProfileService } from '../../services/profile.service';\n\n@Directive({\n  selector: '[appOpenProfile]',\n  standalone: true,\n})\nexport class OpenProfileDirective {\n  @Input() userId!: string;\n  @Input() button!: HTMLElement;\n\n  constructor(\n    private profileService: ProfileService,\n    private elRef: ElementRef\n  ) {}\n\n  @HostListener('click')\n  onClick(): void {\n    const element = this.button || this.elRef.nativeElement;\n    this.profileService.openProfile(this.userId, element);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isOwnProfile\n                            \n                            \n                                    Private\n                                viewingUserId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOwnProfileStatus\n                            \n                            \n                                getViewingUserId\n                            \n                            \n                                openProfile\n                            \n                            \n                                setOwnProfileStatus\n                            \n                            \n                                setViewingUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, customDialogService: CustomDialogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/profile.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOwnProfileStatus\n                        \n                    \n                \n            \n            \n                \ngetOwnProfileStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/profile.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getViewingUserId\n                        \n                    \n                \n            \n            \n                \ngetViewingUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/profile.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openProfile\n                        \n                    \n                \n            \n            \n                \nopenProfile(userId: string, button: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/profile.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOwnProfileStatus\n                        \n                    \n                \n            \n            \n                \nsetOwnProfileStatus(status: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/profile.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewingUserId\n                        \n                    \n                \n            \n            \n                \nsetViewingUserId(userId: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/profile.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isOwnProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/profile.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        viewingUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/profile.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserService } from '../firebase.service/user.service';\nimport { CustomDialogService } from './custom-dialog.service';\nimport { DialogShowProfileComponent } from '../shared/dialog-show-profile/dialog-show-profile.component';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  public isOwnProfile: boolean = false;\n  private viewingUserId: string | null = null;\n\n  constructor(private userService: UserService, private customDialogService: CustomDialogService) {}\n\n\n  openProfile(userId: string, button: HTMLElement): void {\n    const isOwnProfile = userId === this.userService.currentUser.id;\n    this.setOwnProfileStatus(isOwnProfile);\n    this.setViewingUserId(userId);\n    const component = DialogShowProfileComponent;\n    let userHeadButton = document.getElementById('userHead');\n    if (isOwnProfile && userHeadButton) {\n      this.customDialogService.openDialogAbsolute({button : userHeadButton, component, position : 'right', mobilePosition: 'mid', maxWidth: '500px'});\n    } else {\n      this.customDialogService.openDialog(component);\n    }\n  }\n\n\n  setOwnProfileStatus(status: boolean): void {\n    this.isOwnProfile = status;\n  }\n\n\n  getOwnProfileStatus(): boolean {\n    return this.isOwnProfile;\n  }\n\n\n  setViewingUserId(userId: string | null): void {\n    this.viewingUserId = userId;\n  }\n  \n\n  getViewingUserId(): string | null {\n    return this.viewingUserId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Reaction.html":{"url":"interfaces/Reaction.html","title":"interface - Reaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Reaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/reaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastTimeUsed\n                                        \n                                \n                                \n                                        \n                                            message_id\n                                        \n                                \n                                \n                                        \n                                            unicode\n                                        \n                                \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastTimeUsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastTimeUsed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unicode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unicode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Reaction {\n    id: string,\n    message_id: string,\n    unicode: string, \n    users: string[],\n    created_at: number;\n    lastTimeUsed: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReactionService.html":{"url":"injectables/ReactionService.html","title":"injectable - ReactionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/firebase.service/reaction.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firestore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addReaction\n                            \n                            \n                                getReactionsRef\n                            \n                            \n                                setReaction\n                            \n                            \n                                subReactionsForMessage\n                            \n                            \n                                    Async\n                                updateReaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/firebase.service/reaction.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addReaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    addReaction(reaction: Reaction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/reaction.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reaction\n                                            \n                                                            Reaction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReactionsRef\n                        \n                    \n                \n            \n            \n                \ngetReactionsRef()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/reaction.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setReaction\n                        \n                    \n                \n            \n            \n                \nsetReaction(data: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/reaction.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Reaction\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subReactionsForMessage\n                        \n                    \n                \n            \n            \n                \nsubReactionsForMessage(message_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/reaction.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { snapshot: any; reactionsArray: {}; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateReaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateReaction(reaction: Reaction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/reaction.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reaction\n                                            \n                                                            Reaction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/reaction.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Firestore, collection, onSnapshot, addDoc, doc, updateDoc, query, where, orderBy } from '@angular/fire/firestore';\nimport { Reaction } from '../interfaces/reaction.interface';\n\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ReactionService {\n    firestore: Firestore = inject(Firestore);\n\n    constructor() {  }\n\n    // References\n    getReactionsRef() {\n        return collection(this.firestore, 'reactions');\n    }\n\n\n    setReaction(data: any, id: string) : Reaction {\n        return {\n            id: id || '',\n            message_id: data.message_id || '',\n            users: data.users || [],\n            unicode: data.unicode || '',\n            created_at: data.created_at || 0,\n            lastTimeUsed: data.lastTimeUsed || 0,\n        }\n    }\n\n\n    // CREATE\n    async addReaction(reaction : Reaction) {\n        let ref = this.getReactionsRef();\n        const docRef = await addDoc(ref, reaction);\n        return docRef.id;\n    }\n\n\n    // READ\n    subReactionsForMessage(message_id : string) {\n        const q = query(this.getReactionsRef(), where('message_id', '==', message_id), orderBy('created_at'));\n        let reactionsArray : Reaction[] = [];\n        const snapshot =  onSnapshot(q, (reactions) => {\n            reactionsArray.length = 0;\n            reactions.forEach((reaction) => {\n                reactionsArray.push(this.setReaction(reaction.data(), reaction.id));\n            })\n        });\n        return {snapshot, reactionsArray};\n    }\n\n\n    // UPDATE\n    async updateReaction(reaction : Reaction) {\n        if (reaction.id) {\n          let docRef = doc(this.getReactionsRef(), reaction.id);\n          await updateDoc(docRef, JSON.parse(JSON.stringify(reaction)))\n        }\n      }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/reset-password/reset-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            MatSnackBarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                oobCode\n                            \n                            \n                                resetPassword\n                            \n                            \n                                resetPasswordAgain\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                confirmPopup\n                            \n                            \n                                goToCheckEmail\n                            \n                            \n                                returnToLogin\n                            \n                            \n                                triggerAnimation\n                            \n                            \n                                updateUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _snackBar: MatSnackBar, userAuth: UserAuthService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/reset-password/reset-password.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/reset-password/reset-password.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPopup\n                        \n                    \n                \n            \n            \n                \nconfirmPopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/reset-password/reset-password.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToCheckEmail\n                        \n                    \n                \n            \n            \n                \ngoToCheckEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/reset-password/reset-password.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnToLogin\n                        \n                    \n                \n            \n            \n                \nreturnToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/reset-password/reset-password.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerAnimation\n                        \n                    \n                \n            \n            \n                \ntriggerAnimation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/reset-password/reset-password.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserPassword\n                        \n                    \n                \n            \n            \n                \nupdateUserPassword(newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        oobCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/reset-password/reset-password.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/reset-password/reset-password.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordAgain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/reset-password/reset-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/reset-password/reset-password.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoginSnackbarComponent } from '../../popups/login-snackbar/login-snackbar.component';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { UserAuthService } from '../../firebase.service/user.auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [CommonModule, FormsModule, MatSnackBarModule],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss'\n})\nexport class ResetPasswordComponent {\n  userId: string | any;\n  resetPassword: string = '';\n  resetPasswordAgain: string = '';\n  oobCode: string = '';\n  constructor(private router: Router, private _snackBar: MatSnackBar,\n    private userAuth: UserAuthService, private route: ActivatedRoute) { }\n\n\n  goToCheckEmail() {\n    this.router.navigate(['/login-page/check-email']);\n  }\n\n\n  returnToLogin() {\n    setTimeout(() => {\n      this.router.navigate(['/login-page/login']);\n    }, 1000);\n  }\n\n\n  confirmPopup() {\n    this._snackBar.openFromComponent(LoginSnackbarComponent, {\n      duration: 2000,\n      horizontalPosition: 'start',\n      verticalPosition: 'bottom',\n      direction: 'rtl',\n    });\n  }\n\n\n  triggerAnimation() {\n    const element = document.querySelector('.cdk-overlay-container');\n    if (element) {\n      element.classList.add('animate');\n\n      setTimeout(() => {\n        element.classList.remove('animate');\n      }, 2000);\n    }\n  }\n\n\n  updateUserPassword(newPassword: string) {\n    this.oobCode = this.route.snapshot.queryParams['oobCode'];\n    this.userAuth.changePassword(newPassword, this.oobCode);\n  }\n  \n\n  changePassword(newPassword: string) {\n    Promise.resolve(this.updateUserPassword(newPassword)).then(() => {\n      this.confirmPopup();\n      this.returnToLogin();\n      this.triggerAnimation();\n    }).catch((error) => {\n      console.error(error);\n    });\n\n  }\n}\n\n    \n\n    \n        \n    \n        Passwort zurücksetzen\n        \n            \n                \n            \n            \n                \n                \n                    Ihre Passwörter stimmen nicht überein\n                \n            \n            \n        \n        \n            Passwort ändern\n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Passwort zurücksetzen                                                                                                                Ihre Passwörter stimmen nicht überein                                                                    Passwort ändern        '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchResultsComponent.html":{"url":"components/SearchResultsComponent.html","title":"component - SearchResultsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchResultsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/search-results/search-results.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-results\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                OpenProfileDirective\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./search-results.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search-results.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                    Public\n                                utilityService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeThread\n                            \n                            \n                                displayChannelTime\n                            \n                            \n                                getUserDisplayName\n                            \n                            \n                                shouldShowSearchResults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filteredChannels\n                            \n                            \n                                filteredMessages\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                searchControl\n                            \n                            \n                                userService\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, threadService: ThreadService, utilityService: UtilityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/search-results/search-results.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilityService\n                                                  \n                                                        \n                                                                        UtilityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filteredChannels\n                    \n                \n                \n                    \n                        Type :         Channel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/search-results/search-results.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filteredMessages\n                    \n                \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/search-results/search-results.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filteredUsers\n                    \n                \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/search-results/search-results.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        searchControl\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/search-results/search-results.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userService\n                    \n                \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/search-results/search-results.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeThread\n                        \n                    \n                \n            \n            \n                \ncloseThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/search-results/search-results.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayChannelTime\n                        \n                    \n                \n            \n            \n                \ndisplayChannelTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/search-results/search-results.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDisplayName\n                        \n                    \n                \n            \n            \n                \ngetUserDisplayName(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/search-results/search-results.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldShowSearchResults\n                        \n                    \n                \n            \n            \n                \nshouldShowSearchResults()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/search-results/search-results.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/search-results/search-results.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/search-results/search-results.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        utilityService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UtilityService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/search-results/search-results.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { User } from '../../interfaces/user.interface';\nimport { Channel } from '../../interfaces/channel.interface';\nimport { Message } from '../../interfaces/message.interface';\nimport { OpenProfileDirective } from '../../shared/directives/open-profile.directive';\nimport { Router, RouterModule } from '@angular/router';\nimport { ThreadService } from '../../services/thread.service';\nimport { UtilityService } from '../../services/utility.service';\nimport { UserService } from '../../firebase.service/user.service';\nimport { FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-search-results',\n  standalone: true,\n  imports: [CommonModule, OpenProfileDirective, RouterModule],\n  templateUrl: './search-results.component.html',\n  styleUrl: './search-results.component.scss',\n})\nexport class SearchResultsComponent {\n  @Input() searchControl!: FormControl;\n  @Input() filteredUsers: User[] = [];\n  @Input() filteredChannels: Channel[] = []; \n  @Input() filteredMessages: Message[] = []; \n  @Input() userService!: UserService; \n\n\n  constructor(\n    public router: Router,\n    public threadService: ThreadService,\n    public utilityService: UtilityService,\n  ) { }\n\n\n  getUserDisplayName(userId: string): string {\n    if (!this.userService) {\n      return 'User Name';\n    }\n    const user = this.userService.getUser(userId);\n    return user ? user.name : 'User Name';\n  }\n\n\n  shouldShowSearchResults(): boolean {\n    return this.searchControl.value.trim().length > 0 &&\n      (this.filteredUsers.length > 0 || this.filteredChannels.length > 0 || this.filteredMessages.length > 0);\n  }\n\n\n  displayChannelTime(): string {\n    return this.utilityService.getChannelCreationTime();\n  }\n  \n\n  closeThread() {\n    this.userService.saveLastThread(this.userService.currentUser.id, '');\n    this.threadService.closeThread();\n  }\n}\n\n    \n\n    \n        \n     0\">\n      Users:\n      \n        \n          \n            \n            \n          \n          {{ getUserDisplayName(user.id) }}{{ getUserDisplayName(user.id) === userService.currentUser?.name ? ' (Du)' : '' }}\n        \n      \n    \n  \n     0\">\n      Channels:\n      \n        \n          \n            #\n            {{channel.name}}\n          \n        \n      \n    \n  \n     0\">\n      Messages:\n      \n        \n          \n          \n            \n              \n              {{ displayChannelTime() }}\n            \n            {{message.message.text}}\n            {{message.channel_id}}\n          \n        \n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     0\">      Users:                                                                    {{ getUserDisplayName(user.id) }}{{ getUserDisplayName(user.id) === userService.currentUser?.name ? \\' (Du)\\' : \\'\\' }}                         0\">      Channels:                                    #            {{channel.name}}                                   0\">      Messages:                                                                          {{ displayChannelTime() }}                        {{message.message.text}}            {{message.channel_id}}                                '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'SearchResultsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchService.html":{"url":"injectables/SearchService.html","title":"injectable - SearchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                channelExists\n                            \n                            \n                                clearFilters\n                            \n                            \n                                filterChannels\n                            \n                            \n                                filterChannelsByTypeAndPrefix\n                            \n                            \n                                filterMessages\n                            \n                            \n                                filterUsers\n                            \n                            \n                                filterUsersByPrefix\n                            \n                            \n                                    Private\n                                searchTerm\n                            \n                            \n                                threadExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, channelService: ChannelFirebaseService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/search.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters(searchTerm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelExists\n                        \n                    \n                \n            \n            \n                \nchannelExists(channelId: string, channels: Channel[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                channels\n                                            \n                                                            Channel[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearFilters\n                        \n                    \n                \n            \n            \n                \nclearFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterChannels\n                        \n                    \n                \n            \n            \n                \nfilterChannels(searchTerm: string, channels: Channel[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                channels\n                                            \n                                                            Channel[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Channel[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterChannelsByTypeAndPrefix\n                        \n                    \n                \n            \n            \n                \nfilterChannelsByTypeAndPrefix(prefix: string, channelType: ChannelTypeEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                channelType\n                                            \n                                                            ChannelTypeEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Channel[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterMessages\n                        \n                    \n                \n            \n            \n                \nfilterMessages(searchTerm: string, messages: Message[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                messages\n                                            \n                                                            Message[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Message[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterUsers\n                        \n                    \n                \n            \n            \n                \nfilterUsers(searchTerm: string, users: User[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                users\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterUsersByPrefix\n                        \n                    \n                \n            \n            \n                \nfilterUsersByPrefix(prefix: string, users: User[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                users\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        searchTerm\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchTerm(searchTerm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threadExists\n                        \n                    \n                \n            \n            \n                \nthreadExists(threadId: string, threads: Channel[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                threadId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                threads\n                                            \n                                                            Channel[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../interfaces/user.interface';\nimport { Channel } from '../interfaces/channel.interface';\nimport { Message } from '../interfaces/message.interface';\nimport { UserService } from '../firebase.service/user.service';\nimport { ChannelFirebaseService } from '../firebase.service/channelFirebase.service';\nimport { MessageService } from '../firebase.service/message.service';\nimport { ChannelTypeEnum } from '../shared/enums/channel-type.enum';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchService {\n  constructor(\n    private userService: UserService,\n    private channelService: ChannelFirebaseService,\n    private messageService: MessageService\n  ) { }\n\n\n  applyFilters(searchTerm: string): {\n    users: User[];\n    channels: Channel[];\n    messages: Message[];\n  } {\n    return {\n      users: this.filterUsers(searchTerm, this.userService.allUsers),\n      channels: this.filterChannels(searchTerm, this.channelService.channels),\n      messages: this.filterMessages(searchTerm, this.messageService.allMessages),\n    };\n  }\n\n\n  clearFilters(): { users: User[]; channels: Channel[]; messages: Message[] } {\n    return {\n      users: [],\n      channels: [],\n      messages: [],\n    };\n  }\n\n\n  private searchTerm(searchTerm: string): string {\n    return searchTerm.trim().toLowerCase();\n  }\n\n\n  filterUsers(searchTerm: string, users: User[]): User[] {\n    const lowerCaseTerm = this.searchTerm(searchTerm);\n    return users.filter((user) =>\n      user.name\n        .split(' ')\n        .some((part: string) => part.toLowerCase().startsWith(lowerCaseTerm))\n    );\n  }\n\n\n  filterChannels(searchTerm: string, channels: Channel[]): Channel[] {\n    const lowerCaseTerm = this.searchTerm(searchTerm);\n    return channels.filter((channel) =>\n      channel.name\n        .split(' ')\n        .some((part: string) => part.toLowerCase().startsWith(lowerCaseTerm))\n    );\n  }\n\n\n  filterMessages(searchTerm: string, messages: Message[]): Message[] {\n    const lowerCaseTerm = this.searchTerm(searchTerm);\n    return messages.filter((message) =>\n      message.message.text.toLowerCase().includes(lowerCaseTerm) &&\n      this.channelExists(message.channel_id, this.channelService.channels) ||\n      this.threadExists(message.thread_id!, this.channelService.channels)\n    );\n  }\n\n\n  channelExists(channelId: string, channels: Channel[]): boolean {\n    return channels.some(channel => channel.id === channelId);\n  }\n\n\n  threadExists(threadId: string, threads: Channel[]): boolean {\n    return threads.some(thread => thread.id === threadId);\n  }\n\n\n  filterUsersByPrefix(prefix: string, users: User[]): User[] {\n    const lowerCaseTerm = this.searchTerm(prefix.slice(1));\n    return users.filter((user) =>\n      user.name\n        .split(' ')\n        .some((part: string) => part.toLowerCase().startsWith(lowerCaseTerm))\n    );\n  }\n\n\n  filterChannelsByTypeAndPrefix(\n    prefix: string,\n    channelType: ChannelTypeEnum\n  ): Channel[] {\n    const lowerCaseTerm = this.searchTerm(prefix.slice(1));\n    return this.channelService.channels.filter(\n      (channel) =>\n        channel.channel_type === channelType &&\n        channel.name\n          .split(' ')\n          .some((part: string) => part.toLowerCase().startsWith(lowerCaseTerm))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SharedService.html":{"url":"injectables/SharedService.html","title":"injectable - SharedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SharedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/shared.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backToChannels$\n                            \n                            \n                                    Private\n                                backToChannelsSubject\n                            \n                            \n                                isMenuOpen\n                            \n                            \n                                showMobileDiv$\n                            \n                            \n                                    Private\n                                showMobileDivSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToChannels\n                            \n                            \n                                ngonDestroy\n                            \n                            \n                                showMobileDiv\n                            \n                            \n                                subscribeToBackToChannels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/shared.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backToChannels\n                        \n                    \n                \n            \n            \n                \nbackToChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/shared.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngonDestroy\n                        \n                    \n                \n            \n            \n                \nngonDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/shared.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMobileDiv\n                        \n                    \n                \n            \n            \n                \nshowMobileDiv()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/shared.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeToBackToChannels\n                        \n                    \n                \n            \n            \n                \nsubscribeToBackToChannels(toggleMenu: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/shared.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                toggleMenu\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Subscription\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backToChannels$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.backToChannelsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/shared.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        backToChannelsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/shared.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/services/shared.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMobileDiv$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.showMobileDivSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/shared.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showMobileDivSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/shared.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  isMenuOpen: boolean = true;\n  private showMobileDivSubject = new Subject();\n  private backToChannelsSubject = new Subject();\n\n  backToChannels$ = this.backToChannelsSubject.asObservable();\n  showMobileDiv$ = this.showMobileDivSubject.asObservable();\n  constructor() { }\n\n  \n  showMobileDiv() {\n    this.showMobileDivSubject.next();\n  }\n\n\n  backToChannels() {\n    this.backToChannelsSubject.next();         \n  }\n\n\n  subscribeToBackToChannels(toggleMenu: () => void): Subscription {\n    return this.backToChannels$.subscribe(toggleMenu);\n  }\n\n\n  ngonDestroy() {\n    this.backToChannelsSubject.unsubscribe();\n    this.showMobileDivSubject.unsubscribe();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignInComponent.html":{"url":"components/SignInComponent.html","title":"component - SignInComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignInComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/sign-in/sign-in.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-in\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                LoginComponent\n                            RouterModule\n                                LoginPageComponent\n                            CommonModule\n                            FormsModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-in.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-in.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkbox\n                            \n                            \n                                checked\n                            \n                            \n                                disabled\n                            \n                            \n                                emailExists\n                            \n                            \n                                firestore\n                            \n                            \n                                hoverState\n                            \n                            \n                                iconMail\n                            \n                            \n                                iconName\n                            \n                            \n                                passwordError\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeIconMail\n                            \n                            \n                                changeIconName\n                            \n                            \n                                checkEmail\n                            \n                            \n                                checkWindowWidth\n                            \n                            \n                                    Async\n                                goToAvatar\n                            \n                            \n                                goToLogin\n                            \n                            \n                                ngonInit\n                            \n                            \n                                validatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, userAuth: UserAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeIconMail\n                        \n                    \n                \n            \n            \n                \nchangeIconMail(focus: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                focus\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeIconName\n                        \n                    \n                \n            \n            \n                \nchangeIconName(focus: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                focus\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmail\n                        \n                    \n                \n            \n            \n                \ncheckEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkWindowWidth\n                        \n                    \n                \n            \n            \n                \ncheckWindowWidth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        goToAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToLogin\n                        \n                    \n                \n            \n            \n                \ngoToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngonInit\n                        \n                    \n                \n            \n            \n                \nngonInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validatePassword\n                        \n                    \n                \n            \n            \n                \nvalidatePassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        checkbox\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { checked: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checked\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoverState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconMail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/img/mail.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/img/person_filled.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef, Renderer2, inject, viewChild } from '@angular/core';\nimport { LoginComponent } from '../login/login.component';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { LoginPageComponent } from '../login-page.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { Firestore, onSnapshot, doc } from '@angular/fire/firestore';\nimport { UserService } from '../../firebase.service/user.service';\nimport { User } from '../../models/user';\nimport { UserAuthService } from '../../firebase.service/user.auth.service';\n\n@Component({\n  selector: 'app-sign-in',\n  standalone: true,\n  imports: [LoginComponent, RouterModule, LoginPageComponent, CommonModule, FormsModule, MatCheckboxModule],\n  templateUrl: './sign-in.component.html',\n  styleUrl: './sign-in.component.scss'\n})\n\nexport class SignInComponent {\n  checkbox = { checked: false };\n  checked = false;\n  disabled = false;\n  hoverState = false;\n  firestore: Firestore = inject(Firestore);\n  user = new User();\n  emailExists: boolean = false;\n  iconName = '/assets/img/person_filled.png';\n  iconMail = '/assets/img/mail.png';\n  passwordError = false;\n\n\n  constructor(\n    private router: Router, private userService: UserService, private userAuth: UserAuthService) {\n  }\n\n\n  ngonInit() {\n    this.userService.getUsers();\n    if (window.innerWidth  user.email === this.user.email);\n    if (userExists) {\n      this.emailExists = true;\n    }\n    this.emailExists = false;\n    return userExists;\n  }\n\n\n  async goToAvatar() {\n    if (this.checkEmail()) { return; }\n    if (!this.validatePassword(this.user.password)) { return; }\n    await this.userAuth.registerUser(this.user.email, this.user.password).then(async () => {\n      await this.userService.addUser(this.user);\n      await this.userAuth.saveUser(this.user.name)\n    }).then(() => {\n      this.router.navigate(['/login-page/avatar'], { state: { user: this.user } });\n    });\n  }\n\n\n  checkWindowWidth() {\n    if (typeof window !== 'undefined') {\n      if (window.innerWidth \n    \n\n    \n        \n    \n    Konto erstellen\n    Mit deinem Namen und deiner E-Mail-Adresse hast du dein neues DABubble-Konto.\n\n    \n        \n            \n            \n            Bitte schreiben Sie einen Namen\n        \n        \n            \n            \n            *Diese E-Mail-Adresse ist leider ungültig.\n            *Diese E-Mail-Adresse existiert bereits.\n        \n        \n            \n            Bitte geben Sie ein Passwort ein.\n            @if (passwordError){\n                Mindestens 6 Zeichen, ein Großbuchstabe, ein Kleinbuchstabe, eine Zahl und ein Sonderzeichen\n            }\n            \n        \n    \n    \n    \n        \n        Ich stimme der Datenschutzerklärung zu.\n    \n    \n        @if (checkWindowWidth()){\n            Weiter\n        }\n        @if (!checkWindowWidth()) {\n            Weiter\n        }\n            \n        \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Konto erstellen    Mit deinem Namen und deiner E-Mail-Adresse hast du dein neues DABubble-Konto.                                                Bitte schreiben Sie einen Namen                                                    *Diese E-Mail-Adresse ist leider ungültig.            *Diese E-Mail-Adresse existiert bereits.                                        Bitte geben Sie ein Passwort ein.            @if (passwordError){                Mindestens 6 Zeichen, ein Großbuchstabe, ein Kleinbuchstabe, eine Zahl und ein Sonderzeichen            }                                                Ich stimme der Datenschutzerklärung zu.                @if (checkWindowWidth()){            Weiter        }        @if (!checkWindowWidth()) {            Weiter        }                            '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignInComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateManagementService.html":{"url":"injectables/StateManagementService.html","title":"injectable - StateManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/state-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                selectedChannelId\n                            \n                            \n                                    Private\n                                selectedUserId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSelectedChannelId\n                            \n                            \n                                getSelectedUserId\n                            \n                            \n                                setSelectedChannelId\n                            \n                            \n                                setSelectedUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedChannelId\n                        \n                    \n                \n            \n            \n                \ngetSelectedChannelId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/state-management.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedUserId\n                        \n                    \n                \n            \n            \n                \ngetSelectedUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/state-management.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedChannelId\n                        \n                    \n                \n            \n            \n                \nsetSelectedChannelId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/state-management.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedUserId\n                        \n                    \n                \n            \n            \n                \nsetSelectedUserId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/state-management.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedChannelId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/state-management.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedUserId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/state-management.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateManagementService {\n  private selectedChannelId = new BehaviorSubject(null);\n  private selectedUserId = new BehaviorSubject(null);\n\n  setSelectedChannelId(id: string) {\n    this.selectedChannelId.next(id);\n    this.selectedUserId.next(null); \n  }\n\n\n  setSelectedUserId(id: string) {\n    this.selectedUserId.next(id);\n    this.selectedChannelId.next(null);\n  }\n\n\n  getSelectedChannelId() {\n    return this.selectedChannelId.asObservable();\n  }\n  \n\n  getSelectedUserId() {\n    return this.selectedUserId.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThreadComponent.html":{"url":"components/ThreadComponent.html","title":"component - ThreadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThreadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/thread/thread.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-thread\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                MessageComponent\n                            FormsModule\n                                MessageInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./thread.component.html\n            \n\n\n\n            \n                styleUrl\n                ./thread.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                currentDate\n                            \n                            \n                                currenThread\n                            \n                            \n                                currentUser\n                            \n                            \n                                message\n                            \n                            \n                                messageInput\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                months\n                            \n                            \n                                    Public\n                                sharedService\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                weekdays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeThread\n                            \n                            \n                                convertToDate\n                            \n                            \n                                getDateFormat\n                            \n                            \n                                getDirectChannelUser\n                            \n                            \n                                getTextareaPlaceholderText\n                            \n                            \n                                isNewDate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setFocus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, userService: UserService, channelService: ChannelFirebaseService, threadService: ThreadService, sharedService: SharedService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/thread/thread.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeThread\n                        \n                    \n                \n            \n            \n                \ncloseThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertToDate\n                        \n                    \n                \n            \n            \n                \nconvertToDate(dateAsNumber: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dateAsNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDateFormat\n                        \n                    \n                \n            \n            \n                \ngetDateFormat(dateInput: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dateInput\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirectChannelUser\n                        \n                    \n                \n            \n            \n                \ngetDirectChannelUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTextareaPlaceholderText\n                        \n                    \n                \n            \n            \n                \ngetTextareaPlaceholderText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNewDate\n                        \n                    \n                \n            \n            \n                \nisNewDate(date: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFocus\n                        \n                    \n                \n            \n            \n                \nsetFocus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1970/01/01'\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currenThread\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : this.userService.currentUser\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message\n\n                    \n                \n                \n                    \n                        Default value : {\n    user_id: '',\n    channel_id: '',\n    thread_id: this.channelService.currentThread.id,\n    message: {\n      text: '',\n      attachements: [],\n    },\n    created_at: 0,\n    modified_at: 0,\n    is_deleted: false,\n    last_reply: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        months\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Januar',\n    'Februar',\n    'März',\n    'April',\n    'Mai',\n    'Juni',\n    'Juli',\n    'August',\n    'September',\n    'Oktober',\n    'November',\n    'Dezember',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sharedService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SharedService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weekdays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Sonntag',\n    'Montag',\n    'Dienstag',\n    'Mittwoch',\n    'Donnerstag',\n    'Freitag',\n    'Samstag',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MessageService } from '../../firebase.service/message.service';\nimport { UserService } from '../../firebase.service/user.service';\nimport { ChannelFirebaseService } from '../../firebase.service/channelFirebase.service';\nimport { MessageComponent } from '../channel/message/message.component';\nimport { FormsModule } from '@angular/forms';\nimport { User } from '../../interfaces/user.interface';\nimport { Message } from '../../interfaces/message.interface';\nimport { ThreadService } from '../../services/thread.service';\nimport { MessageInputComponent } from '../message-input/message-input.component';\nimport { HostListener } from '@angular/core';\nimport { doc } from '@angular/fire/firestore';\nimport { SharedService } from '../../services/shared.service';\n\n\n@Component({\n  selector: 'app-thread',\n  standalone: true,\n  imports: [MessageComponent, FormsModule, MessageInputComponent],\n  templateUrl: './thread.component.html',\n  styleUrl: './thread.component.scss',\n})\nexport class ThreadComponent {\n  currentUser: User = this.userService.currentUser;\n  currentDate: string = '1970/01/01';\n  messageInput: string = '';\n  message: Message = {\n    user_id: '',\n    channel_id: '',\n    thread_id: this.channelService.currentThread.id,\n    message: {\n      text: '',\n      attachements: [],\n    },\n    created_at: 0,\n    modified_at: 0,\n    is_deleted: false,\n    last_reply: 0,\n  };\n  weekdays = [\n    'Sonntag',\n    'Montag',\n    'Dienstag',\n    'Mittwoch',\n    'Donnerstag',\n    'Freitag',\n    'Samstag',\n  ];\n  months = [\n    'Januar',\n    'Februar',\n    'März',\n    'April',\n    'Mai',\n    'Juni',\n    'Juli',\n    'August',\n    'September',\n    'Oktober',\n    'November',\n    'Dezember',\n  ];\n\n  currenThread;\n\n\n  constructor(\n    public messageService: MessageService,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    public threadService: ThreadService,\n    public sharedService: SharedService,\n  ) {\n    this.currenThread = this.userService.subCurrentUserForThread(this.userService.currentUser.id);\n    this.userService.currentUserThread$.subscribe(thread_id => {\n      if (thread_id && thread_id != '') {\n        this.channelService.unsubCurrentThread = this.channelService.getCurrentThread(thread_id);\n        this.messageService.getMessagesFromThread(thread_id);\n        this.setFocus();\n      }\n    })\n    if (this.userService.currentUser && this.userService.currentUser.last_thread == '') {\n      this.closeThread();\n    }\n  }\n\n\n  ngOnDestroy() {\n    this.channelService.unsubCurrentThread();\n    this.messageService.unsubMessagesThread();\n    this.currenThread();\n  }\n\n\n  isNewDate(date: number) {\n    let currentDate = this.currentDate;\n    let messageDate = this.convertToDate(date);\n    this.currentDate = messageDate;\n    return currentDate != messageDate;\n  }\n\n\n  getDateFormat(dateInput: number) {\n    let d = new Date(dateInput);\n    let date = d.getDate();\n    let day: number | string = d.getDay();\n    let month: number | string = d.getMonth() + 1;\n    day = this.weekdays[day];\n    month = this.months[month];\n    let result = day + ',' + ' ' + date + ' ' + month;\n    return result;\n  }\n\n  convertToDate(dateAsNumber: number) {\n    let date = new Date(dateAsNumber);\n    let d: number | string = date.getDate();\n    let m: number | string = date.getMonth() + 1;\n    let y: number | string = date.getFullYear();\n    if (d  member != this.currentUser.id);\n    if (contact) return this.userService.getUser(contact);\n    else return this.currentUser;\n  }\n\n\n  closeThread() {\n    this.userService.saveLastThread(this.userService.currentUser.id, '');\n    this.threadService.closeThread();\n  }\n\n\n  setFocus() {\n    document.getElementById('threadInput')?.focus();\n    this.messageInput = '';\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n          Thread\n          \n            \n            \n            \n            \n            \n            \n          \n          {{ channelService.currentThread.name }}  \n      \n      \n          \n              \n              \n              \n              \n              \n              \n           \n      \n     \n  \n    \n    \n      \n        \n        @for(message of messageService.messagesThread; track message.id; let i = $index) {\n  \n          \n          \n          \n          @if(i == 0 && message.total_replies && message.total_replies > 0) {\n            \n              {{ message.total_replies }} Antworten\n              \n            \n          }\n        }\n    \n       \n    \n  \n  \n    \n    \n      \n    \n  \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Thread                                                                                                      {{ channelService.currentThread.name }}                                                                                                                                                                  @for(message of messageService.messagesThread; track message.id; let i = $index) {                                          @if(i == 0 && message.total_replies && message.total_replies > 0) {                          {{ message.total_replies }} Antworten                                    }        }                                           '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThreadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThreadService.html":{"url":"injectables/ThreadService.html","title":"injectable - ThreadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThreadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thread.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                threadOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeThread\n                            \n                            \n                                openThread\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thread.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeThread\n                        \n                    \n                \n            \n            \n                \ncloseThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/thread.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openThread\n                        \n                    \n                \n            \n            \n                \nopenThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/thread.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        threadOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/thread.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThreadService {\n\n  threadOpen : boolean = false;\n\n  constructor() { }\n\n  \n  openThread() {\n    this.threadOpen = true;\n  }\n\n\n  closeThread() {\n    this.threadOpen = false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                is_typing\n                            \n                            \n                                    Optional\n                                last_channel\n                            \n                            \n                                    Optional\n                                last_thread\n                            \n                            \n                                logged_in\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                profile_img\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/user.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_typing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        last_channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        last_thread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logged_in\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile_img\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toJSON\n                        \n                    \n                \n            \n            \n                \n                        \n                    toJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/models/user.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { id: string; name: string; email: string; password: string; logged_in: boolean; is_typing: boolean; profile_img: string; last_channel: string; last_thread: string; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    id: string;\n    name: string;\n    email: string;\n    password: string;\n    logged_in: boolean;\n    is_typing: boolean;\n    profile_img: string;\n    last_channel?: string;\n    last_thread?: string;\n\n    constructor(obj?: any){\n        this.id = obj ? obj.id : '';\n        this.name = obj ?obj.name : '';\n        this.email = obj ? obj.email : '';\n        this.password = '';\n        this.logged_in = obj ? obj.logged_in : '';\n        this.is_typing = obj ? obj.is_typing : '';\n        this.profile_img = obj ? obj.profile_img : '';\n        this.last_channel = obj ? obj.last_channel : '';\n        this.last_thread = obj ? obj.last_thread : '';\n    }\n\n    public toJSON() {\n        return {\n            id: this.id,\n            name: this.name,\n            email: this.email,\n            password: 'Hackerman',\n            logged_in: this.logged_in,\n            is_typing: this.is_typing,\n            profile_img: this.profile_img,\n            last_channel: this.last_channel,\n            last_thread: this.last_thread\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAuthService.html":{"url":"injectables/UserAuthService.html","title":"injectable - UserAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/firebase.service/user.auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                displayName\n                            \n                            \n                                firestore\n                            \n                            \n                                googleEmail\n                            \n                            \n                                googleName\n                            \n                            \n                                googleProfileImg\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeCurrentUser\n                            \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                checkAuth\n                            \n                            \n                                checkAuthLoggedInAsGuest\n                            \n                            \n                                    Async\n                                checkEmailExistence\n                            \n                            \n                                    Async\n                                currentUser\n                            \n                            \n                                emailExists\n                            \n                            \n                                guestLogin\n                            \n                            \n                                    Async\n                                handleActionCode\n                            \n                            \n                                    Async\n                                loginUser\n                            \n                            \n                                    Async\n                                loginWithGoogle\n                            \n                            \n                                logout\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                saveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/firebase.service/user.auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeCurrentUser(name?: any, email?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(newPassword: string, oobCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                oobCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkAuth\n                        \n                    \n                \n            \n            \n                \ncheckAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkAuthLoggedInAsGuest\n                        \n                    \n                \n            \n            \n                \ncheckAuthLoggedInAsGuest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:133\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkEmailExistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkEmailExistence(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        currentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    currentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailExists\n                        \n                    \n                \n            \n            \n                \nemailExists(email: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guestLogin\n                        \n                    \n                \n            \n            \n                \nguestLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleActionCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleActionCode(oobCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oobCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loginUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    loginUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loginWithGoogle\n                        \n                    \n                \n            \n            \n                \n                        \n                    loginWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveUser(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/user.auth.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/user.auth.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/user.auth.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/user.auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/user.auth.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleProfileImg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/user.auth.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/user.auth.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Auth, GoogleAuthProvider, applyActionCode, checkActionCode, confirmPasswordReset, getAuth, sendPasswordResetEmail, signInWithPopup, updateEmail, verifyPasswordResetCode,} from '@angular/fire/auth';\nimport { Firestore } from '@angular/fire/firestore';\nimport { createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword, fetchSignInMethodsForEmail, signInAnonymously, signOut, onAuthStateChanged, verifyBeforeUpdateEmail,} from 'firebase/auth';\nimport { UserService } from './user.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAuthService {\n  firestore: Firestore = inject(Firestore);\n  displayName: string = '';\n  googleName: any = '';\n  googleEmail: any = '';\n  googleProfileImg: any = '';\n\n  constructor(public auth: Auth, public userService: UserService, private router: Router) { }\n\n\n  //#region Sign In\n  async loginUser(email: string, password: string) {\n    return signInWithEmailAndPassword(this.auth, email, password);\n  }\n\n\n  guestLogin() {\n    return signInAnonymously(this.auth);\n  }\n\n\n  emailExists(email: any) {\n    return fetchSignInMethodsForEmail(this.auth, email);\n  }\n\n\n  async changeCurrentUser(name?: any, email?: any) {\n    const user = this.auth.currentUser;\n    if (email) {\n      await verifyBeforeUpdateEmail(user!, email);\n      await this.userService.updateUserEmail(this.userService.currentUser.id, email);\n      this.logout();\n    }\n    if (name) {\n      await updateProfile(user!, { displayName: name });\n      await this.userService.updateUserName(this.userService.currentUser.id, name);\n      this.router.navigate(['/main-page']);\n    }\n  }\n\n\n  async handleActionCode(oobCode: string) {\n    const auth = getAuth();\n    await applyActionCode(auth, oobCode);\n    const info = await checkActionCode(auth, oobCode);\n    const newEmail = info.data.email;\n    const user = auth.currentUser;\n    if (user) {\n      await updateEmail(user, newEmail!);\n    }\n  }\n\n\n  async currentUser() {\n    return this.auth.currentUser;\n  }\n\n\n  logout() {\n    return signOut(this.auth);\n  }\n\n\n  async loginWithGoogle() {\n    const provider = new GoogleAuthProvider();\n    return signInWithPopup(this.auth, provider)\n      .then((result) => {\n        var user = result.user;\n        this.googleName = user.displayName;\n        this.googleEmail = user.email;\n        this.googleProfileImg = user.photoURL;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n\n  async saveUser(name: string): Promise {\n    const user_auth: any = this.auth.currentUser;\n    if (user_auth) {\n        await updateProfile(user_auth, { displayName: name });\n        this.displayName = user_auth.displayName;\n    }\n  }\n\n\n  async resetPassword(email: string): Promise {\n      await sendPasswordResetEmail(this.auth, email);\n  }\n\n\n  async changePassword(newPassword: string, oobCode: string) {\n      const auth = getAuth();\n      const email = await verifyPasswordResetCode(auth, oobCode);\n      await confirmPasswordReset(auth, oobCode, newPassword);\n  }\n\n\n  async registerUser(email: string, password: string) {\n    return createUserWithEmailAndPassword(this.auth, email, password);\n  }\n\n\n  async checkEmailExistence(email: string) {\n    return fetchSignInMethodsForEmail(this.auth, email);\n  }\n\n\n  checkAuth() {\n    return new Promise(async (resolve, reject) => {\n      onAuthStateChanged(this.auth, (user) => {\n        if (user) {\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n\n  checkAuthLoggedInAsGuest() {\n    return new Promise((resolve, reject) => {\n      onAuthStateChanged(this.auth, (user) => {\n        if (user) {\n          const isAnonymous = user.isAnonymous;\n          resolve(isAnonymous);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserCreatedSnackbarComponent.html":{"url":"components/UserCreatedSnackbarComponent.html","title":"component - UserCreatedSnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserCreatedSnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/popups/user-created-snackbar/user-created-snackbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-created-snackbar\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./user-created-snackbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-created-snackbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                snackBarRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        snackBarRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBarRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/popups/user-created-snackbar/user-created-snackbar.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSnackBarRef } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-created-snackbar',\n  standalone: true,\n  imports: [],\n  templateUrl: './user-created-snackbar.component.html',\n  styleUrl: './user-created-snackbar.component.scss'\n})\nexport class UserCreatedSnackbarComponent {\n  snackBarRef = inject(MatSnackBarRef);\n}\n\n    \n\n    \n        \n    Konto erfolgreich erstellt!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Konto erfolgreich erstellt!'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserCreatedSnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserManagementService.html":{"url":"injectables/UserManagementService.html","title":"injectable - UserManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterUsers\n                            \n                            \n                                getAllUserIds\n                            \n                            \n                                getCurrentChannelId\n                            \n                            \n                                getMemberIds\n                            \n                            \n                                removeSelectedUser\n                            \n                            \n                                selectUser\n                            \n                            \n                                updateMembers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, channelService: ChannelFirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user-management.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterUsers\n                        \n                    \n                \n            \n            \n                \nfilterUsers(searchInput: string, selectedUsers: User[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchInput\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                selectedUsers\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUserIds\n                        \n                    \n                \n            \n            \n                \ngetAllUserIds()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentChannelId\n                        \n                    \n                \n            \n            \n                \ngetCurrentChannelId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMemberIds\n                        \n                    \n                \n            \n            \n                \ngetMemberIds(selectedUsers: User[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedUsers\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelectedUser\n                        \n                    \n                \n            \n            \n                \nremoveSelectedUser(selectedUsers: User[], user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedUsers\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUser\n                        \n                    \n                \n            \n            \n                \nselectUser(selectedUsers: User[], user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedUsers\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMembers\n                        \n                    \n                \n            \n            \n                \nupdateMembers(channelId: string, memberIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                memberIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../interfaces/user.interface';\nimport { UserService } from '../firebase.service/user.service';\nimport { ChannelFirebaseService } from '../firebase.service/channelFirebase.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserManagementService {\n\n  constructor(\n    private userService: UserService,\n    private channelService: ChannelFirebaseService\n  ) {}\n\n\n  filterUsers(searchInput: string, selectedUsers: User[]): User[] {\n    const searchTerm = searchInput ? searchInput.trim().toLowerCase() : '';\n    return this.userService.allUsers.filter((user) => {\n      const isPartOfNameMatched = user.name\n        .split(' ')\n        .some((part: string) => part.toLowerCase().startsWith(searchTerm));\n      const isNotSelected = !selectedUsers.some(selected => selected.id === user.id);\n      const isNotCreator = this.channelService.currentChannel.creator !== user.id;\n      return isPartOfNameMatched && isNotSelected && isNotCreator;\n    });\n  }\n  \n\n  selectUser(selectedUsers: User[], user: User): User[] {\n    if (!selectedUsers.find((u) => u.id === user.id)) {\n      selectedUsers.push(user);\n    }\n    return selectedUsers;\n  }\n\n\n  removeSelectedUser(selectedUsers: User[], user: User): User[] {\n    return selectedUsers.filter((u) => u.id !== user.id);\n  }\n\n\n  getCurrentChannelId(): string | undefined {\n    return this.channelService.currentChannel.id;\n  }\n\n\n  updateMembers(channelId: string, memberIds: string[]): Promise {\n    return this.channelService.updateChannelMembers(channelId, memberIds);\n  }\n\n\n  getMemberIds(selectedUsers: User[]): string[] {\n    return selectedUsers.map(user => user.id).filter((id): id is string => id !== undefined);\n  }\n\n\n  getAllUserIds(): string[] {\n    return this.userService.allUsers.map(user => user.id).filter((id): id is string => id !== undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilityService.html":{"url":"injectables/UtilityService.html","title":"injectable - UtilityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/utility.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                months\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToDate\n                            \n                            \n                                getChannelCreationTime\n                            \n                            \n                                getMessageCreationTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelFirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/utility.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToDate\n                        \n                    \n                \n            \n            \n                \nconvertToDate(dateAsNumber: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/utility.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dateAsNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChannelCreationTime\n                        \n                    \n                \n            \n            \n                \ngetChannelCreationTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/utility.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessageCreationTime\n                        \n                    \n                \n            \n            \n                \ngetMessageCreationTime(message: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/utility.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        months\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Januar',\n    'Februar',\n    'März',\n    'April',\n    'Mai',\n    'Juni',\n    'Juli',\n    'August',\n    'September',\n    'Oktober',\n    'November',\n    'Dezember',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/services/utility.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ChannelFirebaseService } from '../firebase.service/channelFirebase.service';\nimport { Message } from '../interfaces/message.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilityService {\n  months = [\n    'Januar',\n    'Februar',\n    'März',\n    'April',\n    'Mai',\n    'Juni',\n    'Juli',\n    'August',\n    'September',\n    'Oktober',\n    'November',\n    'Dezember',\n  ];\n  constructor(private channelService: ChannelFirebaseService) { }\n\n\n  convertToDate(dateAsNumber: number) {\n    let date = new Date(dateAsNumber);\n    let d: number | string = date.getDate();\n    let m: number | string = date.getMonth() + 1;\n    let y: number | string = date.getFullYear();\n    if (d \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/firebase.service/channelFirebase.service.ts\n            \n            injectable\n            ChannelFirebaseService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/firebase.service/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/firebase.service/reaction.service.ts\n            \n            injectable\n            ReactionService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/firebase.service/user.auth.service.ts\n            \n            injectable\n            UserAuthService\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/firebase.service/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/interfaces/channel.interface.ts\n            \n            interface\n            Channel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/message.interface.ts\n            \n            interface\n            Message\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/reaction.interface.ts\n            \n            interface\n            Reaction\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/login-page/avatar/avatar.component.ts\n            \n            component\n            AvatarComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/login-page/check-email/check-email.component.ts\n            \n            component\n            CheckEmailComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/login-page/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/login-page/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/login-page/sign-in/sign-in.component.ts\n            \n            component\n            SignInComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/channel.component.ts\n            \n            component\n            ChannelComponent\n            \n                0 %\n                (0/51)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts\n            \n            component\n            DialogAddMemberMobileComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts\n            \n            component\n            DialogAddMemberComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts\n            \n            component\n            DialogEditChannelComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/dialog-emoji-picker/dialog-emoji-picker.component.ts\n            \n            component\n            DialogEmojiPickerComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts\n            \n            component\n            DialogShowMembersComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/message/message.component.ts\n            \n            component\n            MessageComponent\n            \n                0 %\n                (0/54)\n            \n        \n        \n            \n                \n                src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts\n            \n            component\n            LogOutDialogComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/main-page/main-header/main-header.component.ts\n            \n            component\n            MainHeaderComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/main-page/main-header/search-bar/search-bar.component.ts\n            \n            component\n            SearchBarComponent\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts\n            \n            component\n            AddChannelCardComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts\n            \n            component\n            AddMemberCardComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts\n            \n            component\n            MainMenuChannelsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts\n            \n            component\n            MainMenuDmComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/main-page/main-menu/main-menu-header/main-menu-header.component.ts\n            \n            component\n            MainMenuHeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/main-page/main-menu/main-menu.component.ts\n            \n            component\n            MainMenuComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/main-page/main-page.component.ts\n            \n            component\n            MainPageComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/main-page/message-input/message-input.component.ts\n            \n            component\n            MessageInputComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/main-page/thread/thread.component.ts\n            \n            component\n            ThreadComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/popups/email-snackbar/email-snackbar.component.ts\n            \n            component\n            EmailSnackbarComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/popups/login-snackbar/login-snackbar.component.ts\n            \n            component\n            LoginSnackbarComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/popups/user-created-snackbar/user-created-snackbar.component.ts\n            \n            component\n            UserCreatedSnackbarComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/custom-dialog.service.ts\n            \n            injectable\n            CustomDialogService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/custom-dialog.service.ts\n            \n            interface\n            DialogParams\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/search.service.ts\n            \n            injectable\n            SearchService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/shared.service.ts\n            \n            injectable\n            SharedService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/state-management.service.ts\n            \n            injectable\n            StateManagementService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/thread.service.ts\n            \n            injectable\n            ThreadService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/user-management.service.ts\n            \n            injectable\n            UserManagementService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/utility.service.ts\n            \n            injectable\n            UtilityService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts\n            \n            component\n            DialogEditProfileComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/shared/dialog-show-profile/dialog-show-profile.component.ts\n            \n            component\n            DialogShowProfileComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/shared/directives/open-profile.directive.ts\n            \n            directive\n            OpenProfileDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/imprint/imprint.component.ts\n            \n            component\n            ImprintComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/privacy-policy/privacy-policy.component.ts\n            \n            component\n            PrivacyPolicyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/search-results/search-results.component.ts\n            \n            component\n            SearchResultsComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.2.0\n        \n            @angular/cdk : ^17.3.4\n        \n            @angular/common : ^17.2.0\n        \n            @angular/compiler : ^17.2.0\n        \n            @angular/core : ^17.2.0\n        \n            @angular/fire : ^17.0.1\n        \n            @angular/forms : ^17.2.0\n        \n            @angular/material : ^17.3.4\n        \n            @angular/platform-browser : ^17.2.0\n        \n            @angular/platform-browser-dynamic : ^17.2.0\n        \n            @angular/platform-server : ^17.2.0\n        \n            @angular/router : ^17.2.0\n        \n            @angular/ssr : ^17.2.2\n        \n            @ctrl/ngx-emoji-mart : ^9.2.0\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChannelTypeEnum   (src/.../channel-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/enums/channel-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ChannelTypeEnum\n                    \n                \n                        \n                            \n                                 main\n                            \n                        \n                        \n                            \n                                Value : main\n                            \n                        \n                        \n                            \n                                 direct\n                            \n                        \n                        \n                            \n                                Value : direct\n                            \n                        \n                        \n                            \n                                 thread\n                            \n                        \n                        \n                            \n                                Value : thread\n                            \n                        \n                        \n                            \n                                 new\n                            \n                        \n                        \n                            \n                                Value : new\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDABubble\nThis project was generated with Angular CLI version 17.2.2.\nThis is a 3-man project for educational purpose only. The project is a webbrowser slack clone with firebase backend. \nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    35 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideClientHydration(),\n    provideAnimationsAsync(),\n    importProvidersFrom(\n      provideFirebaseApp(() =>\n        initializeApp(environment.firebase)\n      )\n    ),\n    importProvidersFrom(provideAuth(() => getAuth())),\n    importProvidersFrom(provideFirestore(() => getFirestore())),\n    importProvidersFrom(provideStorage(() => getStorage())),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

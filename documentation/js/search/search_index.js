var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AddChannelCardComponent.html",[0,0.106,1,0.579]],["body/components/AddChannelCardComponent.html",[0,0.167,1,0.861,2,0.655,3,0.117,4,0.117,5,0.466,6,0.49,7,0.49,8,0.102,9,2.496,10,3.359,11,3.55,12,1.175,13,5.457,14,1.025,15,5.028,16,2.224,17,0.421,18,1.202,19,1.325,20,1.131,21,3.672,22,0.655,23,0.702,24,0.724,25,3.061,26,5.066,27,5.066,28,5.066,29,5.066,30,5.066,31,2.542,32,2.167,33,1.192,34,0.724,35,3.672,36,0.724,37,3.672,38,0.074,39,0.24,40,1.52,41,1.837,42,2.948,43,1.088,44,2.394,45,5.97,46,1.94,47,1.482,48,0.337,49,2.167,50,4.259,51,3.285,52,0.363,53,1.369,54,2.554,55,4.605,56,1.607,57,0.433,58,2.883,59,0.431,60,0.018,61,0.427,62,0.315,63,0.437,64,4.259,65,2.673,66,2.485,67,2.281,68,0.337,69,2.265,70,3.672,71,2.883,72,0.471,73,0.443,74,0.443,75,1.651,76,2.574,77,1.918,78,4.259,79,2.574,80,3.381,81,2.409,82,2.574,83,2.574,84,3.672,85,2.883,86,2.883,87,2.883,88,2.883,89,2.883,90,1.311,91,2.883,92,2.883,93,2.485,94,0.41,95,1.631,96,2.485,97,0.163,98,1.742,99,2.883,100,2.883,101,2.883,102,1.233,103,0.887,104,1.298,105,1.447,106,1.631,107,1.533,108,1.118,109,0.679,110,1.631,111,1.533,112,0.779,113,0.905,114,2.485,115,0.649,116,0.71,117,0.117,118,0.117,119,0.993,120,4.259,121,2.883,122,1.872,123,2.883,124,2.883,125,2.023,126,1.233,127,2.883,128,2.883,129,1.533,130,1.118,131,1.447,132,2.883,133,2.224,134,1.447,135,1.742,136,1.631,137,1.447,138,1.447,139,2.485,140,3.936,141,2.766,142,4.259,143,3.672,144,4.259,145,4.259,146,4.259,147,4.259,148,4.259,149,3.936,150,4.259,151,4.259,152,4.259,153,4.259,154,4.259,155,3.285,156,4.259,157,2.996,158,4.259,159,4.824,160,2.996,161,2.996,162,2.996,163,3.672,164,3.672,165,4.259,166,3.672,167,0.49,168,0.724,169,0.655,170,0.379,171,0.951,172,0.49,173,0.724,174,0.443,175,0.49,176,0.443,177,0.49,178,0.466,179,0.724,180,0.443,181,0.466,182,0.49,183,0.443,184,0.49,185,0.443,186,0.49,187,0.443,188,0.819,189,0.443,190,0.724,191,0.443,192,0.443,193,0.49,194,0.443,195,0.655,196,0.49,197,0.421,198,0.466,199,0.724,200,0.443,201,0.443,202,0.724,203,0.443,204,0.861,205,0.443,206,0.49,207,0.443,208,0.49,209,0.443,210,0.724,211,0.724,212,0.443,213,0.443,214,0.49,215,0.443,216,0.49,217,0.443,218,0.961,219,0.443,220,0.49,221,0.443,222,0.49,223,0.443,224,0.49,225,0.443,226,0.443,227,0.466,228,0.466,229,0.338,230,0.49,231,0.443,232,0.49,233,0.49,234,0.466,235,0.49,236,0.49,237,0.421,238,0.466,239,0.49,240,0.443,241,0.49,242,0.49,243,0.466,244,0.724,245,0.49,246,0.443,247,0.49,248,0.443,249,0.466,250,0.49,251,0.443,252,0.49,253,0.443,254,0.338,255,0.466,256,0.49,257,0.421,258,0.421,259,0.49,260,0.421,261,0.466,262,0.49,263,0.009,264,0.009]],["title/components/AddMemberCardComponent.html",[0,0.106,112,0.579]],["body/components/AddMemberCardComponent.html",[0,0.134,1,0.404,2,0.611,3,0.106,4,0.106,5,0.425,6,0.447,7,0.447,8,0.093,9,2.59,10,3.486,11,3.684,12,1.204,13,5.662,14,0.345,15,5.164,16,2.028,17,0.384,18,1.194,19,1.316,20,1.09,21,3.428,22,0.611,23,0.665,24,0.676,31,2.406,32,2.051,33,1.129,34,0.676,35,3.428,36,0.676,37,3.428,38,0.067,39,0.224,40,1.499,41,1.767,43,0.964,44,2.286,46,1.896,47,1.448,48,0.315,52,0.338,53,1.248,54,2.456,56,1.545,57,0.452,59,0.455,60,0.018,61,0.388,62,0.327,63,0.392,66,2.267,68,0.478,72,0.745,73,0.597,74,0.597,90,1.224,93,2.267,94,0.391,97,0.148,102,1.125,103,0.809,108,1.019,109,0.619,112,0.822,113,1.261,115,0.592,116,0.647,117,0.106,118,0.106,119,0.515,125,2.277,129,1.398,130,1.019,131,1.319,140,2.797,167,0.447,168,0.676,169,0.611,170,0.345,171,0.908,172,0.447,173,0.676,174,0.404,175,0.447,176,0.404,177,0.447,178,0.425,179,0.676,180,0.404,181,0.425,182,0.447,183,0.404,184,0.447,185,0.404,186,0.447,187,0.404,188,0.775,189,0.404,190,0.676,191,0.404,192,0.404,193,0.447,194,0.404,195,0.611,196,0.447,197,0.384,198,0.425,199,0.676,200,0.404,201,0.404,202,0.676,203,0.404,204,0.815,205,0.404,206,0.447,207,0.404,208,0.447,209,0.404,210,0.676,211,0.676,212,0.404,213,0.404,214,0.447,215,0.404,216,0.447,217,0.404,218,0.929,219,0.404,220,0.447,221,0.404,222,0.447,223,0.404,224,0.447,225,0.404,226,0.404,227,0.425,228,0.425,229,0.308,230,0.447,231,0.404,232,0.447,233,0.447,234,0.425,235,0.447,236,0.447,237,0.384,238,0.425,239,0.447,240,0.404,241,0.447,242,0.447,243,0.425,244,0.676,245,0.447,246,0.404,247,0.447,248,0.404,249,0.425,250,0.447,251,0.404,252,0.447,253,0.404,254,0.845,255,0.425,256,0.447,257,0.384,258,0.781,259,0.447,260,0.384,261,0.425,262,0.447,263,0.009,264,0.009,265,3.428,266,3.976,267,4.794,268,3.976,269,3.976,270,4.794,271,3.727,272,3.373,273,5.74,274,4.038,275,3.199,276,5.74,277,4.071,278,5.345,279,4.123,280,3.067,281,3.067,282,4.123,283,2.797,284,3.976,285,2.629,286,2.629,287,3.067,288,3.067,289,2.629,290,3.976,291,0.757,292,2.629,293,4.038,294,2.629,295,2.629,296,2.629,297,2.629,298,2.629,299,2.629,300,2.629,301,2.629,302,1.07,303,2.629,304,2.629,305,2.629,306,1.248,307,2.028,308,1.707,309,1.85,310,1.707,311,1.487,312,2.629,313,1.85,314,2.028,315,3.698,316,2.629,317,2.028,318,2.028,319,3.067,320,2.028,321,2.629,322,2.629,323,2.028,324,2.629,325,2.028,326,2.028,327,2.629,328,1.589,329,4.123,330,3.648,331,3.976,332,3.067,333,3.976,334,3.976,335,3.976,336,2.286,337,3.23,338,2.682,339,2.843,340,4.98,341,2.538,342,2.797]],["title/components/AppComponent.html",[0,0.106,174,0.579]],["body/components/AppComponent.html",[0,0.155,1,0.518,2,0.734,3,0.137,4,0.137,5,0.545,6,0.573,7,0.573,8,0.119,12,0.895,14,0.443,17,0.492,18,1.213,19,1.338,20,0.973,22,0.734,23,0.661,24,0.81,34,0.81,36,0.81,38,0.086,39,0.269,40,1.446,41,1.955,43,1.043,46,1.856,47,1.535,48,0.377,52,0.287,56,1.709,57,0.458,59,0.406,60,0.018,61,0.393,62,0.316,63,0.349,68,0.522,72,0.749,73,0.35,74,0.35,90,1.038,94,0.39,97,0.19,103,1.038,109,0.793,112,0.518,113,0.771,116,0.83,117,0.137,118,0.137,129,2.537,130,1.849,137,1.692,167,0.573,168,0.81,169,0.734,170,0.443,171,1.023,172,0.573,173,0.81,174,0.926,175,0.573,176,0.518,177,0.573,178,0.545,179,0.81,180,0.518,181,0.545,182,0.573,183,0.518,184,0.573,185,0.518,186,0.573,187,0.518,188,0.895,189,0.518,190,0.81,191,0.518,192,0.518,193,0.573,194,0.518,195,0.734,196,0.573,197,0.492,198,0.545,199,0.81,200,0.734,201,0.518,202,0.81,203,0.518,204,0.941,205,0.518,206,0.573,207,0.518,208,0.573,209,0.926,210,0.941,211,0.81,212,0.518,213,0.518,214,0.573,215,0.518,216,0.573,217,0.518,218,1.014,219,0.518,220,0.573,221,0.518,222,0.573,223,0.518,224,0.573,225,0.518,226,0.518,227,0.545,228,0.545,229,0.395,230,0.573,231,0.518,232,0.573,233,0.573,234,0.545,235,0.573,236,0.573,237,0.492,238,0.545,239,0.573,240,0.518,241,0.573,242,0.573,243,0.545,244,0.81,245,0.573,246,0.518,247,0.573,248,0.518,249,0.545,250,0.573,251,0.518,252,0.573,253,0.518,254,0.395,255,0.545,256,0.573,257,0.492,258,0.492,259,0.573,260,0.492,261,0.545,262,0.573,263,0.011,264,0.011,291,0.395,343,2.906,344,1.764,345,5.535,346,4.77,347,4.77,348,5.535,349,5.535,350,3.378,351,2.253,352,6.018,353,4.234,354,6.018,355,2.449,356,6.018,357,4.77,358,3.355,359,4.77,360,1.601,361,3.894,362,4.234,363,2.86,364,4.77,365,2.6,366,3.475,367,3.371,368,4.77,369,3.371,370,3.371,371,3.371,372,3.371,373,3.371,374,4.77,375,2.189,376,4.77,377,3.371,378,3.371,379,2.882,380,3.371,381,3.371,382,3.371,383,2.189,384,2.944,385,2.037,386,2.906,387,2.372,388,2.372,389,1.793,390,1.692,391,1.793,392,1.601,393,0.758,394,3.371,395,4.77,396,2.906,397,4.77,398,3.371,399,3.371,400,4.77,401,5.535,402,2.882,403,1.363,404,3.371,405,3.371,406,3.371,407,3.371,408,2.906,409,1.692,410,2.6,411,3.371,412,3.371,413,2.372,414,3.371,415,2.372,416,2.6,417,2.6,418,3.371,419,2.906,420,2.372,421,2.372,422,2.372,423,1.793,424,2.372,425,2.372,426,2.372]],["title/components/AvatarComponent.html",[0,0.106,176,0.579]],["body/components/AvatarComponent.html",[0,0.146,1,0.465,2,0.678,3,0.122,4,0.122,5,0.489,6,0.514,7,0.514,8,0.156,12,0.842,14,0.397,17,0.442,18,1.205,19,1.329,20,0.926,22,0.678,23,0.793,24,0.749,33,1.226,34,0.749,36,0.749,38,0.077,39,0.249,43,1.009,46,1.788,47,1.411,48,0.349,49,2.227,52,0.257,57,0.463,59,0.443,60,0.018,61,0.393,62,0.318,63,0.381,68,0.551,72,0.77,73,0.633,74,0.633,90,1.357,94,0.37,97,0.17,109,0.711,112,0.465,113,0.713,115,0.68,116,0.744,117,0.122,118,0.122,119,1.122,126,1.293,137,1.517,163,3.802,167,0.514,168,0.749,169,0.88,170,0.397,171,0.973,172,0.514,173,0.749,174,0.465,175,0.514,176,0.88,177,0.514,178,0.489,179,0.749,180,0.465,181,0.489,182,0.514,183,0.465,184,0.514,185,0.465,186,0.514,187,0.465,188,0.842,189,0.465,190,0.749,191,0.465,192,0.465,193,0.514,194,0.465,195,0.678,196,0.514,197,0.442,198,0.489,199,0.749,200,0.465,201,0.465,202,0.749,203,0.465,204,0.885,205,0.465,206,0.514,207,0.465,208,0.514,209,0.465,210,0.749,211,0.749,212,0.465,213,0.465,214,0.514,215,0.465,216,0.514,217,0.465,218,0.977,219,0.465,220,0.514,221,0.465,222,0.514,223,0.465,224,0.514,225,0.465,226,0.465,227,0.489,228,0.489,229,0.355,230,0.514,231,0.465,232,0.514,233,0.514,234,0.489,235,0.514,236,0.514,237,0.442,238,0.489,239,0.514,240,0.465,241,0.514,242,0.514,243,0.489,244,0.749,245,0.514,246,0.465,247,0.514,248,0.465,249,0.489,250,0.514,251,0.465,252,0.514,253,0.678,254,0.817,255,0.842,256,0.514,257,0.442,258,0.442,259,0.514,260,0.442,261,0.489,262,0.514,263,0.01,264,0.01,291,0.714,302,1.187,339,1.608,351,2.119,353,4.027,355,2.33,360,1.435,361,3.663,362,4.027,366,1.517,384,1.608,388,2.127,389,1.608,390,1.517,392,1.435,393,1.172,409,2.213,413,2.127,415,3.103,420,2.127,421,3.663,422,2.127,424,2.127,425,2.127,426,2.127,427,4.251,428,2.606,429,5.724,430,4.41,431,4.41,432,4.489,433,3.663,434,4.489,435,4.489,436,5.207,437,5.207,438,3.802,439,5.724,440,5.724,441,4.415,442,4.415,443,5.724,444,4.415,445,3.802,446,3.663,447,3.717,448,4.41,449,3.023,450,2.213,451,3.023,452,3.023,453,3.023,454,3.023,455,3.023,456,3.023,457,3.023,458,3.023,459,3.023,460,3.802,461,3.023,462,3.802,463,6.157,464,3.802,465,3.802,466,3.802,467,3.802,468,3.802,469,3.802,470,3.023,471,3.023,472,3.023,473,4.41,474,3.023,475,3.023,476,1.631,477,3.023,478,3.023,479,3.023,480,2.332,481,2.606,482,3.023,483,3.023,484,2.606,485,3.023,486,4.41,487,3.023,488,2.332,489,2.606,490,3.802,491,2.606,492,6.086,493,3.023,494,3.802,495,3.023,496,2.606,497,2.127,498,1.963,499,3.023,500,3.023,501,3.023,502,2.332,503,3.023,504,3.023,505,3.023,506,2.332,507,2.332,508,3.023,509,2.332,510,2.332,511,1.827,512,2.332,513,2.332,514,3.023,515,2.332,516,4.41,517,4.41,518,4.41,519,4.41,520,2.665,521,4.41,522,4.41,523,3.802,524,4.41,525,4.41,526,3.802,527,3.802]],["title/interfaces/Channel.html",[14,0.495,528,1.789]],["body/interfaces/Channel.html",[3,0.223,4,0.223,8,0.195,14,0.862,38,0.14,39,0.37,60,0.018,61,0.45,62,0.351,75,2.82,76,4.395,77,3.275,79,4.395,81,4.114,82,4.395,83,4.395,94,0.31,105,3.65,106,3.109,107,2.923,117,0.223,263,0.015,264,0.015,291,0.931,450,3.523,528,2.61,529,3.569,530,4.738]],["title/injectables/ChannelFirebaseService.html",[56,1.014,531,0.774]],["body/injectables/ChannelFirebaseService.html",[3,0.104,4,0.104,8,0.091,14,1.006,38,0.066,39,0.22,48,0.309,49,3.259,52,0.403,56,1.052,57,0.467,59,0.601,60,0.018,61,0.453,62,0.339,63,0.517,68,0.576,69,3.411,72,0.523,73,0.622,74,0.622,75,2.547,76,3.435,77,2.56,79,3.435,81,3.52,82,3.435,83,3.618,94,0.32,97,0.145,104,1.158,105,1.291,106,1.455,107,1.368,117,0.104,118,0.104,119,1.417,125,3.119,126,2.743,141,3.887,218,0.396,263,0.009,264,0.009,283,1.809,291,0.911,336,2.561,344,0.951,351,2.151,403,1.767,433,1.809,434,2.217,476,1.446,531,0.803,532,0.997,533,2.217,534,3.718,535,4.73,536,3.618,537,4.73,538,4.73,539,4.73,540,3.91,541,3.91,542,3.91,543,5.285,544,3.91,545,5.285,546,5.285,547,3.91,548,3.91,549,3.91,550,3.432,551,2.751,552,3.91,553,3.91,554,3.91,555,3.91,556,3.91,557,3.91,558,3.91,559,3.91,560,2.572,561,3.91,562,4.73,563,2.572,564,3.91,565,2.572,566,2.572,567,3.91,568,2.572,569,3.435,570,2.572,571,2.572,572,3.91,573,2.572,574,1.554,575,3.91,576,2.572,577,1.809,578,3.91,579,5.285,580,2.572,581,3.91,582,2.572,583,3.91,584,2.572,585,3.91,586,2.572,587,3.91,588,2.572,589,1.984,590,3.91,591,2.572,592,3.91,593,2.572,594,3.435,595,3.91,596,2.572,597,3.91,598,5.285,599,2.572,600,2.676,601,2.572,602,2.572,603,4.078,604,2.572,605,3.91,606,2.572,607,2.363,608,2.572,609,2.572,610,4.901,611,2.572,612,1.291,613,1.984,614,1.809,615,1.984,616,1.67,617,1.984,618,2.217,619,2.572,620,3.016,621,2.217,622,1.455,623,2.572,624,2.572,625,0.997,626,3.91,627,2.572,628,2.572,629,4.73,630,2.572,631,2.572,632,2.572,633,3.016,634,1.809,635,5.285,636,3.91,637,2.572,638,2.572,639,2.572,640,1.67,641,2.572,642,2.572,643,2.572,644,4.378,645,3.91,646,2.572,647,4.73,648,2.572,649,3.91,650,2.572,651,2.572,652,1.809,653,2.572,654,1.984,655,2.217,656,2.572,657,2.572,658,1.984,659,2.572,660,2.572,661,2.572,662,2.572,663,1.984,664,1.984,665,3.91,666,4.385,667,1.984,668,1.984,669,1.984,670,1.984,671,2.572,672,2.572,673,2.572,674,1.984,675,5.285,676,2.572,677,2.572,678,5.285,679,3.016,680,2.572,681,2.572,682,2.572,683,2.572,684,2.572,685,2.572,686,2.217,687,2.572,688,1.809,689,2.572,690,2.572,691,2.572,692,2.572,693,2.572,694,4.73,695,2.572,696,2.572,697,2.572,698,2.572,699,2.572,700,2.572,701,2.572,702,2.572,703,4.73,704,2.572,705,2.572,706,2.572,707,2.572,708,2.572,709,2.572,710,2.572,711,2.572,712,2.572,713,2.572,714,2.572,715,2.572,716,2.572,717,2.572,718,2.572,719,1.984,720,2.217,721,2.572,722,3.91,723,2.572,724,2.572,725,2.572]],["title/components/CheckEmailComponent.html",[0,0.106,180,0.579]],["body/components/CheckEmailComponent.html",[0,0.157,1,0.532,2,0.748,3,0.14,4,0.14,5,0.56,6,0.588,7,0.588,8,0.123,12,0.908,14,0.455,17,0.506,18,1.215,19,1.34,20,0.985,22,0.748,23,0.674,24,0.826,32,2.402,33,1.322,34,0.826,36,0.826,38,0.088,39,0.274,43,1.051,46,1.872,48,0.385,52,0.295,57,0.423,59,0.295,60,0.018,61,0.377,62,0.222,63,0.254,68,0.482,72,0.673,73,0.505,74,0.505,90,1.728,94,0.399,97,0.195,108,1.342,112,0.532,113,0.786,115,0.779,116,0.852,117,0.14,118,0.14,119,0.679,137,1.737,149,4.284,155,4.697,162,3.419,167,0.588,168,0.826,169,0.937,170,0.455,171,1.035,172,0.588,173,0.826,174,0.532,175,0.588,176,0.532,177,0.588,178,0.56,179,0.826,180,0.937,181,1.105,182,0.588,183,0.532,184,0.588,185,0.532,186,0.588,187,0.532,188,0.908,189,0.532,190,0.826,191,0.532,192,0.532,193,0.588,194,0.532,195,0.748,196,0.588,197,0.506,198,0.56,199,0.826,200,0.748,201,0.864,202,0.826,203,0.532,204,0.954,205,0.532,206,0.588,207,0.532,208,0.588,209,0.532,210,0.826,211,0.826,212,0.532,213,0.532,214,0.588,215,0.532,216,0.588,217,0.532,218,1.023,219,0.532,220,0.588,221,0.532,222,0.588,223,0.532,224,0.588,225,0.532,226,0.532,227,0.56,228,0.56,229,0.406,230,0.588,231,0.532,232,0.588,233,0.588,234,0.56,235,0.588,236,0.588,237,0.506,238,0.56,239,0.588,240,0.532,241,0.588,242,0.588,243,0.56,244,0.826,245,0.588,246,0.532,247,0.588,248,0.532,249,0.56,250,0.588,251,0.532,252,0.588,253,0.532,254,0.406,255,0.56,256,0.588,257,0.506,258,0.506,259,0.588,260,0.506,261,0.56,262,0.588,263,0.011,264,0.011,291,0.57,350,2.987,353,4.284,360,1.644,361,3.951,362,3.951,363,2.742,384,1.841,386,2.985,387,2.436,388,2.436,389,1.841,390,1.737,391,1.841,392,1.644,393,1.094,409,1.737,415,2.436,419,2.985,420,2.436,421,3.419,422,2.436,424,2.436,425,2.436,426,2.436,427,3.943,441,4.697,444,4.697,506,2.67,507,2.67,509,2.67,510,2.67,511,2.092,512,2.67,513,2.67,515,2.67,726,5.377,727,6.01,728,2.985,729,4.19,730,4.86,731,4.86,732,3.647,733,5.616,734,5.25,735,4.86,736,3.462,737,3.462,738,3.462,739,3.462,740,3.462,741,3.462,742,3.462,743,3.462,744,2.985,745,2.985,746,3.462,747,3.462,748,2.985,749,4.284,750,4.19,751,4.19,752,4.19,753,4.213,754,4.213,755,3.954,756,3.749,757,3.419,758,3.749,759,3.749,760,4.19,761,6.09,762,4.86,763,4.86,764,4.19,765,4.86,766,4.19,767,4.86]],["title/injectables/CursorPositionService.html",[531,0.774,768,2.65]],["body/injectables/CursorPositionService.html",[3,0.164,4,0.164,8,0.143,38,0.103,39,0.305,48,0.428,52,0.518,57,0.458,59,0.606,60,0.018,61,0.441,62,0.335,63,0.521,65,3.266,68,0.563,72,0.597,73,0.42,74,0.42,94,0.228,97,0.228,117,0.164,118,0.164,119,1.436,134,2.713,263,0.012,264,0.012,291,0.634,336,2.982,344,1.495,403,1.716,450,3.572,511,4.212,531,1.11,532,1.568,600,3.058,625,1.568,768,3.803,769,6.434,770,3.486,771,6.089,772,6.089,773,5.405,774,5.405,775,5.405,776,5.405,777,5.405,778,5.405,779,5.405,780,5.405,781,5.405,782,4.043,783,5.405,784,6.688,785,4.043,786,5.405,787,4.043,788,3.954,789,5.405,790,4.043,791,5.405,792,4.043,793,5.405,794,7.4,795,7.118,796,7.635,797,4.043,798,5.405,799,6.089,800,4.043,801,4.043,802,6.971,803,4.043,804,5.405,805,4.043,806,4.043,807,4.043,808,4.043,809,4.043,810,4.043,811,3.486,812,4.043,813,4.043,814,4.043,815,4.043,816,3.486,817,4.043,818,4.043,819,4.043,820,6.089,821,6.089,822,4.043,823,4.043,824,3.486,825,5.405,826,4.043,827,4.043,828,4.043,829,4.043,830,4.043,831,4.043,832,4.043,833,4.043,834,4.043,835,4.043,836,4.043,837,4.043,838,4.043,839,4.043,840,4.043,841,4.043,842,4.043,843,5.405,844,5.405,845,5.405,846,4.043,847,4.043,848,4.043]],["title/injectables/CustomDialogService.html",[42,1.612,531,0.774]],["body/injectables/CustomDialogService.html",[0,0.139,3,0.144,4,0.144,8,0.126,38,0.091,39,0.279,40,1.413,42,2.117,43,1.096,44,2.436,48,0.391,52,0.302,54,2.77,55,4.994,57,0.447,59,0.586,60,0.018,61,0.426,62,0.326,63,0.504,65,3.12,67,2.773,68,0.544,72,0.629,73,0.514,74,0.369,94,0.321,97,0.2,102,1.52,117,0.144,118,0.144,119,0.696,134,3.721,135,4.683,136,4.266,137,3.83,138,1.783,263,0.011,264,0.011,291,0.846,302,0.956,328,2.99,344,1.313,403,1.754,423,3.991,502,4.392,528,1.687,531,1.016,532,1.377,600,3.793,625,1.377,788,3.999,849,5.626,850,2.74,851,4.948,852,4.948,853,4.948,854,4.75,855,4.948,856,4.948,857,4.948,858,3.552,859,4.948,860,4.266,861,3.552,862,6.601,863,4.266,864,3.552,865,4.332,866,4.266,867,3.552,868,5.309,869,3.552,870,4.266,871,5.582,872,3.552,873,3.552,874,4.006,875,3.552,876,4.266,877,5.931,878,3.552,879,3.552,880,3.063,881,2.307,882,3.063,883,3.063,884,4.994,885,3.063,886,3.063,887,3.063,888,4.266,889,3.063,890,3.063,891,3.063,892,3.063,893,3.063,894,3.063,895,4.266,896,5.309,897,3.063,898,3.063,899,4.266,900,5.582,901,4.266,902,5.931,903,3.063,904,3.063,905,2.74]],["title/components/DialogAddMemberComponent.html",[0,0.106,183,0.579]],["body/components/DialogAddMemberComponent.html",[0,0.142,1,0.445,2,0.657,3,0.117,4,0.117,5,0.468,6,0.492,7,0.492,8,0.102,9,2.583,12,0.821,14,0.736,17,0.423,18,1.202,19,1.325,20,1.264,22,0.657,23,0.592,24,0.726,31,2.548,32,2.172,33,1.195,34,0.726,36,0.726,38,0.074,39,0.241,40,1.454,41,1.84,43,1.1,44,2.398,47,1.483,48,0.338,52,0.364,53,1.374,54,2.558,56,1.609,57,0.45,59,0.432,60,0.018,61,0.387,62,0.323,63,0.372,68,0.473,72,0.763,73,0.622,74,0.622,94,0.382,95,2.872,97,0.163,102,1.238,103,0.891,104,1.303,108,1.122,109,0.681,112,0.445,113,0.907,115,0.651,117,0.117,118,0.117,119,0.838,125,2.028,131,1.453,167,0.492,168,0.726,169,0.657,170,0.38,171,0.953,172,0.492,173,0.726,174,0.445,175,0.492,176,0.445,177,0.492,178,0.468,179,0.726,180,0.445,181,0.468,182,0.492,183,0.862,184,0.492,185,0.445,186,0.492,187,0.445,188,0.821,189,0.445,190,0.726,191,0.445,192,0.445,193,0.492,194,0.445,195,0.657,196,0.492,197,0.423,198,0.468,199,0.726,200,0.445,201,0.445,202,0.726,203,0.445,204,0.863,205,0.445,206,0.492,207,0.445,208,0.492,209,0.445,210,0.726,211,0.726,212,0.445,213,0.445,214,0.492,215,0.445,216,0.492,217,0.445,218,0.962,219,0.445,220,0.492,221,0.445,222,0.492,223,0.445,224,0.492,225,0.445,226,0.445,227,0.468,228,0.468,229,0.339,230,0.492,231,0.445,232,0.492,233,0.492,234,0.468,235,0.492,236,0.492,237,0.423,238,0.468,239,0.492,240,0.445,241,0.492,242,0.492,243,0.468,244,0.726,245,0.492,246,0.445,247,0.492,248,0.445,249,0.468,250,0.492,251,0.445,252,0.492,253,0.445,254,0.868,255,0.468,256,0.492,257,0.423,258,0.423,259,0.492,260,0.423,261,0.468,262,0.492,263,0.009,264,0.009,271,3.883,272,3.572,274,3.572,277,4.169,279,4.324,280,3.295,281,3.295,282,4.324,287,3.295,288,3.295,291,0.501,293,3.005,306,1.374,307,2.232,308,1.879,313,3.005,314,2.232,315,4.324,317,2.232,318,2.232,319,3.295,320,2.232,323,2.232,325,2.232,326,2.232,329,3.295,330,3.388,336,2.398,337,3.388,338,2.813,339,3.442,340,5.124,341,2.662,342,3.005,355,2.282,520,1.749,534,3.572,732,1.879,906,4.424,907,5.15,908,2.495,909,2.774,910,4.272,911,4.272,912,5.155,913,2.894,914,2.894,915,2.894,916,2.894,917,2.894,918,2.894,919,2.894,920,3.572,921,2.894,922,2.894,923,2.894,924,2.894,925,2.894,926,2.894,927,2.894,928,2.894,929,2.495,930,2.495,931,3.683,932,2.495,933,3.916,934,2.495,935,2.495,936,2.495,937,2.495,938,2.495,939,2.495,940,2.495,941,2.495,942,3.683,943,3.683]],["title/components/DialogAddMemberMobileComponent.html",[0,0.106,185,0.579]],["body/components/DialogAddMemberMobileComponent.html",[0,0.161,1,0.402,2,0.609,3,0.106,4,0.106,5,0.423,6,0.444,7,0.444,8,0.093,9,2.588,12,0.773,14,0.7,17,0.382,18,1.194,19,1.315,20,1.265,22,0.609,23,0.549,24,0.673,31,2.397,32,2.044,33,1.124,34,0.673,36,0.673,38,0.067,39,0.223,40,1.467,41,1.762,42,2.877,43,1.089,44,2.279,47,1.446,48,0.313,52,0.337,53,1.241,54,2.449,56,1.541,57,0.451,59,0.454,60,0.018,61,0.387,62,0.323,63,0.39,65,2.044,67,2.399,68,0.495,72,0.783,73,0.595,74,0.595,94,0.395,97,0.147,102,1.118,103,0.804,104,1.177,108,1.013,109,0.615,110,1.478,111,1.39,112,0.402,113,1.26,115,0.588,117,0.106,118,0.106,119,0.937,125,1.879,131,1.311,133,2.016,134,1.311,138,1.311,167,0.444,168,0.673,169,0.609,170,0.343,171,0.905,172,0.444,173,0.673,174,0.402,175,0.444,176,0.402,177,0.444,178,0.423,179,0.673,180,0.402,181,0.423,182,0.444,183,0.609,184,0.444,185,0.82,186,0.444,187,0.402,188,0.773,189,0.402,190,0.673,191,0.402,192,0.402,193,0.444,194,0.402,195,0.82,196,0.444,197,0.698,198,0.423,199,0.673,200,0.402,201,0.402,202,0.673,203,0.402,204,0.812,205,0.402,206,0.444,207,0.402,208,0.444,209,0.402,210,0.673,211,0.673,212,0.402,213,0.402,214,0.444,215,0.402,216,0.444,217,0.402,218,0.927,219,0.402,220,0.444,221,0.402,222,0.444,223,0.402,224,0.444,225,0.402,226,0.402,227,0.423,228,0.423,229,0.306,230,0.444,231,0.402,232,0.444,233,0.444,234,0.423,235,0.444,236,0.444,237,0.382,238,0.423,239,0.444,240,0.402,241,0.444,242,0.444,243,0.423,244,0.673,245,0.444,246,0.402,247,0.444,248,0.402,249,0.423,250,0.444,251,0.402,252,0.444,253,0.402,254,0.855,255,0.423,256,0.444,257,0.382,258,0.382,259,0.444,260,0.382,261,0.423,262,0.444,263,0.009,264,0.009,271,3.718,272,3.361,274,3.361,277,4.064,279,4.11,280,3.053,281,3.053,282,4.11,287,3.053,288,3.053,291,0.671,293,2.784,306,1.241,307,2.016,308,1.697,313,3.361,314,2.016,315,4.11,317,2.016,318,2.016,319,3.053,320,2.016,323,2.016,325,2.016,326,2.016,329,3.053,330,3.22,336,2.279,337,3.22,338,2.674,339,3.328,340,4.971,341,2.53,342,2.784,351,1.064,355,2.169,393,0.588,423,1.39,520,1.579,534,3.361,732,1.697,905,3.053,906,4.432,907,1.838,912,4.936,920,3.361,929,2.253,930,2.253,931,3.412,932,2.253,933,3.685,934,2.253,935,2.253,936,2.253,937,2.253,938,2.253,939,2.253,940,2.253,941,2.253,942,3.412,943,3.412,944,5.657,945,2.253,946,3.958,947,3.958,948,3.412,949,5.328,950,3.781,951,2.613,952,2.613,953,2.613,954,2.613,955,2.613,956,2.613,957,3.958,958,2.613,959,2.613,960,2.613,961,2.613,962,2.613,963,2.613,964,2.613,965,2.613,966,2.613,967,2.613,968,2.613,969,2.613,970,2.016,971,2.253,972,2.016,973,1.697,974,2.016,975,2.613,976,2.613,977,2.016]],["title/components/DialogEditChannelComponent.html",[0,0.106,187,0.579]],["body/components/DialogEditChannelComponent.html",[0,0.156,1,0.379,2,0.582,3,0.1,4,0.1,5,0.399,6,0.419,7,0.419,8,0.087,9,2.634,12,0.745,14,0.87,17,0.36,18,1.189,19,1.31,20,0.952,22,0.582,23,0.639,24,0.643,31,2.313,32,1.972,33,1.085,34,0.643,36,0.643,38,0.063,39,0.213,40,1.451,41,1.717,42,2.834,43,1.076,44,2.212,46,1.726,47,1.424,48,0.3,49,2.776,51,2.92,52,0.322,53,1.171,54,2.386,56,1.502,57,0.46,59,0.392,60,0.018,61,0.392,62,0.323,63,0.338,65,1.972,67,1.705,68,0.533,69,3.132,70,3.264,72,0.699,73,0.537,74,0.537,80,1.49,90,1.997,94,0.385,95,2.607,97,0.139,102,1.055,103,0.759,108,0.956,109,0.58,110,1.395,111,1.311,112,0.379,113,0.836,115,0.555,116,0.607,117,0.1,118,0.1,119,0.742,122,1.601,126,1.62,129,1.311,130,0.956,131,1.9,133,1.902,134,1.237,135,1.49,136,1.395,137,1.237,138,1.237,160,2.663,161,2.663,166,3.264,167,0.419,168,0.643,169,0.582,170,0.324,171,0.879,172,0.419,173,0.643,174,0.379,175,0.419,176,0.379,177,0.419,178,0.399,179,0.643,180,0.379,181,0.399,182,0.419,183,0.379,184,0.419,185,0.709,186,0.419,187,0.795,188,1.269,189,0.379,190,0.643,191,0.379,192,0.379,193,0.419,194,0.379,195,0.582,196,0.419,197,0.36,198,0.399,199,0.643,200,0.379,201,0.379,202,0.643,203,0.379,204,0.783,205,0.379,206,0.419,207,0.379,208,0.419,209,0.379,210,0.643,211,0.643,212,0.379,213,0.379,214,0.419,215,0.379,216,0.419,217,0.379,218,0.906,219,0.379,220,0.419,221,0.379,222,0.419,223,0.379,224,0.419,225,0.379,226,0.379,227,0.399,228,0.399,229,0.289,230,0.419,231,0.379,232,0.419,233,0.419,234,0.399,235,0.419,236,0.419,237,0.36,238,0.399,239,0.419,240,0.379,241,0.419,242,0.419,243,0.399,244,0.643,245,0.419,246,0.379,247,0.419,248,0.379,249,0.399,250,0.419,251,0.379,252,0.419,253,0.379,254,0.541,255,0.399,256,0.419,257,0.36,258,0.36,259,0.419,260,0.36,261,0.399,262,0.419,263,0.008,264,0.008,291,0.79,302,1.703,330,2.288,332,3.988,337,2.288,338,1.9,339,2.014,341,2.188,351,1.003,355,2.104,375,1.601,393,0.852,403,1.273,551,3.637,640,1.601,644,1.734,906,4.51,909,2.458,920,1.734,944,1.902,978,6.434,979,2.126,980,4.609,981,3.786,982,3.786,983,4.609,984,3.973,985,5.579,986,5.579,987,3.747,988,3.242,989,4.609,990,4.609,991,5.17,992,5.17,993,5.17,994,5.17,995,3.786,996,5.17,997,5.17,998,5.17,999,4.609,1000,5.17,1001,3.786,1002,2.465,1003,2.465,1004,2.465,1005,2.465,1006,3.786,1007,2.465,1008,2.465,1009,2.465,1010,2.465,1011,2.465,1012,2.465,1013,2.465,1014,4.609,1015,3.786,1016,2.465,1017,2.465,1018,2.465,1019,2.465,1020,2.465,1021,2.465,1022,2.465,1023,2.465,1024,2.465,1025,2.465,1026,2.465,1027,2.126,1028,2.465,1029,2.465,1030,2.465,1031,2.465,1032,2.465,1033,1.734,1034,4.609,1035,4.609,1036,3.786,1037,3.786,1038,2.465,1039,1.902,1040,2.465,1041,2.126,1042,2.465,1043,2.465,1044,2.465,1045,2.465,1046,2.465,1047,3.786,1048,2.465,1049,2.465,1050,2.465,1051,2.465,1052,3.973,1053,2.465,1054,2.465,1055,2.465,1056,2.465,1057,2.465,1058,2.465,1059,2.465,1060,1.902,1061,2.126,1062,2.465,1063,2.465,1064,2.465,1065,2.465,1066,2.465,1067,5.17,1068,3.988,1069,4.458,1070,3.786,1071,3.786,1072,3.786,1073,3.264,1074,3.786,1075,3.786,1076,3.264,1077,3.786,1078,3.264,1079,3.786]],["title/components/DialogEditProfileComponent.html",[0,0.106,189,0.579]],["body/components/DialogEditProfileComponent.html",[0,0.134,1,0.401,2,0.608,3,0.106,4,0.106,5,0.422,6,0.443,7,0.443,8,0.14,12,0.772,14,0.342,17,0.381,18,1.193,19,1.315,20,0.861,22,0.608,23,0.834,24,0.671,31,2.394,32,2.041,33,1.123,34,0.671,36,0.671,38,0.066,39,0.223,40,1.422,43,1.078,44,2.277,46,1.892,47,1.445,48,0.313,49,3.054,52,0.336,53,1.238,54,2.447,57,0.458,59,0.487,60,0.018,61,0.434,62,0.323,63,0.419,68,0.532,72,0.588,73,0.626,74,0.669,90,1.982,94,0.363,95,2.698,97,0.147,102,1.115,108,1.532,109,0.614,112,0.401,113,0.639,115,0.587,116,0.642,117,0.106,118,0.106,119,1.121,126,2.575,129,1.387,130,1.011,131,1.983,160,2.779,161,2.779,167,0.443,168,0.671,169,0.608,170,0.342,171,0.904,172,0.443,173,0.671,174,0.401,175,0.443,176,0.401,177,0.443,178,0.422,179,0.671,180,0.401,181,0.422,182,0.443,183,0.401,184,0.443,185,0.401,186,0.443,187,0.401,188,1.268,189,0.819,190,0.671,191,0.401,192,0.401,193,0.443,194,0.401,195,0.608,196,0.443,197,0.381,198,0.422,199,0.671,200,0.401,201,1.014,202,0.671,203,0.401,204,0.811,205,0.401,206,0.443,207,0.401,208,0.443,209,0.401,210,0.671,211,0.671,212,0.401,213,0.401,214,0.443,215,0.401,216,0.443,217,0.401,218,0.926,219,0.401,220,0.443,221,0.401,222,0.443,223,0.401,224,0.443,225,0.401,226,0.401,227,0.422,228,0.422,229,0.306,230,0.443,231,0.401,232,0.443,233,0.443,234,0.422,235,0.443,236,0.443,237,0.381,238,0.772,239,0.443,240,0.401,241,0.443,242,0.443,243,0.422,244,0.671,245,0.443,246,0.401,247,0.443,248,0.401,249,0.422,250,0.443,251,0.401,252,0.443,253,0.401,254,0.463,255,0.422,256,0.443,257,0.381,258,0.381,259,0.443,260,0.381,261,0.422,262,0.443,263,0.009,264,0.009,291,0.624,302,1.733,350,3.042,355,2.166,363,2.575,366,1.308,391,1.387,403,1.31,432,4.112,435,4.112,438,5.39,445,3.406,450,2.394,460,3.406,463,5.97,464,3.406,465,3.406,466,3.406,467,3.406,468,3.406,469,3.406,476,2.225,489,2.248,490,3.406,491,2.248,494,3.406,496,2.248,498,1.693,523,3.406,526,3.406,688,1.834,753,2.387,754,2.387,755,2.565,909,2.565,973,4.827,1068,3.047,1069,3.406,1080,5.734,1081,2.011,1082,4.77,1083,3.406,1084,3.406,1085,4.77,1086,4.822,1087,4.77,1088,3.951,1089,3.951,1090,3.951,1091,5.322,1092,5.322,1093,5.322,1094,5.322,1095,5.322,1096,3.406,1097,3.951,1098,2.607,1099,3.951,1100,2.607,1101,4.588,1102,3.951,1103,2.607,1104,2.607,1105,2.607,1106,2.607,1107,2.248,1108,2.607,1109,2.607,1110,2.607,1111,2.607,1112,2.607,1113,2.248,1114,4.77,1115,4.931,1116,5.322,1117,3.406,1118,4.77,1119,3.951,1120,2.607,1121,2.248,1122,2.248,1123,3.406,1124,2.607,1125,2.607,1126,2.248,1127,2.607,1128,2.607,1129,2.607,1130,2.248,1131,2.607,1132,2.607,1133,4.77,1134,3.406,1135,2.607,1136,2.607,1137,2.607,1138,2.607,1139,4.77,1140,2.607,1141,5.719,1142,3.951,1143,2.607,1144,2.607,1145,2.607,1146,2.607,1147,3.951,1148,2.607,1149,2.607,1150,2.607,1151,2.607,1152,2.607,1153,3.406,1154,2.607,1155,3.406,1156,3.047,1157,3.951,1158,3.951]],["title/components/DialogEmojiPickerComponent.html",[0,0.106,191,0.579]],["body/components/DialogEmojiPickerComponent.html",[0,0.171,1,0.625,2,0.834,3,0.165,4,0.165,5,0.657,6,0.69,7,0.69,8,0.144,9,2.298,12,0.987,14,0.533,17,0.593,18,1.224,19,1.351,20,1.053,22,0.834,23,0.752,24,0.921,31,3.063,34,0.921,36,0.921,38,0.104,39,0.306,40,1.114,43,1.164,44,2.786,48,0.429,52,0.346,53,1.929,54,2.903,57,0.378,59,0.462,60,0.017,61,0.42,62,0.279,63,0.397,68,0.321,72,0.449,94,0.344,97,0.229,102,1.738,112,0.625,113,0.877,117,0.165,118,0.165,119,0.796,167,0.69,168,0.921,169,0.834,170,0.533,171,1.107,172,0.69,173,0.921,174,0.625,175,0.69,176,0.625,177,0.69,178,0.657,179,0.921,180,0.625,181,0.657,182,0.69,183,0.625,184,0.69,185,0.625,186,0.69,187,0.625,188,0.987,189,0.625,190,0.921,191,1.002,192,1.184,193,0.69,194,0.625,195,0.834,196,0.69,197,0.593,198,0.657,199,0.921,200,0.625,201,0.625,202,0.921,203,0.625,204,1.037,205,0.625,206,0.69,207,0.625,208,0.69,209,0.625,210,0.921,211,0.921,212,0.625,213,0.625,214,0.69,215,0.625,216,0.69,217,0.625,218,1.074,219,0.625,220,0.69,221,0.625,222,0.69,223,0.625,224,0.69,225,0.625,226,0.625,227,0.657,228,0.657,229,0.476,230,0.69,231,0.625,232,0.69,233,0.69,234,0.657,235,0.69,236,0.69,237,0.593,238,0.657,239,0.69,240,0.625,241,0.69,242,0.69,243,0.657,244,0.921,245,0.69,246,0.625,247,0.69,248,0.625,249,0.657,250,0.69,251,0.625,252,0.69,253,0.625,254,0.476,255,0.657,256,0.69,257,0.593,258,0.593,259,0.69,260,0.593,261,0.657,262,0.69,263,0.012,264,0.012,366,2.039,881,2.638,906,3.935,1159,5.615,1160,3.502,1161,5.422,1162,6.103,1163,5.422,1164,5.422,1165,5.422,1166,4.062,1167,5.422,1168,4.062,1169,4.062,1170,3.502,1171,3.502,1172,4.062,1173,4.062]],["title/interfaces/DialogParams.html",[528,1.789,874,2.65]],["body/interfaces/DialogParams.html",[0,0.186,3,0.173,4,0.173,8,0.151,38,0.109,39,0.316,40,0.876,42,1.824,43,1.088,44,1.824,54,2.675,55,4.319,60,0.018,62,0.323,63,0.486,65,3.167,67,3.105,72,0.471,73,0.443,94,0.352,97,0.24,102,1.824,117,0.173,118,0.173,119,0.836,134,3.778,135,4.644,136,4.286,137,3.715,138,3.332,263,0.012,264,0.012,291,0.733,328,3.384,344,1.577,403,1.822,423,3.937,502,4.823,528,2.025,529,2.769,531,1.15,625,1.654,788,3.636,849,3.289,850,3.289,854,3.289,860,3.677,862,6.441,863,3.677,866,3.677,868,4.828,870,3.677,871,5.944,874,3.94,876,3.677,877,6.309,880,3.677,881,2.769,882,3.677,883,3.677,884,5.318,885,3.677,886,3.677,887,3.677,888,4.828,889,3.677,890,3.677,891,3.677,892,3.677,893,3.677,894,3.677,895,4.828,896,5.724,897,3.677,898,3.677,899,4.828,900,5.944,901,4.828,902,6.218,903,3.677,904,3.677,905,3.289]],["title/components/DialogShowMembersComponent.html",[0,0.106,194,0.579]],["body/components/DialogShowMembersComponent.html",[0,0.169,1,0.518,2,0.733,3,0.136,4,0.136,5,0.544,6,0.572,7,0.572,8,0.119,9,2.484,12,0.895,14,0.79,17,0.492,18,1.213,19,1.338,20,1.066,22,0.733,23,0.66,24,0.81,31,2.775,32,2.366,33,1.302,34,0.81,36,0.81,38,0.162,39,0.269,40,1.497,41,1.953,42,3.053,43,1.138,44,2.573,47,1.535,48,0.377,51,4.639,52,0.406,53,1.598,54,2.715,56,1.708,57,0.428,59,0.286,60,0.018,61,0.372,62,0.301,63,0.247,67,1.516,68,0.377,72,0.611,73,0.35,74,0.35,81,2.695,94,0.402,97,0.19,102,1.44,103,1.036,104,1.516,108,1.305,109,0.792,110,1.904,111,1.79,112,0.518,113,0.973,115,0.757,117,0.136,118,0.136,119,0.66,131,2.391,138,1.689,139,2.902,167,0.572,168,0.81,169,0.733,170,0.442,171,1.022,172,0.572,173,0.81,174,0.518,175,0.572,176,0.518,177,0.572,178,0.544,179,0.81,180,0.518,181,0.544,182,0.572,183,0.851,184,0.572,185,0.518,186,0.572,187,0.518,188,0.895,189,0.518,190,0.81,191,0.518,192,0.518,193,0.572,194,0.925,195,1.189,196,0.572,197,0.492,198,0.544,199,0.81,200,0.518,201,0.518,202,0.81,203,0.518,204,0.94,205,0.518,206,0.572,207,0.518,208,0.572,209,0.518,210,0.81,211,0.81,212,0.518,213,0.518,214,0.572,215,0.518,216,0.572,217,0.518,218,1.014,219,0.518,220,0.572,221,0.518,222,0.572,223,0.518,224,0.572,225,0.518,226,0.518,227,0.544,228,0.544,229,0.395,230,0.572,231,0.518,232,0.572,233,0.572,234,0.544,235,0.572,236,0.572,237,0.492,238,0.544,239,0.572,240,0.518,241,0.572,242,0.572,243,0.544,244,0.81,245,0.572,246,0.518,247,0.572,248,0.518,249,0.544,250,0.572,251,0.518,252,0.572,253,0.518,254,0.395,255,0.544,256,0.572,257,0.492,258,0.879,259,0.572,260,0.492,261,0.544,262,0.572,263,0.011,264,0.011,309,2.368,310,2.186,330,2.879,332,4.639,338,2.391,423,1.79,534,3.891,906,4.254,907,2.368,920,3.352,948,5.185,971,2.902,1174,6.069,1175,2.902,1176,4.764,1177,4.764,1178,4.764,1179,3.366,1180,3.366,1181,3.366,1182,3.366,1183,3.366,1184,3.366,1185,3.366,1186,3.366,1187,2.368,1188,3.366,1189,4.764,1190,4.764,1191,4.764,1192,4.764,1193,6.59,1194,6.014,1195,3.352,1196,3.094]],["title/components/DialogShowProfileComponent.html",[0,0.106,197,0.55]],["body/components/DialogShowProfileComponent.html",[0,0.166,1,0.434,2,0.645,3,0.114,4,0.114,5,0.457,6,0.48,7,0.48,8,0.1,12,0.81,14,0.814,17,0.413,18,1.2,19,1.323,20,0.896,22,0.645,23,0.582,24,0.713,31,2.512,33,1.178,34,0.713,36,0.713,38,0.072,39,0.237,40,1.447,41,1.822,42,2.747,43,1.095,44,2.37,46,1.807,47,1.475,48,0.332,49,2.653,52,0.357,53,1.341,54,2.532,56,1.593,57,0.441,59,0.472,60,0.018,61,0.417,62,0.313,63,0.406,65,2.141,67,1.272,68,0.491,69,2.232,72,0.654,73,0.436,74,0.436,75,1.627,76,2.535,77,1.889,79,2.535,80,2.535,81,2.373,82,2.535,83,2.535,94,0.401,95,2.831,97,0.159,102,1.208,103,0.869,104,1.272,105,1.418,106,1.598,107,1.502,109,0.665,110,1.598,111,1.502,112,0.434,113,0.679,115,0.636,116,0.695,117,0.114,118,0.114,119,0.823,126,1.795,130,1.627,131,2.106,134,1.418,135,1.707,136,1.598,138,1.418,167,0.48,168,0.713,169,0.645,170,0.371,171,0.941,172,0.48,173,0.713,174,0.434,175,0.48,176,0.434,177,0.48,178,0.457,179,0.713,180,0.434,181,0.457,182,0.48,183,0.434,184,0.48,185,0.434,186,0.48,187,0.434,188,0.957,189,0.77,190,0.713,191,0.434,192,0.434,193,0.48,194,0.434,195,1.191,196,0.48,197,0.809,198,0.457,199,0.713,200,0.434,201,0.434,202,0.713,203,0.434,204,0.851,205,0.434,206,0.48,207,0.434,208,0.48,209,0.434,210,0.713,211,0.713,212,0.434,213,0.434,214,0.48,215,0.434,216,0.48,217,0.434,218,0.954,219,0.434,220,0.48,221,0.434,222,0.48,223,0.434,224,0.48,225,0.434,226,0.434,227,0.457,228,0.457,229,0.331,230,0.48,231,0.434,232,0.48,233,0.48,234,0.457,235,0.48,236,0.48,237,0.413,238,0.81,239,0.48,240,0.434,241,0.48,242,0.48,243,0.457,244,0.713,245,0.48,246,0.434,247,0.48,248,0.434,249,0.457,250,0.48,251,0.434,252,0.48,253,0.434,254,0.753,255,0.457,256,0.48,257,0.413,258,0.413,259,0.48,260,0.413,261,0.457,262,0.48,263,0.009,264,0.009,291,0.727,302,1.129,306,1.341,351,1.708,355,2.255,393,1.126,396,3.617,403,1.033,423,1.502,476,1.851,569,3.577,574,1.707,594,3.348,634,2.952,753,2.535,754,2.535,755,2.725,788,3.597,909,2.725,950,3.881,970,2.179,972,2.179,973,4.702,974,2.179,977,2.179,1039,2.179,1068,3.236,1080,5.541,1081,2.179,1083,3.617,1084,3.617,1096,2.435,1107,2.435,1113,2.435,1121,2.435,1122,2.435,1126,2.435,1156,3.236,1187,1.987,1197,4.315,1198,3.088,1199,3.597,1200,3.617,1201,4.196,1202,6.074,1203,3.617,1204,2.825,1205,3.617,1206,2.825,1207,4.196,1208,2.825,1209,2.825,1210,3.617,1211,2.825,1212,4.315,1213,3.617,1214,2.825,1215,2.825,1216,1.502,1217,2.825,1218,2.435,1219,2.825,1220,3.617,1221,2.435,1222,2.825,1223,2.179,1224,2.435,1225,3.617,1226,2.435,1227,2.179,1228,2.435,1229,2.435,1230,2.435,1231,2.435,1232,1.834,1233,1.707,1234,4.196,1235,4.196,1236,3.617,1237,4.196,1238,4.196,1239,4.196,1240,3.617,1241,4.196,1242,4.196]],["title/components/EmailSnackbarComponent.html",[0,0.106,200,0.579]],["body/components/EmailSnackbarComponent.html",[0,0.177,1,0.666,2,0.87,3,0.175,4,0.175,5,0.7,6,0.735,7,0.735,8,0.153,12,1.019,14,0.568,17,0.632,18,1.228,19,1.355,20,1.08,22,0.87,23,0.784,24,0.735,34,0.961,36,0.961,38,0.11,39,0.319,43,1.113,57,0.268,60,0.017,61,0.39,73,0.45,74,0.45,94,0.319,97,0.244,112,0.666,113,0.915,117,0.175,118,0.175,167,0.735,168,0.961,169,0.87,170,0.568,171,1.135,172,0.735,173,0.961,174,0.666,175,0.735,176,0.666,177,0.735,178,0.7,179,0.961,180,0.666,181,0.7,182,0.735,183,0.666,184,0.735,185,0.666,186,0.735,187,0.666,188,1.019,189,0.666,190,0.961,191,0.666,192,0.666,193,0.735,194,0.666,195,0.87,196,0.735,197,0.632,198,0.7,199,0.961,200,1.027,201,1.113,202,0.961,203,0.666,204,1.07,205,0.666,206,0.735,207,0.666,208,0.735,209,0.666,210,0.961,211,0.961,212,0.666,213,0.666,214,0.735,215,0.666,216,0.735,217,0.666,218,1.093,219,0.666,220,0.735,221,0.666,222,0.735,223,0.666,224,0.735,225,0.666,226,0.666,227,0.7,228,0.7,229,0.508,230,0.735,231,0.666,232,0.735,233,0.735,234,0.7,235,0.735,236,0.735,237,0.632,238,0.7,239,0.735,240,0.666,241,0.735,242,0.735,243,0.7,244,0.961,245,0.735,246,0.666,247,0.735,248,0.666,249,0.7,250,0.735,251,0.666,252,0.735,253,0.666,254,0.508,255,0.7,256,1.07,257,0.632,258,0.632,259,0.735,260,0.632,261,0.7,262,0.735,263,0.013,264,0.013,387,3.978,389,2.302,390,2.172,612,2.172,753,3.417,754,3.417,1243,4.875,1244,3.045,1245,4.361,1246,4.361,1247,4.857,1248,4.361,1249,3.338,1250,3.338,1251,5.654]],["title/components/HeaderComponent.html",[0,0.106,203,0.579]],["body/components/HeaderComponent.html",[0,0.173,1,0.639,2,0.847,3,0.168,4,0.168,5,0.672,6,0.706,7,0.706,8,0.147,12,0.998,14,0.546,17,0.607,18,1.226,19,1.353,20,1.063,22,0.847,23,0.763,24,0.935,33,1.453,34,0.935,36,0.935,38,0.106,39,0.31,43,1.102,46,1.977,48,0.435,52,0.469,57,0.382,59,0.354,60,0.018,61,0.407,62,0.19,63,0.304,68,0.329,72,0.459,73,0.432,74,0.432,90,1.694,94,0.348,97,0.234,112,0.639,113,0.89,115,0.935,116,1.023,117,0.168,118,0.168,167,0.706,168,0.935,169,0.847,170,0.546,171,1.117,172,0.706,173,0.935,174,0.639,175,0.706,176,0.639,177,0.706,178,0.672,179,0.935,180,0.639,181,0.672,182,0.706,183,0.639,184,0.706,185,0.639,186,0.706,187,0.639,188,0.998,189,0.639,190,0.935,191,0.639,192,0.639,193,0.706,194,0.639,195,0.847,196,0.706,197,0.607,198,0.672,199,0.935,200,0.639,201,0.639,202,0.935,203,1.011,204,1.049,205,0.639,206,0.706,207,0.639,208,0.706,209,0.639,210,1.049,211,0.935,212,0.639,213,0.639,214,0.706,215,0.639,216,0.706,217,0.639,218,1.081,219,0.639,220,0.706,221,0.639,222,0.706,223,0.639,224,0.706,225,0.639,226,0.639,227,0.672,228,0.672,229,0.487,230,0.706,231,0.639,232,0.706,233,0.706,234,0.672,235,0.706,236,0.706,237,0.607,238,0.672,239,0.706,240,0.639,241,0.706,242,0.706,243,0.672,244,0.935,245,0.706,246,0.639,247,0.706,248,0.639,249,0.672,250,0.706,251,0.639,252,0.706,253,0.639,254,0.487,255,0.672,256,0.706,257,0.607,258,0.607,259,0.706,260,0.607,261,0.672,262,0.706,263,0.012,264,0.012,360,1.973,366,2.085,379,3.326,384,2.21,393,0.935,409,2.085,442,5.069,488,3.205,1252,3.582,1253,4.246,1254,4.246,1255,4.246,1256,5.322,1257,5.504,1258,4.155,1259,4.746,1260,3.582,1261,3.582,1262,3.582,1263,3.582]],["title/components/ImprintComponent.html",[0,0.106,205,0.579]],["body/components/ImprintComponent.html",[0,0.173,1,0.637,2,0.844,3,0.168,4,0.168,5,0.669,6,0.703,7,0.703,8,0.147,12,0.997,14,0.543,17,0.605,18,1.226,19,1.352,20,1.061,22,0.844,23,0.761,24,0.933,33,1.45,34,0.933,36,0.933,38,0.106,43,1.101,46,1.975,48,0.434,52,0.352,57,0.34,59,0.352,60,0.017,61,0.406,62,0.189,63,0.303,68,0.327,72,0.458,94,0.37,97,0.233,112,0.637,113,0.888,115,0.931,116,1.019,117,0.168,118,0.168,167,0.703,168,0.933,169,0.844,170,0.543,171,1.115,172,0.703,173,0.933,174,0.637,175,0.703,176,0.637,177,0.703,178,0.669,179,0.933,180,0.637,181,0.669,182,0.703,183,0.637,184,0.703,185,0.637,186,0.703,187,0.637,188,0.997,189,0.637,190,0.933,191,0.637,192,0.637,193,0.703,194,0.637,195,0.844,196,0.703,197,0.605,198,0.669,199,0.933,200,0.637,201,0.948,202,0.933,203,1.009,204,1.047,205,1.009,206,0.703,207,0.637,208,0.703,209,0.637,210,0.933,211,0.933,212,0.637,213,0.637,214,0.703,215,0.637,216,0.703,217,0.637,218,1.079,219,0.637,220,0.703,221,0.637,222,0.703,223,0.637,224,0.703,225,0.637,226,0.637,227,0.669,228,0.669,229,0.485,230,0.703,231,0.637,232,0.703,233,0.703,234,0.669,235,0.703,236,0.703,237,0.605,238,0.669,239,0.703,240,0.637,241,0.703,242,0.703,243,0.669,244,0.933,245,0.703,246,0.637,247,0.703,248,0.637,249,0.669,250,0.703,251,0.637,252,0.703,253,0.637,254,0.485,255,0.669,256,0.703,257,0.605,258,0.605,259,0.703,260,0.605,261,0.669,262,0.703,263,0.012,264,0.012,360,1.965,384,2.202,392,1.965,409,2.077,1264,3.569,1265,5.49,1266,5.49,1267,5.49,1268,6.562,1269,4.139,1270,4.139,1271,4.139,1272,4.734,1273,5.49,1274,5.49,1275,5.49,1276,5.49,1277,5.49,1278,5.49,1279,5.49,1280,5.49,1281,5.49,1282,5.49,1283,4.734,1284,5.49,1285,4.734,1286,5.49]],["title/components/LogOutDialogComponent.html",[0,0.106,213,0.579]],["body/components/LogOutDialogComponent.html",[0,0.162,1,0.562,2,0.777,3,0.148,4,0.148,5,0.591,6,0.621,7,0.621,8,0.129,9,2.447,10,3.293,12,0.935,14,0.48,17,0.534,18,1.218,19,1.344,20,1.009,22,0.777,23,0.7,24,0.858,33,1.361,34,0.858,36,0.858,38,0.093,39,0.285,40,1.389,43,1.103,44,2.667,46,1.951,47,1.561,48,0.399,52,0.43,53,1.736,54,2.799,57,0.419,59,0.311,60,0.018,61,0.386,62,0.264,63,0.268,68,0.457,72,0.639,90,1.125,94,0.391,97,0.206,102,1.564,109,0.861,112,0.562,113,0.817,115,0.823,116,0.9,117,0.148,118,0.148,130,1.418,131,2.534,167,0.621,168,0.858,169,0.777,170,0.48,171,1.06,172,0.621,173,0.858,174,0.562,175,0.621,176,0.562,177,0.621,178,0.591,179,0.858,180,0.562,181,0.591,182,0.621,183,0.562,184,0.621,185,0.562,186,0.621,187,0.562,188,0.935,189,0.562,190,0.858,191,0.562,192,0.562,193,0.621,194,0.562,195,0.777,196,0.621,197,0.534,198,0.591,199,0.858,200,0.562,201,0.562,202,0.858,203,0.562,204,0.983,205,0.562,206,0.621,207,0.562,208,0.621,209,0.562,210,0.858,211,0.858,212,0.562,213,0.959,214,1.178,215,1.184,216,0.621,217,0.562,218,1.041,219,0.562,220,0.621,221,0.562,222,0.621,223,0.562,224,0.621,225,0.562,226,0.562,227,0.591,228,0.591,229,0.429,230,0.621,231,0.562,232,0.621,233,0.621,234,0.591,235,0.621,236,0.621,237,0.534,238,0.591,239,0.621,240,0.562,241,0.621,242,0.621,243,0.591,244,0.858,245,0.621,246,0.562,247,0.621,248,0.562,249,0.591,250,0.621,251,0.562,252,0.621,253,0.562,254,0.429,255,0.591,256,0.621,257,0.534,258,0.911,259,0.621,260,0.534,261,0.591,262,0.621,263,0.011,264,0.011,302,0.984,309,2.572,310,2.374,328,2.21,350,3.075,363,2.808,391,1.945,393,1.136,403,0.9,409,1.835,854,4.81,1156,3.894,1240,5.376,1287,5.978,1288,5.349,1289,3.152,1290,5.049,1291,5.049,1292,4.985,1293,6.235,1294,3.657,1295,3.657,1296,3.657,1297,3.657,1298,3.657,1299,3.657,1300,3.152,1301,3.152,1302,6.235,1303,6.235,1304,6.235]],["title/components/LoginComponent.html",[0,0.106,207,0.579]],["body/components/LoginComponent.html",[0,0.136,1,0.41,2,0.618,3,0.108,4,0.108,5,0.431,6,0.453,7,0.453,8,0.094,12,0.782,14,0.35,17,0.389,18,1.195,19,1.317,20,0.871,22,0.618,23,0.899,24,0.683,32,2.068,33,1.138,34,0.683,36,0.683,38,0.068,39,0.227,40,0.993,41,1.488,43,0.969,46,1.773,47,1.355,48,0.318,49,2.838,52,0.227,56,1.449,57,0.455,59,0.458,60,0.018,61,0.436,62,0.309,63,0.394,68,0.535,72,0.638,73,0.655,74,0.655,75,2.354,90,2.114,94,0.381,97,0.15,103,0.821,108,1.034,109,0.628,112,0.41,113,0.65,115,0.6,116,0.656,117,0.108,118,0.108,126,2.471,129,1.418,130,1.034,157,2.827,162,2.827,167,0.453,168,0.683,169,0.618,170,0.35,171,0.915,172,0.453,173,0.683,174,0.41,175,0.453,176,0.41,177,0.453,178,0.431,179,0.683,180,0.41,181,0.431,182,0.453,183,0.41,184,0.453,185,0.41,186,0.453,187,0.41,188,0.782,189,0.41,190,0.683,191,0.41,192,0.41,193,0.453,194,0.41,195,0.618,196,0.453,197,0.389,198,0.431,199,0.683,200,0.41,201,0.969,202,0.683,203,0.41,204,0.822,205,0.41,206,0.453,207,0.828,208,0.453,209,0.41,210,1.149,211,0.683,212,0.41,213,0.41,214,0.453,215,0.41,216,0.453,217,0.41,218,0.934,219,0.41,220,0.453,221,0.41,222,0.453,223,0.41,224,0.453,225,0.41,226,0.41,227,0.431,228,0.431,229,0.313,230,0.453,231,0.41,232,0.453,233,0.453,234,0.431,235,0.453,236,0.453,237,0.389,238,0.431,239,0.453,240,0.828,241,0.683,242,0.453,243,0.431,244,0.683,245,0.453,246,0.41,247,0.453,248,0.41,249,0.431,250,0.453,251,0.41,252,0.453,253,0.41,254,0.631,255,0.431,256,0.453,257,0.389,258,0.389,259,0.453,260,0.389,261,0.431,262,0.453,263,0.009,264,0.009,291,0.816,302,1.696,339,1.418,350,2.137,355,2.191,363,2.424,390,1.338,391,1.418,392,1.266,393,1.088,402,3.668,403,1.325,413,1.876,416,2.056,417,2.056,427,4.181,446,4.063,447,3.75,498,2.609,520,2.428,536,3.668,607,2.428,612,1.338,622,1.508,719,2.056,732,3.14,748,4.979,749,3.787,753,3.253,754,3.253,755,3.495,756,3.099,757,2.827,758,3.099,759,3.099,760,3.464,764,4.641,1134,3.464,1196,2.609,1301,2.298,1305,2.298,1306,4.835,1307,2.572,1308,4.835,1309,4.018,1310,4.018,1311,4.835,1312,5.775,1313,5.383,1314,4.835,1315,3.402,1316,4.018,1317,4.018,1318,4.018,1319,5.383,1320,4.641,1321,5.383,1322,5.383,1323,5.383,1324,2.666,1325,4.018,1326,4.018,1327,2.666,1328,3.464,1329,4.018,1330,2.666,1331,5.233,1332,4.641,1333,4.641,1334,4.641,1335,4.641,1336,4.169,1337,4.018,1338,3.464,1339,4.018,1340,2.666,1341,2.666,1342,2.666,1343,2.666,1344,2.666,1345,2.666,1346,2.666,1347,2.666,1348,2.666,1349,2.666,1350,4.169,1351,2.666,1352,2.666,1353,2.666,1354,2.666,1355,2.666,1356,1.876,1357,2.298,1358,2.666,1359,5.775,1360,2.666,1361,2.666,1362,2.666,1363,4.835,1364,2.666,1365,2.666,1366,2.298,1367,2.666,1368,2.666,1369,4.018,1370,4.018,1371,2.666,1372,2.666,1373,4.018,1374,2.666,1375,2.666,1376,2.666,1377,2.666,1378,2.666,1379,2.666,1380,2.298,1381,2.298,1382,2.298,1383,2.298,1384,2.298,1385,2.298,1386,2.298,1387,2.298,1388,2.298,1389,2.666,1390,2.666,1391,2.666,1392,2.666,1393,4.018,1394,4.018,1395,4.018,1396,3.464,1397,4.018,1398,3.464,1399,4.018,1400,4.018,1401,4.018,1402,4.018,1403,4.018,1404,4.018,1405,4.018,1406,4.018,1407,4.641,1408,4.018,1409,4.018]],["title/components/LoginPageComponent.html",[0,0.106,209,0.579]],["body/components/LoginPageComponent.html",[0,0.158,1,0.538,2,0.753,3,0.142,4,0.142,5,0.566,6,0.594,7,0.594,8,0.124,12,0.913,14,0.459,17,0.511,18,1.215,19,1.341,20,0.989,22,0.753,23,0.679,24,0.832,33,1.329,34,0.832,36,0.832,38,0.089,39,0.276,40,1.16,43,1.054,46,1.878,48,0.387,52,0.298,57,0.433,59,0.298,60,0.018,61,0.379,62,0.258,63,0.256,68,0.447,72,0.712,73,0.587,74,0.587,90,1.883,94,0.394,97,0.197,112,0.538,113,0.792,115,0.787,116,0.861,117,0.142,118,0.142,130,1.898,140,3.444,167,0.594,168,0.832,169,0.753,170,0.459,171,1.039,172,0.594,173,0.832,174,0.538,175,0.594,176,0.941,177,0.594,178,0.566,179,0.832,180,0.538,181,0.566,182,0.594,183,0.538,184,0.594,185,0.538,186,0.594,187,0.538,188,0.913,189,0.538,190,0.832,191,0.538,192,0.538,193,0.594,194,0.538,195,0.753,196,0.594,197,0.511,198,0.566,199,0.832,200,0.538,201,0.538,202,0.832,203,0.538,204,0.96,205,0.538,206,0.594,207,0.941,208,0.594,209,0.941,210,1.236,211,0.832,212,0.538,213,0.538,214,0.594,215,0.538,216,0.594,217,0.538,218,1.026,219,0.538,220,0.594,221,0.538,222,0.594,223,0.538,224,0.594,225,0.538,226,0.538,227,0.566,228,0.566,229,0.41,230,0.594,231,0.538,232,0.594,233,0.594,234,0.566,235,0.594,236,0.594,237,0.511,238,0.566,239,0.594,240,0.941,241,0.96,242,0.594,243,0.566,244,0.832,245,0.594,246,0.538,247,0.594,248,0.941,249,0.792,250,0.594,251,0.538,252,0.594,253,0.538,254,0.41,255,0.566,256,0.594,257,0.511,258,0.511,259,0.594,260,0.511,261,0.566,262,0.594,263,0.011,264,0.011,291,0.574,350,3.004,355,2.49,360,1.661,363,2.755,366,2.457,379,3.697,384,3.868,391,1.861,392,1.661,393,0.787,408,3.016,409,1.756,427,4.017,442,4.719,446,4.53,447,4.181,488,2.698,600,1.979,652,2.461,1256,4.869,1259,4.869,1260,4.221,1261,4.221,1262,3.016,1263,4.869,1272,4.221,1300,3.016,1307,3.004,1315,3.973,1356,2.461,1357,3.016,1398,4.221,1410,2.698,1411,4.221,1412,4.221,1413,5.647,1414,6.117,1415,4.895,1416,3.498,1417,3.498,1418,3.498,1419,3.498,1420,3.498,1421,3.498,1422,3.016,1423,2.698,1424,3.498,1425,3.498,1426,3.498,1427,3.498,1428,3.498,1429,3.498,1430,3.498,1431,3.498,1432,4.221,1433,3.016,1434,3.498,1435,3.498,1436,2.461,1437,3.498,1438,4.895,1439,3.776,1440,4.895]],["title/components/LoginSnackbarComponent.html",[0,0.106,212,0.579]],["body/components/LoginSnackbarComponent.html",[0,0.177,1,0.668,2,0.872,3,0.176,4,0.176,5,0.703,6,0.738,7,0.738,8,0.154,12,1.021,14,0.571,17,0.635,18,1.228,19,1.356,20,1.082,22,0.872,23,0.786,24,0.738,34,0.963,36,0.963,38,0.111,39,0.32,43,1.114,57,0.269,60,0.017,61,0.39,73,0.452,74,0.452,94,0.32,97,0.245,112,0.668,113,0.917,117,0.176,118,0.176,167,0.738,168,0.963,169,0.872,170,0.571,171,1.136,172,0.738,173,0.963,174,0.668,175,0.738,176,0.668,177,0.738,178,0.703,179,0.963,180,0.668,181,0.703,182,0.738,183,0.668,184,0.738,185,0.668,186,0.738,187,0.668,188,1.021,189,0.668,190,0.963,191,0.668,192,0.668,193,0.738,194,0.668,195,0.872,196,0.738,197,0.635,198,0.703,199,0.963,200,0.668,201,0.668,202,0.963,203,0.668,204,1.072,205,0.668,206,0.738,207,0.668,208,0.738,209,0.668,210,1.248,211,0.963,212,1.029,213,0.668,214,0.738,215,0.668,216,0.738,217,0.668,218,1.094,219,0.668,220,0.738,221,0.668,222,0.738,223,0.668,224,0.738,225,0.668,226,0.668,227,0.703,228,0.703,229,0.51,230,0.738,231,0.668,232,0.738,233,0.738,234,0.703,235,0.738,236,0.738,237,0.635,238,0.703,239,0.738,240,0.668,241,0.738,242,0.738,243,0.703,244,0.963,245,0.738,246,0.668,247,0.738,248,0.668,249,0.703,250,0.738,251,0.668,252,0.738,253,0.668,254,0.51,255,0.703,256,1.072,257,0.635,258,0.635,259,0.738,260,0.635,261,0.703,262,0.738,263,0.013,264,0.013,389,2.311,390,2.181,612,2.181,1244,3.057,1245,4.373,1246,4.373,1247,4.867,1248,4.373,1249,3.352,1250,3.352,1407,4.887,1441,4.887,1442,4.373]],["title/components/MainHeaderComponent.html",[0,0.106,217,0.579]],["body/components/MainHeaderComponent.html",[0,0.175,1,0.492,2,0.707,3,0.13,4,0.13,5,0.517,6,0.543,7,0.543,8,0.113,9,2.607,10,3.509,11,1.605,12,0.87,14,0.42,17,0.467,18,1.209,19,1.334,20,0.95,22,0.707,23,0.814,24,0.781,25,3.248,33,1.265,34,0.781,36,0.781,38,0.082,39,0.259,40,1.517,41,1.916,42,2.772,43,1.027,47,1.518,48,0.363,52,0.391,56,1.675,57,0.454,59,0.391,60,0.018,61,0.385,62,0.322,63,0.336,65,2.3,67,1.44,68,0.492,72,0.688,73,0.559,74,0.559,94,0.407,97,0.18,98,1.932,103,0.984,109,0.753,110,1.809,111,1.701,112,0.492,113,0.743,115,0.72,117,0.13,118,0.13,119,1.054,134,1.605,136,1.809,137,1.605,138,1.605,167,0.543,168,0.781,169,0.707,170,0.42,171,0.998,172,0.543,173,0.781,174,0.492,175,0.543,176,0.492,177,0.543,178,0.517,179,0.781,180,0.492,181,0.517,182,0.543,183,0.492,184,0.543,185,0.492,186,0.543,187,0.492,188,0.87,189,0.492,190,0.781,191,0.492,192,0.492,193,0.543,194,0.492,195,0.904,196,0.543,197,0.467,198,0.517,199,0.781,200,0.492,201,0.492,202,0.781,203,0.492,204,0.913,205,0.492,206,0.543,207,0.492,208,0.543,209,0.492,210,0.781,211,0.781,212,0.492,213,0.827,214,0.781,215,0.827,216,0.543,217,0.904,218,1.129,219,0.492,220,0.543,221,0.904,222,0.543,223,0.492,224,0.543,225,0.492,226,0.997,227,0.517,228,0.517,229,0.375,230,0.543,231,0.492,232,0.543,233,0.543,234,0.517,235,0.543,236,0.543,237,0.467,238,0.517,239,0.543,240,0.492,241,0.543,242,0.543,243,0.95,244,0.913,245,0.543,246,0.492,247,0.543,248,0.492,249,0.517,250,0.543,251,0.492,252,0.543,253,0.492,254,0.375,255,0.517,256,0.543,257,0.467,258,0.467,259,0.543,260,0.467,261,0.517,262,0.543,263,0.01,264,0.01,275,3.352,291,0.375,302,1.236,311,1.809,379,2.776,385,1.932,393,1.21,423,1.701,462,3.96,1187,2.25,1195,3.232,1198,3.178,1216,1.701,1233,1.932,1253,3.543,1254,3.543,1255,3.543,1288,2.467,1443,4.798,1444,2.467,1445,5.376,1446,4.147,1447,4.378,1448,5.376,1449,5.066,1450,5.876,1451,5.066,1452,4.594,1453,5.876,1454,2.757,1455,3.782,1456,3.816,1457,4.635,1458,3.551,1459,4.594,1460,3.198,1461,3.198,1462,3.198,1463,4.594,1464,3.198,1465,3.198,1466,3.198,1467,3.198,1468,3.198,1469,4.594,1470,2.757,1471,3.198,1472,3.198,1473,3.198,1474,2.467,1475,2.757,1476,3.198,1477,2.467,1478,3.198,1479,3.198,1480,3.198,1481,4.594,1482,4.594,1483,3.198,1484,2.757,1485,3.198,1486,2.757,1487,3.198,1488,3.96]],["title/components/MainMenuChannelsComponent.html",[0,0.106,219,0.579]],["body/components/MainMenuChannelsComponent.html",[0,0.161,1,0.804,2,0.681,3,0.123,4,0.123,5,0.492,6,0.517,7,0.517,8,0.108,9,2.587,10,3.481,11,3.679,12,1.264,14,0.801,15,2.14,17,0.444,18,1.206,19,1.329,20,0.987,22,0.681,23,0.796,24,0.753,25,3.158,33,1.23,34,0.753,36,0.753,38,0.078,39,0.25,40,1.55,41,1.878,42,2.724,43,1.011,46,1.964,47,1.501,48,0.351,52,0.377,56,1.642,57,0.45,59,0.377,60,0.018,61,0.378,62,0.323,63,0.325,68,0.454,72,0.704,73,0.461,74,0.461,94,0.41,97,0.171,98,1.838,103,0.936,109,0.716,110,1.721,111,1.618,112,0.468,113,0.717,114,2.622,115,0.684,116,0.749,117,0.123,118,0.123,119,0.596,122,3.728,125,1.444,141,3.728,167,0.517,168,0.753,169,0.681,170,0.399,171,0.975,172,0.517,173,0.753,174,0.468,175,0.517,176,0.468,177,0.517,178,0.492,179,0.753,180,0.468,181,0.492,182,0.517,183,0.468,184,0.517,185,0.468,186,0.517,187,0.468,188,0.845,189,0.468,190,0.753,191,0.468,192,0.468,193,0.517,194,0.468,195,0.681,196,0.517,197,0.444,198,0.492,199,0.753,200,0.468,201,0.468,202,0.753,203,0.468,204,0.888,205,0.468,206,0.517,207,0.468,208,0.517,209,0.468,210,0.753,211,0.753,212,0.468,213,0.468,214,0.517,215,0.468,216,0.517,217,0.468,218,1.128,219,0.883,220,0.517,221,0.468,222,0.517,223,0.468,224,0.517,225,0.468,226,0.98,227,0.492,228,0.492,229,0.357,230,0.517,231,0.468,232,0.517,233,0.517,234,0.492,235,0.517,236,0.517,237,0.444,238,0.492,239,0.517,240,0.468,241,0.517,242,0.517,243,0.492,244,0.753,245,0.517,246,0.468,247,0.517,248,0.468,249,0.492,250,0.517,251,0.468,252,0.517,253,0.468,254,0.357,255,0.492,256,0.517,257,0.444,258,0.444,259,0.517,260,0.444,261,0.492,262,0.517,263,0.01,264,0.01,275,3.314,291,0.716,302,1.192,308,1.975,311,1.721,330,2.677,338,2.223,385,1.838,393,0.997,633,3.417,644,3.117,987,3.948,1033,2.14,1198,3.143,1216,1.618,1223,2.346,1232,1.975,1233,1.838,1307,2.779,1447,4.293,1454,2.622,1489,5.655,1490,2.622,1491,5.226,1492,4.43,1493,4.43,1494,5.226,1495,5.26,1496,5.741,1497,5.741,1498,4.43,1499,4.949,1500,4.505,1501,3.728,1502,4.43,1503,3.042,1504,3.042,1505,4.43,1506,3.042,1507,3.042,1508,3.042,1509,3.042,1510,3.042,1511,3.042,1512,3.042,1513,3.042,1514,3.042,1515,3.042,1516,3.042,1517,2.622,1518,3.042,1519,2.622,1520,2.14,1521,3.82,1522,4.43,1523,4.43]],["title/components/MainMenuComponent.html",[0,0.106,221,0.579]],["body/components/MainMenuComponent.html",[0,0.155,1,0.52,2,0.735,3,0.137,4,0.137,5,0.547,6,0.575,7,0.575,8,0.12,9,2.521,10,3.392,11,3.585,12,1.169,14,0.728,17,0.494,18,1.213,19,1.338,20,0.975,22,0.735,23,0.663,24,0.812,25,3.35,33,1.305,34,0.812,36,0.812,38,0.086,39,0.269,40,1.53,41,1.855,43,1.044,46,2.011,47,1.536,48,0.378,52,0.407,56,1.711,57,0.436,59,0.288,60,0.018,61,0.408,62,0.31,63,0.248,68,0.378,72,0.374,73,0.352,74,0.352,75,1.853,76,2.888,77,2.152,79,2.888,80,3.35,81,2.704,82,2.888,83,2.888,94,0.418,97,0.191,98,2.043,103,1.041,104,1.523,105,1.697,106,1.913,107,1.798,109,0.796,112,0.52,113,0.773,115,0.761,116,0.832,117,0.137,118,0.137,119,0.663,125,2.633,129,1.798,130,1.311,167,0.575,168,0.812,169,0.735,170,0.444,171,1.024,172,0.575,173,0.812,174,0.52,175,0.575,176,0.52,177,0.575,178,0.547,179,0.812,180,0.52,181,0.547,182,0.575,183,0.52,184,0.575,185,0.52,186,0.575,187,0.52,188,0.897,189,0.52,190,0.812,191,0.52,192,0.52,193,0.575,194,0.52,195,0.735,196,0.575,197,0.494,198,0.547,199,0.812,200,0.52,201,0.52,202,0.812,203,0.52,204,0.942,205,0.52,206,0.575,207,0.52,208,0.575,209,0.52,210,0.812,211,0.812,212,0.52,213,0.52,214,0.575,215,0.52,216,0.575,217,0.52,218,1.158,219,0.927,220,0.575,221,0.927,222,0.575,223,0.927,224,0.575,225,0.927,226,1.015,227,0.547,228,0.547,229,0.397,230,0.575,231,0.52,232,0.575,233,0.575,234,0.547,235,0.575,236,0.575,237,0.494,238,0.547,239,0.575,240,0.52,241,0.575,242,0.575,243,0.975,244,0.812,245,0.575,246,0.52,247,0.575,248,0.52,249,0.547,250,0.575,251,0.52,252,0.575,253,0.52,254,0.397,255,0.547,256,0.575,257,0.494,258,0.494,259,0.575,260,0.494,261,0.547,262,0.575,263,0.011,264,0.011,275,3.392,291,0.65,302,1.287,311,1.913,336,1.447,385,2.043,403,0.832,416,2.608,417,2.608,450,1.697,551,4.24,603,2.915,720,2.915,1443,2.196,1446,4.277,1447,4.473,1474,2.608,1475,2.915,1486,2.915,1489,2.608,1520,2.379,1524,2.915,1525,4.78,1526,4.78,1527,6.026,1528,2.915,1529,4.78,1530,3.381,1531,3.381,1532,3.381,1533,4.121,1534,3.381,1535,3.381,1536,3.381,1537,3.381,1538,2.915,1539,2.608,1540,3.381,1541,3.381,1542,2.915,1543,3.381,1544,3.381,1545,3.381,1546,3.381]],["title/components/MainMenuDmComponent.html",[0,0.106,223,0.579]],["body/components/MainMenuDmComponent.html",[0,0.134,1,0.401,2,0.608,3,0.106,4,0.106,5,0.422,6,0.443,7,0.443,8,0.092,9,2.587,10,3.481,11,3.68,12,1.261,14,0.79,17,0.381,18,1.193,19,1.315,20,0.861,22,0.608,23,0.738,24,0.672,33,1.123,34,0.672,36,0.672,38,0.067,39,0.223,40,1.466,41,1.761,43,0.962,46,1.76,47,1.418,48,0.313,49,2.963,52,0.336,56,1.54,57,0.451,59,0.487,60,0.018,61,0.416,62,0.323,63,0.419,68,0.495,69,3.202,72,0.632,73,0.595,74,0.595,75,2.064,76,2.388,77,1.78,79,2.388,80,2.388,81,2.236,82,2.388,83,2.388,94,0.39,95,2.699,96,2.249,97,0.147,103,0.803,104,1.175,105,1.309,106,1.476,107,1.387,109,0.614,112,0.401,113,0.639,115,0.587,116,0.642,117,0.106,118,0.106,126,1.691,130,1.532,167,0.443,168,0.672,169,0.608,170,0.343,171,0.905,172,0.443,173,0.672,174,0.401,175,0.443,176,0.401,177,0.443,178,0.422,179,0.672,180,0.401,181,0.422,182,0.443,183,0.401,184,0.443,185,0.401,186,0.443,187,0.401,188,0.772,189,0.401,190,0.672,191,0.401,192,0.401,193,0.443,194,0.401,195,0.608,196,0.443,197,0.381,198,0.422,199,0.672,200,0.401,201,0.401,202,0.672,203,0.401,204,0.811,205,0.401,206,0.443,207,0.401,208,0.443,209,0.401,210,0.672,211,0.672,212,0.401,213,0.401,214,0.443,215,0.401,216,0.443,217,0.401,218,1.078,219,0.401,220,0.443,221,0.401,222,0.443,223,0.819,224,0.443,225,0.401,226,0.926,227,0.422,228,0.422,229,0.306,230,0.443,231,0.401,232,0.443,233,0.443,234,0.422,235,0.443,236,0.443,237,0.381,238,0.422,239,0.443,240,0.401,241,0.443,242,0.443,243,0.422,244,0.672,245,0.443,246,0.401,247,0.443,248,0.401,249,0.422,250,0.443,251,0.401,252,0.443,253,0.401,254,0.624,255,0.422,256,0.443,257,0.381,258,0.381,259,0.443,260,0.381,261,0.422,262,0.443,263,0.009,264,0.009,275,3.192,291,0.83,302,1.064,306,1.239,308,1.694,311,1.476,337,3.217,338,2.672,341,2.528,355,2.167,385,1.576,393,0.889,403,0.642,476,1.764,497,1.835,569,3.457,574,1.576,594,3.638,634,2.781,909,2.566,988,3.357,1076,4.59,1078,4.59,1123,3.407,1195,3.745,1196,3.457,1197,4.114,1198,3.027,1199,3.457,1200,3.407,1203,3.407,1205,3.407,1210,3.407,1212,4.114,1213,3.407,1216,1.387,1224,2.249,1225,3.407,1226,2.249,1227,3.049,1228,2.249,1229,2.249,1230,2.249,1231,2.249,1232,1.694,1233,1.576,1236,4.59,1447,4.024,1495,5.391,1499,4.59,1500,4.114,1501,3.457,1517,2.249,1519,2.249,1520,1.835,1521,3.407,1539,5.655,1547,2.249,1548,3.952,1549,3.952,1550,3.952,1551,4.772,1552,2.883,1553,3.952,1554,3.952,1555,1.694,1556,2.609,1557,2.609,1558,2.609,1559,2.609,1560,3.952,1561,2.609,1562,2.609,1563,3.952,1564,2.609,1565,2.609,1566,2.609,1567,2.609,1568,2.609,1569,2.609,1570,2.609,1571,2.609,1572,2.609,1573,2.609,1574,2.609,1575,2.609,1576,2.609,1577,2.609,1578,2.609,1579,3.952,1580,3.952,1581,3.952,1582,5.324]],["title/components/MainMenuHeaderComponent.html",[0,0.106,225,0.579]],["body/components/MainMenuHeaderComponent.html",[0,0.169,1,0.608,2,0.819,3,0.16,4,0.16,5,0.64,6,0.672,7,0.672,8,0.14,9,2.373,10,3.193,11,3.375,12,1.249,14,0.519,17,0.578,18,1.223,19,1.349,20,1.042,22,0.819,23,0.738,24,0.905,25,3.639,33,1.417,34,0.905,36,0.905,38,0.101,39,0.3,40,1.423,43,1.089,46,2.052,48,0.421,52,0.453,57,0.399,59,0.337,60,0.017,61,0.399,62,0.275,63,0.29,68,0.313,72,0.437,94,0.379,97,0.223,98,2.39,112,0.608,113,0.861,115,0.89,116,0.974,117,0.16,118,0.16,167,0.672,168,0.905,169,0.819,170,0.519,171,1.095,172,0.672,173,0.905,174,0.608,175,0.672,176,0.608,177,0.672,178,0.64,179,0.905,180,0.608,181,0.64,182,0.672,183,0.608,184,0.672,185,0.608,186,0.672,187,0.608,188,0.974,189,0.608,190,0.905,191,0.608,192,0.608,193,0.672,194,0.608,195,0.819,196,0.672,197,0.578,198,0.64,199,0.905,200,0.608,201,0.608,202,0.905,203,0.608,204,1.023,205,0.608,206,0.672,207,0.608,208,0.672,209,0.608,210,0.905,211,0.905,212,0.608,213,0.608,214,0.672,215,0.608,216,0.672,217,0.608,218,1.159,219,0.608,220,0.672,221,1.065,222,0.672,223,0.608,224,0.672,225,0.991,226,0.608,227,0.64,228,0.64,229,0.464,230,0.672,231,0.608,232,0.672,233,0.672,234,0.64,235,0.672,236,0.672,237,0.578,238,0.64,239,0.672,240,0.608,241,0.672,242,0.672,243,0.64,244,0.905,245,0.672,246,0.608,247,0.672,248,0.608,249,0.64,250,0.672,251,0.608,252,0.672,253,0.608,254,0.464,255,0.64,256,0.672,257,0.578,258,0.578,259,0.672,260,0.578,261,0.64,262,0.672,263,0.012,264,0.012,360,1.878,551,4.533,1253,4.108,1254,4.108,1255,4.108,1307,3.203,1443,4.367,1444,3.051,1470,3.41,1477,3.051,1488,4.592,1583,6.725,1584,3.955,1585,3.955,1586,3.955,1587,3.955]],["title/components/MainPageComponent.html",[0,0.106,226,0.579]],["body/components/MainPageComponent.html",[0,0.155,1,0.52,2,0.735,3,0.137,4,0.137,5,0.547,6,0.575,7,0.575,8,0.12,9,2.521,10,3.392,11,1.697,12,0.897,14,0.444,17,0.494,18,1.213,19,1.338,20,0.975,22,0.735,23,0.768,24,0.812,25,3.35,33,1.305,34,0.812,36,0.812,38,0.086,39,0.269,40,1.484,41,1.957,43,1.044,47,1.515,48,0.378,52,0.288,56,1.711,57,0.436,59,0.407,60,0.018,61,0.393,62,0.322,63,0.35,68,0.439,72,0.666,90,1.041,94,0.411,97,0.191,98,2.043,103,1.041,109,0.796,112,0.52,113,0.773,115,0.761,116,0.832,117,0.137,118,0.137,130,1.853,167,0.575,168,0.812,169,0.735,170,0.444,171,1.024,172,0.575,173,0.812,174,0.52,175,0.575,176,0.52,177,0.575,178,0.975,179,0.812,180,0.52,181,0.547,182,0.575,183,0.52,184,0.575,185,0.52,186,0.575,187,0.52,188,0.897,189,0.52,190,0.812,191,0.52,192,0.52,193,0.575,194,0.52,195,0.735,196,0.575,197,0.494,198,0.547,199,0.812,200,0.52,201,0.52,202,0.812,203,0.52,204,0.942,205,0.52,206,0.575,207,0.52,208,0.575,209,0.52,210,0.812,211,0.812,212,0.52,213,0.52,214,0.575,215,0.52,216,0.575,217,0.927,218,1.139,219,0.52,220,0.575,221,0.927,222,0.575,223,0.52,224,0.575,225,0.52,226,0.927,227,0.547,228,0.547,229,0.397,230,0.575,231,0.52,232,0.575,233,0.575,234,0.547,235,0.575,236,0.575,237,0.494,238,0.547,239,0.575,240,0.52,241,0.575,242,0.575,243,0.547,244,0.812,245,0.575,246,0.52,247,0.575,248,0.52,249,0.547,250,0.575,251,0.927,252,0.575,253,0.52,254,0.397,255,0.547,256,0.575,257,0.494,258,0.494,259,0.575,260,0.494,261,0.547,262,0.575,263,0.011,264,0.011,275,3.392,311,1.913,328,3.35,355,2.453,358,3.363,365,2.608,366,2.783,375,2.196,383,2.196,410,2.608,600,1.913,652,2.379,881,2.196,1198,3.217,1216,1.798,1307,2.949,1366,2.915,1410,2.608,1411,4.121,1412,4.121,1436,2.379,1443,2.196,1477,2.608,1484,2.915,1520,3.363,1533,5.196,1538,2.915,1555,2.196,1588,4.78,1589,4.78,1590,4.78,1591,3.381,1592,3.381,1593,4.277,1594,4.78,1595,3.381,1596,3.381,1597,3.381,1598,3.381,1599,3.381,1600,3.381,1601,3.381,1602,3.381,1603,3.381,1604,3.381,1605,3.381,1606,5.545,1607,4.78,1608,4.78,1609,4.78,1610,6.6,1611,6.026,1612,6.026,1613,4.78,1614,4.78]],["title/interfaces/Message.html",[229,0.442,528,1.789]],["body/interfaces/Message.html",[3,0.214,4,0.214,8,0.187,38,0.135,39,0.362,60,0.018,62,0.356,63,0.566,75,2.784,77,3.233,117,0.214,229,0.877,263,0.014,264,0.014,291,0.923,302,1.859,450,3.915,528,2.512,529,3.435,569,4.339,577,5.051,594,4.339,1593,4.949,1615,4.56,1616,5.538,1617,5.538,1618,5.538,1619,6.19,1620,3.435,1621,4.08,1622,4.08]],["title/injectables/MessageService.html",[531,0.774,987,2.131]],["body/injectables/MessageService.html",[3,0.105,4,0.105,8,0.213,17,0.878,38,0.066,39,0.222,48,0.311,49,3.116,52,0.405,57,0.471,59,0.612,60,0.018,61,0.448,62,0.339,63,0.527,68,0.58,69,2.094,72,0.664,73,0.684,74,0.684,75,2.213,77,2.142,90,1.464,94,0.339,97,0.146,117,0.105,118,0.105,119,1.472,125,1.869,126,2.959,229,0.878,263,0.009,264,0.009,283,1.825,291,0.898,336,2.872,344,0.959,393,1.07,403,1.621,476,1.963,531,0.808,532,1.006,536,3.63,550,3.447,569,3.63,574,2.379,577,4.226,589,2.001,594,2.874,607,2.379,612,1.302,613,2.001,614,1.825,615,2.001,616,3.088,617,2.001,618,2.237,620,3.669,621,2.237,622,1.468,625,1.006,654,2.001,655,2.237,658,2.001,663,2.001,664,3.036,666,3.036,667,2.001,668,2.001,669,2.001,670,4.402,674,3.669,679,2.001,686,2.237,688,1.825,732,1.685,865,1.825,987,2.227,1616,3.669,1617,2.001,1618,3.669,1619,4.1,1620,3.088,1621,3.669,1622,3.669,1623,2.237,1624,4.756,1625,4.756,1626,4.96,1627,4.756,1628,4.756,1629,4.756,1630,4.756,1631,4.756,1632,3.936,1633,3.936,1634,3.936,1635,3.936,1636,3.936,1637,3.936,1638,3.936,1639,3.936,1640,3.936,1641,5.309,1642,3.936,1643,3.936,1644,3.936,1645,5.309,1646,3.936,1647,3.936,1648,3.936,1649,3.936,1650,3.936,1651,3.936,1652,2.595,1653,3.936,1654,2.595,1655,2.595,1656,3.936,1657,2.595,1658,4.756,1659,3.936,1660,2.595,1661,6.917,1662,3.936,1663,2.595,1664,3.936,1665,2.595,1666,3.936,1667,2.595,1668,3.036,1669,3.936,1670,2.595,1671,3.936,1672,2.595,1673,2.595,1674,2.595,1675,3.936,1676,2.595,1677,3.936,1678,2.595,1679,3.394,1680,3.936,1681,2.595,1682,2.595,1683,3.936,1684,2.595,1685,3.936,1686,2.595,1687,3.936,1688,2.595,1689,3.936,1690,2.595,1691,2.595,1692,3.936,1693,2.595,1694,2.595,1695,2.595,1696,2.595,1697,4.1,1698,2.595,1699,2.595,1700,2.595,1701,2.595,1702,2.237,1703,1.685,1704,4.92,1705,2.595,1706,2.595,1707,2.595,1708,2.595,1709,2.595,1710,2.595,1711,1.825,1712,3.936,1713,2.595,1714,2.595,1715,3.936,1716,3.936,1717,2.595,1718,2.595,1719,2.595,1720,2.595,1721,2.595,1722,2.595,1723,2.595,1724,2.595,1725,2.595,1726,2.595,1727,2.595,1728,2.595,1729,4.756,1730,3.936,1731,4.1,1732,2.595,1733,4.756,1734,2.595,1735,4.92,1736,3.936,1737,2.595,1738,2.595,1739,4.756,1740,2.595,1741,2.595,1742,2.595,1743,2.595,1744,2.595,1745,2.595,1746,5.707,1747,2.237,1748,2.237,1749,5.309,1750,5.309,1751,2.595,1752,2.595,1753,2.595,1754,2.237,1755,2.595,1756,2.237,1757,5.309,1758,3.936,1759,3.936,1760,3.936,1761,2.595,1762,2.595,1763,2.595,1764,2.595,1765,2.595,1766,2.595,1767,2.595,1768,2.595,1769,2.595,1770,2.595,1771,2.595,1772,2.595,1773,2.595,1774,2.595,1775,2.595,1776,2.595,1777,2.595,1778,2.595,1779,2.595,1780,2.595,1781,2.595,1782,2.595,1783,2.595,1784,3.936,1785,3.936,1786,3.936,1787,3.936]],["title/directives/OpenProfileDirective.html",[170,0.495,258,0.55]],["body/directives/OpenProfileDirective.html",[3,0.215,4,0.215,8,0.188,17,0.775,18,0.988,22,0.988,23,0.891,38,0.135,48,0.508,52,0.547,57,0.456,59,0.451,60,0.018,61,0.328,62,0.316,63,0.388,65,2.749,67,3.113,68,0.419,72,0.71,94,0.362,97,0.299,117,0.215,118,0.215,119,1.04,169,0.988,170,0.844,257,0.775,258,0.939,263,0.014,264,0.014,291,0.754,351,2.814,358,4.52,375,3.443,383,3.443,393,1.446,950,4.521,970,4.09,1458,4.342,1788,6.45,1789,4.571,1790,6.425,1791,7.186,1792,4.172,1793,6.425,1794,5.302,1795,6.913,1796,6.425,1797,5.302,1798,6.425,1799,6.425,1800,4.489,1801,5.302,1802,5.302,1803,5.302]],["title/components/PopupSearchComponent.html",[0,0.106,231,0.579]],["body/components/PopupSearchComponent.html",[0,0.137,1,0.417,2,0.751,3,0.11,4,0.11,5,0.439,6,0.461,7,0.461,8,0.096,12,0.79,14,0.713,17,0.396,18,1.197,19,1.319,20,0.878,22,0.626,23,0.564,24,0.692,33,1.15,34,0.692,36,0.692,38,0.069,39,0.229,40,1.477,41,1.791,43,0.975,47,1.46,48,0.322,52,0.346,56,1.566,57,0.454,59,0.52,60,0.018,61,0.413,62,0.333,63,0.448,65,1.16,68,0.483,72,0.7,73,0.564,74,0.564,84,2.338,94,0.394,97,0.153,103,0.835,104,1.221,105,1.361,107,1.443,109,0.638,112,0.417,113,0.658,115,0.61,116,0.668,117,0.11,118,0.11,119,1.278,149,1.908,157,2.864,167,0.461,168,0.692,169,0.835,170,0.356,171,0.923,172,0.461,173,0.692,174,0.417,175,0.461,176,0.417,177,0.461,178,0.439,179,0.692,180,0.417,181,0.439,182,0.461,183,0.417,184,0.461,185,0.417,186,0.461,187,0.417,188,0.79,189,0.417,190,0.692,191,0.417,192,0.417,193,0.461,194,0.417,195,0.626,196,0.461,197,0.396,198,0.439,199,0.692,200,0.417,201,0.417,202,0.692,203,0.417,204,0.83,205,0.417,206,0.461,207,0.417,208,0.461,209,0.417,210,0.692,211,0.692,212,0.417,213,0.417,214,0.461,215,0.417,216,0.461,217,0.417,218,0.975,219,0.417,220,0.461,221,0.417,222,0.461,223,0.417,224,0.461,225,0.417,226,0.417,227,0.439,228,0.439,229,0.318,230,0.461,231,0.835,232,1.077,233,0.461,234,0.439,235,0.461,236,0.461,237,0.595,238,0.658,239,0.461,240,0.417,241,0.461,242,0.461,243,0.439,244,0.923,245,0.461,246,0.417,247,0.461,248,0.417,249,0.439,250,0.461,251,0.417,252,0.461,253,0.417,254,0.782,255,0.439,256,0.461,257,0.396,258,0.396,259,0.461,260,0.396,261,0.439,262,0.461,263,0.011,264,0.009,271,3.778,291,0.819,306,1.288,313,3.437,336,2.614,337,2.46,338,2.043,339,2.165,341,2.32,342,3.82,351,1.989,366,3.066,393,0.61,497,1.908,511,1.639,520,1.639,550,3.526,757,1.908,768,4.777,784,6.022,811,2.338,988,3.437,1041,2.338,1198,3.058,1216,1.443,1307,2.599,1455,3.437,1456,3.526,1458,2.952,1552,2.46,1620,1.761,1792,2.643,1800,3.526,1804,6.357,1805,6.357,1806,2.338,1807,4.07,1808,4.07,1809,4.212,1810,4.69,1811,4.07,1812,4.07,1813,4.886,1814,3.509,1815,4.07,1816,4.886,1817,5.387,1818,5.267,1819,2.712,1820,4.07,1821,2.712,1822,2.712,1823,4.07,1824,2.712,1825,4.07,1826,2.712,1827,4.07,1828,2.712,1829,4.07,1830,4.681,1831,2.712,1832,2.712,1833,2.712,1834,2.712,1835,4.07,1836,2.712,1837,2.712,1838,2.712,1839,2.712,1840,2.712,1841,2.712,1842,2.712,1843,2.712,1844,2.712,1845,4.212,1846,2.712,1847,2.712,1848,1.908,1849,2.338,1850,2.712,1851,2.712,1852,2.712,1853,2.712,1854,4.07,1855,4.07,1856,4.07,1857,4.07,1858,2.712,1859,4.886,1860,2.712,1861,2.712,1862,2.712,1863,2.712,1864,2.712,1865,2.712,1866,2.712,1867,2.712,1868,2.712,1869,2.712,1870,2.712,1871,2.712,1872,3.509,1873,2.712,1874,2.338,1875,2.712,1876,2.712,1877,2.712,1878,2.712,1879,4.07,1880,2.712,1881,4.07,1882,2.712,1883,2.712,1884,2.712,1885,2.338,1886,2.092,1887,2.338,1888,2.338,1889,2.338,1890,2.338,1891,3.14,1892,2.338,1893,2.712,1894,2.338,1895,2.338,1896,2.712,1897,2.712,1898,2.712,1899,2.338,1900,2.712,1901,2.338,1902,2.712,1903,2.712,1904,4.07,1905,2.712,1906,4.07,1907,2.712,1908,2.712,1909,2.712,1910,4.07,1911,4.07]],["title/components/ProfileButtonComponent.html",[0,0.106,237,0.55]],["body/components/ProfileButtonComponent.html",[0,0.171,1,0.627,2,0.836,3,0.165,4,0.165,5,0.659,6,0.692,7,0.692,8,0.144,12,0.989,14,0.535,17,0.595,18,1.225,19,1.351,20,1.055,22,0.836,23,0.753,24,0.923,34,0.923,36,0.923,38,0.104,43,1.097,48,0.43,52,0.347,57,0.403,59,0.347,60,0.017,61,0.403,62,0.279,63,0.298,67,2.446,68,0.322,72,0.6,73,0.423,74,0.423,90,1.254,94,0.306,97,0.23,112,0.627,113,0.879,117,0.165,118,0.165,167,0.692,168,0.923,169,0.836,170,0.535,171,1.108,172,0.692,173,0.923,174,0.627,175,0.692,176,0.627,177,0.692,178,0.659,179,0.923,180,0.627,181,0.659,182,0.692,183,0.627,184,0.692,185,0.627,186,0.692,187,0.627,188,0.989,189,0.627,190,0.923,191,0.627,192,0.627,193,0.692,194,0.627,195,0.836,196,0.692,197,0.595,198,0.659,199,0.923,200,0.627,201,0.627,202,0.923,203,0.627,204,1.039,205,0.627,206,0.692,207,0.627,208,0.692,209,0.627,210,0.923,211,0.923,212,0.627,213,0.627,214,0.692,215,0.627,216,0.692,217,0.627,218,1.075,219,0.627,220,0.692,221,0.627,222,0.692,223,0.627,224,0.692,225,0.627,226,0.627,227,0.659,228,0.659,229,0.478,230,0.692,231,0.627,232,0.692,233,0.692,234,0.659,235,0.692,236,0.692,237,0.953,238,1.154,239,0.692,240,0.627,241,0.692,242,0.692,243,0.659,244,0.923,245,0.692,246,0.627,247,0.692,248,0.627,249,0.659,250,0.692,251,0.627,252,0.692,253,0.627,254,0.478,255,0.659,256,0.692,257,0.595,258,0.953,259,0.692,260,0.595,261,0.659,262,0.692,263,0.012,264,0.012,291,0.765,310,2.645,351,2.488,355,2.654,392,1.934,393,0.917,1455,4.3,1456,4.234,1457,4.683,1458,3.94,1792,3.528,1800,3.969,1848,4.778,1891,5.029,1899,3.512,1912,5.856,1913,3.512,1914,5.432,1915,5.432,1916,4.073,1917,4.073,1918,4.073,1919,4.073,1920,4.073,1921,4.073,1922,4.073,1923,3.512,1924,4.073,1925,4.073]],["title/injectables/ProfileService.html",[531,0.774,950,2.276]],["body/injectables/ProfileService.html",[0,0.164,3,0.185,4,0.185,8,0.161,38,0.116,39,0.33,40,1.326,42,3.134,47,1.549,48,0.463,52,0.388,57,0.459,59,0.58,60,0.018,61,0.421,62,0.329,63,0.499,65,2.762,67,2.907,68,0.557,72,0.796,73,0.608,74,0.608,80,2.755,90,1.8,94,0.384,97,0.257,109,1.073,111,2.425,117,0.185,118,0.185,119,1.147,134,2.288,135,2.755,136,2.579,138,2.288,195,0.899,197,0.854,263,0.013,264,0.013,291,0.886,302,1.972,344,1.686,351,2.772,392,2.165,393,1.532,403,1.44,423,2.425,531,1.201,532,1.768,625,1.768,788,4.867,884,3.517,950,3.534,972,3.517,973,2.96,974,3.517,977,3.517,1187,3.207,1202,6.071,1220,5.566,1221,3.931,1223,3.517,1555,2.96,1926,3.931,1927,6.456,1928,6.81,1929,6.81,1930,5.848,1931,5.848,1932,5.848,1933,5.848,1934,4.559,1935,4.559,1936,5.848,1937,4.559,1938,5.848,1939,4.559,1940,5.848,1941,5.848,1942,4.559,1943,4.559,1944,4.559,1945,4.559,1946,5.848,1947,5.848]],["title/interfaces/Reaction.html",[528,1.789,1948,2.65]],["body/interfaces/Reaction.html",[3,0.23,4,0.23,8,0.201,38,0.145,39,0.377,60,0.017,62,0.347,75,2.849,77,3.308,117,0.23,263,0.015,264,0.015,291,0.922,450,3.813,528,2.691,529,3.68,1552,4.439,1668,5.667,1948,4.704,1949,4.886,1950,6.334,1951,6.334]],["title/injectables/ReactionService.html",[531,0.774,1952,2.906]],["body/injectables/ReactionService.html",[3,0.183,4,0.183,8,0.16,38,0.115,39,0.328,48,0.46,49,3.075,52,0.547,57,0.452,59,0.578,60,0.018,61,0.42,62,0.321,63,0.497,68,0.556,73,0.469,74,0.469,75,2.723,77,2.034,94,0.362,97,0.255,117,0.183,118,0.183,119,1.26,126,2.487,263,0.013,264,0.013,283,3.177,291,0.843,336,2.75,344,1.67,403,1.671,531,1.194,532,1.751,536,4.343,574,2.729,589,3.484,607,3.512,612,2.267,613,3.484,614,3.177,615,3.484,616,2.933,617,3.484,620,3.484,622,2.555,625,1.751,654,3.484,658,3.484,663,3.484,664,3.484,666,4.483,667,3.484,668,3.484,669,3.484,670,3.484,674,3.484,679,3.484,1552,2.729,1621,4.483,1668,4.958,1702,3.894,1731,3.894,1754,5.541,1948,5.401,1950,3.894,1951,3.894,1952,4.483,1953,3.894,1954,5.813,1955,6.786,1956,5.813,1957,5.813,1958,5.813,1959,5.813,1960,5.813,1961,4.517,1962,4.517,1963,5.813,1964,4.517,1965,5.813,1966,4.517,1967,6.427,1968,5.813,1969,4.517,1970,4.517,1971,4.517,1972,4.517,1973,4.517,1974,4.517,1975,4.517,1976,4.517,1977,4.517,1978,4.517,1979,4.517,1980,4.517,1981,4.517,1982,6.427,1983,4.517,1984,4.517]],["title/components/ResetPasswordComponent.html",[0,0.106,240,0.579]],["body/components/ResetPasswordComponent.html",[0,0.154,1,0.513,2,0.728,3,0.135,4,0.135,5,0.539,6,0.566,7,0.566,8,0.118,12,0.89,14,0.438,17,0.487,18,1.212,19,1.337,20,0.968,22,0.728,23,0.656,24,0.804,32,2.353,33,1.295,34,0.804,36,0.804,38,0.085,39,0.267,43,1.039,46,1.849,48,0.374,52,0.284,57,0.446,59,0.468,60,0.018,61,0.406,62,0.309,63,0.403,68,0.52,72,0.726,73,0.572,74,0.572,94,0.381,97,0.188,108,1.292,112,0.513,113,0.765,115,0.75,116,0.82,117,0.135,118,0.135,119,0.653,137,1.672,167,0.566,168,0.804,169,0.921,170,0.438,171,1.017,172,0.566,173,0.804,174,0.513,175,0.566,176,0.513,177,0.566,178,0.539,179,0.804,180,0.513,181,0.539,182,0.566,183,0.513,184,0.566,185,0.513,186,0.566,187,0.513,188,0.89,189,0.513,190,0.804,191,0.513,192,0.513,193,0.566,194,0.513,195,0.728,196,0.566,197,0.487,198,0.539,199,0.804,200,0.513,201,0.728,202,0.804,203,0.513,204,0.935,205,0.513,206,0.566,207,0.513,208,0.566,209,0.513,210,0.804,211,0.804,212,0.728,213,0.513,214,0.566,215,0.513,216,0.566,217,0.513,218,1.01,219,0.513,220,0.566,221,0.513,222,0.566,223,0.513,224,0.566,225,0.513,226,0.513,227,0.539,228,0.539,229,0.391,230,0.566,231,0.513,232,0.566,233,0.566,234,0.539,235,0.566,236,0.566,237,0.487,238,0.539,239,0.566,240,0.921,241,1.148,242,0.566,243,0.539,244,0.804,245,0.566,246,0.513,247,0.566,248,0.513,249,0.539,250,0.566,251,0.513,252,0.566,253,0.513,254,0.391,255,0.539,256,0.566,257,0.487,258,0.487,259,0.566,260,0.487,261,0.539,262,0.566,263,0.011,264,0.011,291,0.867,350,2.925,351,2.239,353,4.212,360,1.582,361,3.869,362,4.212,363,2.696,384,1.772,388,2.344,389,1.772,390,1.672,391,1.772,392,1.582,393,1.238,402,2.859,409,2.374,415,3.328,420,2.344,421,3.328,422,2.344,424,2.344,425,2.344,426,2.344,427,4.115,444,4.618,446,3.869,447,3.888,506,2.57,507,2.57,509,2.57,510,2.57,511,2.014,512,2.57,513,2.57,515,2.57,688,3.328,719,2.57,726,2.57,729,4.742,749,4.212,750,4.079,752,4.079,766,4.079,1315,3.869,1356,5.118,1432,4.079,1433,2.873,1442,2.57,1985,6.272,1986,2.873,1987,4.731,1988,4.731,1989,4.742,1990,5.5,1991,4.079,1992,5.987,1993,5.987,1994,4.731,1995,4.731,1996,4.079,1997,3.332,1998,4.079,1999,3.332,2000,3.332,2001,3.332,2002,3.332,2003,4.731,2004,3.332,2005,3.332,2006,3.332,2007,3.332,2008,3.332,2009,3.332,2010,3.332,2011,3.332,2012,3.332,2013,3.332,2014,3.332,2015,4.731,2016,4.731,2017,4.731]],["title/components/SearchResultsComponent.html",[0,0.106,246,0.579]],["body/components/SearchResultsComponent.html",[0,0.152,1,0.499,2,0.714,3,0.131,4,0.131,5,0.525,6,0.551,7,0.551,8,0.115,12,0.876,14,0.777,17,0.474,18,1.21,19,1.335,20,0.957,22,0.714,23,0.643,24,0.788,33,1.275,34,0.788,36,0.788,38,0.083,39,0.262,40,1.433,43,1.031,46,1.964,47,1.4,48,0.367,52,0.395,57,0.452,59,0.395,60,0.018,61,0.415,62,0.323,63,0.34,68,0.468,72,0.358,73,0.563,74,0.563,94,0.404,95,1.834,97,0.183,104,1.46,108,1.257,109,0.763,112,0.499,113,0.751,115,0.73,116,0.798,117,0.131,118,0.131,119,0.636,122,3.013,141,3.013,167,0.551,168,0.788,169,0.714,170,0.426,171,1.005,172,0.551,173,0.788,174,0.499,175,0.551,176,0.499,177,0.551,178,0.525,179,0.788,180,0.499,181,0.525,182,0.551,183,0.499,184,0.551,185,0.499,186,0.551,187,0.499,188,0.876,189,0.499,190,0.788,191,0.499,192,0.499,193,0.551,194,0.499,195,0.714,196,0.551,197,0.474,198,0.525,199,0.788,200,0.499,201,0.499,202,0.788,203,0.499,204,0.921,205,0.499,206,0.551,207,0.499,208,0.551,209,0.499,210,0.788,211,0.788,212,0.499,213,0.499,214,0.551,215,0.499,216,0.551,217,0.499,218,1.001,219,0.499,220,0.551,221,0.499,222,0.551,223,0.499,224,0.551,225,0.499,226,0.499,227,0.525,228,0.525,229,0.694,230,0.551,231,0.499,232,0.551,233,0.551,234,0.525,235,0.551,236,0.551,237,0.474,238,0.525,239,0.551,240,0.499,241,0.551,242,0.551,243,0.525,244,1.165,245,0.551,246,0.91,247,0.551,248,0.499,249,0.525,250,0.551,251,0.499,252,0.551,253,0.499,254,0.804,255,0.525,256,0.551,257,0.474,258,0.864,259,0.551,260,0.474,261,0.525,262,0.551,263,0.013,264,0.01,271,3.518,291,0.786,302,1.249,306,1.54,309,2.282,310,2.106,336,3.029,341,1.54,351,1.32,360,1.54,403,1.456,1039,2.501,1115,4.671,1195,3.264,1196,3.013,1198,3.188,1199,3.84,1216,1.725,1232,2.106,1233,1.96,1307,2.882,1552,2.804,1626,3.579,1703,2.106,1792,3.013,1800,4.227,1809,4.671,2018,6.342,2019,6.342,2020,2.796,2021,4.64,2022,4.64,2023,4.981,2024,6.51,2025,4.64,2026,5.914,2027,5.418,2028,5.418,2029,4.64,2030,3.243,2031,3.243,2032,3.243,2033,3.243,2034,3.243,2035,3.243,2036,4.64,2037,3.243,2038,3.243,2039,3.243,2040,3.243,2041,3.243,2042,3.243,2043,3.243,2044,3.243,2045,3.243,2046,3.243,2047,3.243,2048,3.243,2049,5.914,2050,4.64,2051,4.64]],["title/injectables/SearchService.html",[531,0.774,1810,2.65]],["body/injectables/SearchService.html",[3,0.151,4,0.151,8,0.132,14,1,38,0.095,41,1.796,47,1.462,48,0.404,52,0.435,56,1.69,57,0.455,59,0.62,60,0.018,61,0.451,62,0.339,63,0.534,68,0.576,94,0.4,97,0.21,103,1.145,104,1.675,105,3.152,106,2.104,107,1.978,109,0.875,117,0.151,118,0.151,119,1.291,122,3.317,125,2.425,141,4.73,229,0.832,254,0.876,263,0.011,264,0.011,291,0.923,302,1.69,306,1.766,341,2.425,344,1.375,393,1.53,403,1.793,497,2.616,531,1.049,532,1.442,625,1.442,633,2.869,644,2.616,984,4.404,987,3.94,1033,2.616,1061,5.03,1552,4.401,1555,2.415,1593,3.94,1626,5.373,1679,4.404,1703,2.415,1810,3.593,1817,5.373,2052,3.206,2053,5.108,2054,6.28,2055,5.108,2056,5.834,2057,5.108,2058,4.404,2059,5.108,2060,5.108,2061,3.719,2062,5.108,2063,3.719,2064,5.108,2065,3.719,2066,3.719,2067,5.108,2068,3.719,2069,3.719,2070,6.28,2071,3.719,2072,5.834,2073,5.108,2074,3.719,2075,5.108,2076,3.719,2077,5.108,2078,3.719,2079,5.108,2080,3.719,2081,5.108,2082,5.834,2083,3.719,2084,3.719,2085,3.719,2086,3.719,2087,3.719,2088,3.719,2089,6.583,2090,5.834,2091,5.108,2092,5.415,2093,5.415,2094,6.28,2095,3.719,2096,3.719,2097,3.719,2098,3.719,2099,3.719,2100,3.719,2101,3.719,2102,3.719,2103,5.108,2104,3.719]],["title/injectables/SharedService.html",[275,1.789,531,0.774]],["body/injectables/SharedService.html",[3,0.202,4,0.202,8,0.177,23,0.859,38,0.127,39,0.349,48,0.49,52,0.573,57,0.475,59,0.425,60,0.018,61,0.309,62,0.283,63,0.366,68,0.557,72,0.8,73,0.752,74,0.752,94,0.349,97,0.282,117,0.202,118,0.202,263,0.014,264,0.014,275,2.943,302,1.668,344,1.848,393,1.66,403,1.23,476,2.603,531,1.273,532,1.938,550,4.572,610,4.309,625,1.938,1446,5.195,1449,6.447,1589,4.309,1697,6.241,1711,3.516,2105,4.309,2106,6.735,2107,7.478,2108,6.735,2109,6.197,2110,6.197,2111,4.998,2112,4.998,2113,4.998,2114,6.197,2115,4.998,2116,6.735,2117,6.197,2118,4.998,2119,4.998,2120,4.998,2121,6.197,2122,4.998,2123,4.998,2124,4.998,2125,4.998,2126,4.998,2127,4.998]],["title/components/SignInComponent.html",[0,0.106,248,0.579]],["body/components/SignInComponent.html",[0,0.139,1,0.43,2,0.64,3,0.113,4,0.113,5,0.452,6,0.475,7,0.475,8,0.099,12,0.805,14,0.367,17,0.408,18,1.199,19,1.322,20,0.892,22,0.64,23,0.69,24,0.708,32,2.128,33,1.171,34,0.708,36,0.708,38,0.071,39,0.235,43,0.984,46,1.739,47,1.376,48,0.329,49,2.128,52,0.354,57,0.458,59,0.469,60,0.018,61,0.396,62,0.307,63,0.404,68,0.52,72,0.609,73,0.711,74,0.711,90,2.187,94,0.391,97,0.158,108,1.084,109,0.658,112,0.43,113,0.673,115,0.629,116,0.688,117,0.113,118,0.113,126,2.128,140,2.929,143,3.59,149,3.878,155,5.277,157,2.929,159,4.752,160,2.929,161,2.929,162,3.878,164,3.59,167,0.475,168,0.708,169,0.64,170,0.367,171,0.937,172,0.475,173,0.708,174,0.43,175,0.475,176,0.43,177,0.475,178,0.452,179,0.708,180,0.43,181,0.452,182,0.475,183,0.43,184,0.475,185,0.43,186,0.475,187,0.43,188,0.805,189,0.43,190,0.708,191,0.43,192,0.43,193,0.475,194,0.43,195,0.64,196,0.475,197,0.408,198,0.452,199,0.708,200,0.43,201,0.43,202,0.708,203,0.43,204,0.845,205,0.43,206,0.475,207,0.848,208,0.475,209,0.848,210,0.845,211,0.708,212,0.43,213,0.43,214,0.475,215,0.43,216,0.475,217,0.43,218,0.95,219,0.43,220,0.475,221,0.43,222,0.475,223,0.43,224,0.475,225,0.43,226,0.43,227,0.452,228,0.452,229,0.328,230,0.475,231,0.43,232,0.475,233,0.475,234,0.452,235,0.475,236,0.475,237,0.408,238,0.452,239,0.475,240,0.43,241,0.475,242,0.475,243,0.452,244,0.708,245,0.475,246,0.43,247,0.475,248,0.848,249,1.035,250,0.475,251,0.43,252,0.475,253,0.43,254,0.771,255,0.452,256,0.475,257,0.408,258,0.408,259,0.475,260,0.408,261,0.452,262,0.475,263,0.009,264,0.009,291,0.646,302,1.77,328,2.516,350,2.646,355,2.244,360,1.328,363,2.482,379,2.516,385,1.689,391,1.487,393,1.119,402,1.689,403,1.225,409,1.403,413,1.967,427,4.208,441,3.837,447,1.816,476,1.539,481,2.41,498,1.816,520,2.516,527,4.752,536,3.734,600,1.581,607,2.516,612,1.403,614,1.967,616,1.816,622,1.581,652,1.967,749,2.929,751,3.59,753,3.734,754,3.734,755,4.012,756,4.252,757,2.929,758,3.212,759,3.212,1027,3.59,1086,3.837,1117,4.289,1153,3.59,1155,3.59,1196,2.704,1218,2.41,1283,4.752,1307,2.646,1328,3.59,1350,3.59,1396,3.59,1422,2.41,1423,5.738,1436,1.967,1439,4.252,1456,1.816,1458,1.689,2128,6.414,2129,2.41,2130,4.975,2131,4.164,2132,4.164,2133,4.975,2134,5.894,2135,4.975,2136,4.975,2137,4.975,2138,5.894,2139,4.164,2140,4.164,2141,4.975,2142,6.577,2143,5.512,2144,4.164,2145,4.164,2146,2.796,2147,2.796,2148,2.796,2149,2.796,2150,2.796,2151,2.796,2152,2.796,2153,2.796,2154,2.796,2155,2.796,2156,2.796,2157,2.796,2158,2.796,2159,2.796,2160,2.796,2161,2.796,2162,2.796,2163,2.796,2164,2.796,2165,4.164,2166,2.796,2167,2.796,2168,2.796,2169,2.796,2170,4.164,2171,2.796,2172,2.796,2173,2.796,2174,2.796,2175,2.796,2176,2.796,2177,2.796,2178,2.796,2179,4.164,2180,4.164,2181,4.164,2182,4.164,2183,4.164,2184,4.164,2185,4.164,2186,4.164,2187,4.164,2188,4.164,2189,4.164,2190,4.164,2191,4.164,2192,4.164,2193,4.164]],["title/injectables/StateManagementService.html",[531,0.774,1501,2.446]],["body/injectables/StateManagementService.html",[3,0.211,4,0.211,8,0.184,38,0.133,39,0.358,48,0.502,57,0.461,59,0.541,60,0.018,61,0.393,62,0.29,63,0.465,68,0.565,72,0.702,73,0.66,74,0.66,75,2.462,94,0.358,97,0.293,117,0.211,118,0.211,263,0.014,264,0.014,291,0.873,344,1.923,393,1.676,403,1.563,476,2.64,531,1.304,532,2.017,625,2.017,988,4.823,1501,4.124,1711,3.659,2194,6.501,2195,4.012,2196,6.855,2197,7.139,2198,7.139,2199,6.35,2200,6.35,2201,5.201,2202,5.201,2203,6.35,2204,5.201,2205,6.35,2206,5.201,2207,7.139,2208,4.484,2209,5.201,2210,5.201,2211,5.201,2212,5.201,2213,5.201,2214,5.201,2215,5.201,2216,5.201]],["title/directives/TagToComponentDirective.html",[170,0.495,260,0.55]],["body/directives/TagToComponentDirective.html",[2,0.642,3,0.169,4,0.169,5,0.675,8,0.148,17,0.61,18,0.849,22,0.849,23,0.858,38,0.106,39,0.311,40,1.271,47,1.6,48,0.437,52,0.47,57,0.456,59,0.47,60,0.018,61,0.342,62,0.313,63,0.404,65,1.786,68,0.521,72,0.757,73,0.643,74,0.574,90,1.904,94,0.371,97,0.235,109,0.983,117,0.169,118,0.169,119,1.407,169,0.849,170,0.812,229,0.726,237,0.61,238,0.675,254,0.49,257,0.61,260,0.807,261,0.893,263,0.012,264,0.012,291,0.648,302,1.486,341,1.982,351,2.518,358,3.885,365,3.22,366,3.304,375,2.711,383,2.711,389,2.22,390,2.095,393,1.541,476,1.544,511,2.523,816,3.599,1436,2.937,1451,5.676,1455,4.353,1456,4.275,1458,4.336,1620,4.275,1792,3.586,1800,4.018,1814,5.676,1818,5.903,1830,3.599,1845,5.334,1848,2.937,1849,3.599,1872,3.599,1874,3.599,1885,3.599,1886,3.22,1887,3.599,1888,3.599,1889,3.599,1890,3.599,1891,4.259,1892,3.599,1894,3.599,1895,3.599,1901,3.599,1923,3.599,2217,6.417,2218,3.599,2219,6.187,2220,5.522,2221,6.584,2222,6.187,2223,4.175,2224,6.187,2225,6.584,2226,5.522,2227,5.522,2228,4.175,2229,5.522,2230,5.522,2231,6.187,2232,5.522,2233,4.175,2234,4.175,2235,4.175,2236,4.175,2237,4.175,2238,5.522,2239,4.175,2240,4.175,2241,5.522,2242,5.522,2243,4.175,2244,4.175,2245,4.175,2246,4.175,2247,4.175,2248,4.175,2249,4.175,2250,4.175,2251,4.175,2252,4.175,2253,4.175,2254,4.175,2255,4.175,2256,4.175,2257,4.175,2258,4.175,2259,4.175,2260,4.175,2261,4.175,2262,4.175,2263,4.175,2264,4.175,2265,4.175,2266,4.175,2267,4.175]],["title/components/ThreadComponent.html",[0,0.106,251,0.579]],["body/components/ThreadComponent.html",[0,0.136,1,0.412,2,0.621,3,0.109,4,0.109,5,0.434,6,0.456,7,0.456,8,0.095,9,2.632,12,0.785,14,0.352,17,0.392,18,1.196,19,1.318,20,0.873,22,0.621,23,0.559,24,0.686,32,2.075,34,0.686,36,0.686,38,0.124,39,0.227,40,1.474,41,1.782,43,0.971,47,1.456,48,0.319,52,0.343,56,1.558,57,0.46,59,0.459,60,0.018,61,0.391,62,0.328,63,0.395,68,0.514,72,0.536,73,0.632,74,0.632,77,1.817,90,1.242,94,0.397,97,0.227,103,0.825,108,1.039,109,0.631,112,0.412,113,0.785,117,0.109,118,0.109,167,0.456,168,0.686,169,0.621,170,0.352,171,0.917,172,0.456,173,0.686,174,0.412,175,0.456,176,0.412,177,0.456,178,0.434,179,0.686,180,0.412,181,0.434,182,0.456,183,0.412,184,0.456,185,0.412,186,0.456,187,0.412,188,0.785,189,0.412,190,0.686,191,0.412,192,0.412,193,0.456,194,0.412,195,0.621,196,0.456,197,0.392,198,0.434,199,0.686,200,0.412,201,0.412,202,0.686,203,0.412,204,0.824,205,0.412,206,0.456,207,0.412,208,0.456,209,0.412,210,0.686,211,0.686,212,0.412,213,0.412,214,0.456,215,0.412,216,0.456,217,0.412,218,0.936,219,0.412,220,0.456,221,0.412,222,0.456,223,0.412,224,0.456,225,0.412,226,0.412,227,0.873,228,0.873,229,0.794,230,0.456,231,0.412,232,0.456,233,0.456,234,0.434,235,0.456,236,0.456,237,0.392,238,0.434,239,0.456,240,0.412,241,0.456,242,0.456,243,0.434,244,0.686,245,0.456,246,0.412,247,0.456,248,0.412,249,0.434,250,0.456,251,0.83,252,0.456,253,0.412,254,0.633,255,0.434,256,0.456,257,0.392,258,0.392,259,0.456,260,0.392,261,0.434,262,0.456,263,0.009,264,0.009,275,3.215,291,0.817,302,0.722,306,1.273,311,1.516,336,2.896,338,2.025,383,1.741,403,1.329,410,3.742,433,3.413,450,3.571,476,1.492,484,2.311,550,3.505,569,2.438,577,3.797,594,2.438,616,1.741,622,1.516,640,2.62,987,3.759,1033,1.886,1060,4.163,1198,3.049,1199,3.505,1216,1.426,1227,2.068,1232,1.741,1233,1.62,1285,2.311,1616,3.112,1617,3.112,1618,3.112,1620,2.62,1622,3.112,1703,1.741,1735,3.478,2268,2.311,2269,4.035,2270,4.035,2271,5.789,2272,4.851,2273,4.851,2274,4.183,2275,4.851,2276,3.478,2277,4.035,2278,4.851,2279,4.851,2280,4.035,2281,5.398,2282,2.681,2283,4.035,2284,2.681,2285,3.478,2286,2.681,2287,2.311,2288,4.035,2289,2.681,2290,2.681,2291,2.681,2292,2.681,2293,4.035,2294,2.681,2295,4.654,2296,2.681,2297,2.681,2298,2.681,2299,4.035,2300,2.681,2301,2.681,2302,4.035,2303,2.681,2304,2.681,2305,2.681,2306,3.478,2307,3.478,2308,3.478,2309,3.478,2310,3.478,2311,3.478,2312,3.478,2313,3.478,2314,3.478,2315,3.478,2316,3.478,2317,3.478,2318,2.681,2319,2.681,2320,2.681,2321,2.681,2322,4.035,2323,4.035,2324,4.035,2325,4.035,2326,4.035,2327,4.035,2328,4.035,2329,2.681,2330,2.681,2331,2.311,2332,2.681,2333,4.035,2334,2.681,2335,2.681,2336,4.035,2337,2.681,2338,2.681,2339,2.681,2340,2.681,2341,2.681,2342,4.035,2343,4.851,2344,2.681,2345,4.183,2346,2.681,2347,2.681,2348,4.851,2349,2.681,2350,4.851,2351,2.681,2352,2.681,2353,2.681,2354,4.035,2355,2.311,2356,2.311,2357,2.311,2358,2.311,2359,2.311,2360,2.311,2361,2.681,2362,2.681,2363,2.681,2364,2.681,2365,4.035,2366,4.035,2367,4.035,2368,4.035,2369,6.083,2370,4.035]],["title/injectables/ThreadService.html",[531,0.774,1198,1.696]],["body/injectables/ThreadService.html",[3,0.227,4,0.227,8,0.199,23,0.777,38,0.143,39,0.375,48,0.526,52,0.603,57,0.453,60,0.018,62,0.256,68,0.526,72,0.735,73,0.583,74,0.583,90,2.18,94,0.316,97,0.316,117,0.227,118,0.227,263,0.015,264,0.015,302,1.789,344,2.074,531,1.365,532,2.175,625,2.175,1198,2.992,1199,4.755,2371,4.836,2372,7.082,2373,7.322,2374,6.646,2375,5.609,2376,5.609,2377,6.646]],["title/classes/User.html",[118,0.153,254,0.442]],["body/classes/User.html",[3,0.19,4,0.19,8,0.166,38,0.12,39,0.336,40,1.345,48,0.472,52,0.4,57,0.473,59,0.4,60,0.018,61,0.45,62,0.347,63,0.521,68,0.372,75,2.756,117,0.19,118,0.19,201,1.093,254,0.699,263,0.013,264,0.013,291,0.924,302,1.955,402,4.296,403,1.157,865,3.308,1331,6.129,1332,6.129,1333,6.129,1334,6.129,1335,6.129,1336,5.939,1380,5.142,1381,5.142,1382,5.142,1383,5.142,1384,5.142,1385,5.142,1386,5.142,1387,5.142,1388,4.053,2378,4.702,2379,4.053,2380,5.964,2381,5.964,2382,7.537,2383,4.702,2384,4.702,2385,4.702,2386,4.702,2387,4.702,2388,4.702,2389,4.702,2390,4.702,2391,4.702,2392,4.702,2393,4.702,2394,4.702,2395,4.702,2396,4.702,2397,4.702,2398,4.702,2399,4.702,2400,4.702]],["title/injectables/UserAuthService.html",[363,1.696,531,0.774]],["body/injectables/UserAuthService.html",[3,0.188,4,0.131,8,0.114,38,0.082,39,0.261,40,1.284,46,1.885,47,1.521,48,0.366,49,3.319,52,0.275,57,0.473,59,0.602,60,0.018,61,0.461,62,0.342,63,0.518,68,0.586,69,3.141,73,0.65,74,0.65,94,0.367,97,0.182,116,0.796,117,0.131,118,0.131,119,1.387,126,3.064,129,1.72,130,1.254,201,1.151,249,0.523,254,0.803,263,0.01,264,0.01,291,0.913,344,1.196,363,2.085,393,0.728,402,4.139,403,1.742,433,4.155,476,2,498,2.1,531,0.951,532,1.254,536,3.93,574,3.777,607,2.798,612,1.623,622,1.829,625,1.254,734,2.788,744,2.788,745,2.788,824,2.788,865,3.257,881,2.1,1086,3.572,1101,5.389,1130,2.788,1292,5.092,1315,4.819,1320,5.092,1747,2.788,1748,3.992,1756,2.788,1989,3.992,1991,3.992,1996,3.992,1998,3.992,2401,2.788,2402,7.162,2403,5.409,2404,5.409,2405,5.409,2406,4.63,2407,5.906,2408,5.906,2409,4.63,2410,5.906,2411,4.63,2412,4.63,2413,4.63,2414,4.63,2415,3.233,2416,4.63,2417,4.63,2418,3.233,2419,3.233,2420,3.233,2421,3.233,2422,4.63,2423,3.233,2424,3.233,2425,4.63,2426,3.233,2427,3.233,2428,4.63,2429,3.233,2430,4.63,2431,3.233,2432,3.233,2433,3.233,2434,4.63,2435,3.233,2436,4.63,2437,3.233,2438,4.63,2439,3.233,2440,3.233,2441,3.233,2442,3.233,2443,3.233,2444,3.233,2445,3.233,2446,4.63,2447,3.233,2448,3.233,2449,3.233,2450,4.664,2451,3.233,2452,3.233,2453,3.233,2454,3.233,2455,3.233,2456,3.233,2457,3.233,2458,3.233,2459,3.233,2460,3.233,2461,3.233,2462,3.233,2463,3.233,2464,3.233,2465,4.63,2466,5.409,2467,3.233,2468,3.233,2469,3.233,2470,3.233,2471,3.233,2472,3.233,2473,3.233,2474,4.63,2475,3.233,2476,3.233,2477,3.233,2478,3.233,2479,4.63,2480,3.233,2481,3.233,2482,3.233,2483,3.233,2484,3.233,2485,3.233,2486,3.233,2487,4.63,2488,3.233,2489,3.233,2490,3.233,2491,3.233,2492,3.233,2493,3.233,2494,3.233,2495,3.233,2496,4.63,2497,3.233,2498,4.63,2499,3.233,2500,3.233,2501,3.233]],["title/components/UserCreatedSnackbarComponent.html",[0,0.106,253,0.579]],["body/components/UserCreatedSnackbarComponent.html",[0,0.176,1,0.659,2,0.864,3,0.174,4,0.174,5,0.693,6,0.728,7,0.728,8,0.152,12,1.014,14,0.563,17,0.626,18,1.227,19,1.355,20,1.076,22,0.864,23,0.779,24,0.728,34,0.955,36,0.955,38,0.109,39,0.317,43,1.111,57,0.265,60,0.017,61,0.388,73,0.445,74,0.445,94,0.317,97,0.242,112,0.659,113,0.909,117,0.174,118,0.174,167,0.728,168,0.955,169,0.864,170,0.563,171,1.13,172,0.728,173,0.955,174,0.659,175,0.728,176,0.659,177,0.728,178,0.693,179,0.955,180,0.659,181,0.693,182,0.728,183,0.659,184,0.728,185,0.659,186,0.728,187,0.659,188,1.014,189,0.659,190,0.955,191,0.659,192,0.659,193,0.728,194,0.659,195,0.864,196,0.728,197,0.626,198,0.693,199,0.955,200,0.659,201,0.659,202,0.955,203,0.659,204,1.065,205,0.659,206,0.728,207,0.659,208,0.728,209,0.659,210,0.955,211,0.955,212,0.659,213,0.659,214,0.728,215,0.659,216,0.728,217,0.659,218,1.09,219,0.659,220,0.728,221,0.659,222,0.728,223,0.659,224,0.728,225,0.659,226,0.659,227,0.693,228,0.693,229,0.503,230,0.728,231,0.659,232,0.728,233,0.728,234,0.693,235,0.728,236,0.728,237,0.626,238,0.693,239,0.728,240,0.659,241,0.728,242,0.728,243,0.693,244,0.955,245,0.728,246,0.659,247,0.728,248,0.659,249,0.693,250,0.728,251,0.659,252,0.728,253,1.023,254,0.847,255,1.219,256,1.065,257,0.626,258,0.626,259,0.728,260,0.626,261,0.693,262,0.728,263,0.012,264,0.012,389,2.279,390,2.151,480,4.333,612,2.151,1073,4.843,1244,3.015,1245,4.333,1246,4.333,1247,4.834,1248,4.333,1249,3.306,1250,3.306,1439,4.333,2502,4.843,2503,5.618]],["title/injectables/UserManagementService.html",[277,2.276,531,0.774]],["body/injectables/UserManagementService.html",[3,0.174,4,0.174,8,0.152,38,0.11,41,1.932,47,1.525,48,0.445,52,0.479,56,1.792,57,0.454,59,0.604,60,0.018,61,0.439,62,0.324,63,0.52,68,0.572,69,2.994,75,2.582,94,0.375,97,0.242,103,1.323,109,1.012,117,0.174,118,0.174,119,1.306,125,2.041,254,0.929,263,0.013,264,0.013,272,3.96,274,5.084,277,3.401,291,0.911,293,4.685,306,2.041,339,3.542,341,2.041,344,1.589,393,1.266,403,1.805,531,1.156,532,1.667,600,3.767,625,1.667,933,4.342,1052,3.706,1555,2.791,1817,3.315,2058,4.853,2092,3.706,2093,3.706,2195,3.315,2208,3.706,2504,6.391,2505,6.659,2506,6.659,2507,5.629,2508,5.629,2509,5.629,2510,5.629,2511,5.629,2512,4.298,2513,4.298,2514,4.298,2515,5.629,2516,4.298,2517,5.629,2518,4.298,2519,5.629,2520,4.298,2521,5.629,2522,4.298,2523,4.298,2524,4.298,2525,5.629,2526,4.298,2527,5.629,2528,4.298,2529,4.298,2530,5.629,2531,4.298,2532,4.298,2533,4.298,2534,4.298,2535,4.298,2536,4.298,2537,5.629,2538,4.298]],["title/injectables/UtilityService.html",[531,0.774,2023,2.65]],["body/injectables/UtilityService.html",[3,0.205,4,0.205,8,0.179,38,0.129,39,0.352,41,1.924,48,0.494,52,0.431,56,1.904,57,0.45,59,0.577,60,0.018,61,0.419,62,0.323,63,0.496,68,0.536,73,0.527,74,0.527,94,0.382,97,0.286,103,1.56,117,0.205,118,0.205,229,0.83,263,0.014,264,0.014,291,0.868,344,1.874,392,2.406,450,3.714,476,1.874,531,1.284,532,1.965,625,1.965,640,3.291,1528,4.369,1703,3.291,2023,4.397,2274,5.843,2276,5.388,2285,5.388,2287,4.369,2295,4.369,2306,5.388,2307,5.388,2308,5.388,2309,5.388,2310,5.388,2311,5.388,2312,5.388,2313,5.388,2314,5.388,2315,5.388,2316,5.388,2317,5.388,2345,5.388,2355,4.369,2356,4.369,2357,4.369,2358,4.369,2359,4.369,2360,4.369,2539,4.369,2540,6.777,2541,6.25,2542,5.068,2543,5.068,2544,5.068,2545,5.068,2546,5.068,2547,5.068]],["title/coverage.html",[2548,4.443]],["body/coverage.html",[0,0.221,1,0.547,8,0.126,9,2.702,10,3.428,11,3.366,12,1.135,13,3.819,14,0.748,15,3.483,16,3.819,20,0.996,42,1.521,47,0.764,56,0.957,60,0.018,62,0.162,112,0.547,113,0.996,118,0.144,170,0.65,174,0.547,176,0.547,178,0.575,180,0.547,183,0.547,185,0.547,187,0.547,188,0.996,189,0.547,191,0.547,192,0.762,194,0.547,195,0.948,197,0.519,198,0.575,200,0.547,203,0.547,205,0.547,207,0.547,209,0.547,212,0.547,213,0.547,215,0.762,217,0.547,219,0.547,221,0.547,223,0.547,225,0.547,226,0.547,227,0.575,228,0.575,229,0.417,231,0.547,234,0.575,237,0.519,240,0.547,243,0.575,246,0.547,248,0.547,251,0.547,253,0.547,254,0.581,255,0.801,258,0.519,260,0.519,263,0.011,264,0.011,275,1.688,277,2.148,336,3.418,343,3.065,363,1.601,384,1.891,387,2.501,427,3.794,428,3.065,476,1.314,480,2.742,528,3.076,530,3.065,531,1.533,533,3.065,726,2.742,727,3.065,728,3.065,768,2.501,769,3.065,770,3.065,849,3.819,850,3.819,874,2.501,906,3.914,907,2.501,908,3.065,944,2.742,945,3.065,950,2.148,973,3.215,978,3.065,979,3.065,987,2.011,1080,3.819,1081,3.819,1159,3.065,1160,3.065,1174,3.065,1175,3.065,1198,1.601,1243,3.065,1244,4.008,1252,3.065,1264,3.065,1287,3.065,1288,2.742,1289,3.065,1305,3.065,1356,2.501,1410,3.819,1423,2.742,1441,3.065,1442,2.742,1443,3.215,1444,3.819,1474,2.742,1489,2.742,1490,3.065,1501,2.309,1524,3.065,1539,2.742,1542,3.065,1547,3.065,1615,3.065,1623,3.065,1788,3.065,1789,3.065,1804,3.065,1805,3.065,1806,3.065,1810,2.501,1848,2.501,1912,3.065,1913,3.065,1926,3.065,1948,2.501,1949,3.065,1952,2.742,1953,3.065,1985,3.065,1986,3.065,2018,3.065,2019,3.065,2020,3.065,2023,2.501,2052,3.065,2105,3.065,2128,3.065,2129,3.065,2194,3.065,2195,3.819,2217,3.065,2218,3.065,2268,3.065,2331,3.065,2371,3.065,2379,3.065,2401,3.065,2502,3.065,2504,3.065,2539,3.065,2548,3.065,2549,3.555,2550,3.555,2551,3.555,2552,5.697,2553,4.269,2554,6.161,2555,3.065,2556,6.161,2557,3.065,2558,3.065,2559,3.065,2560,3.555,2561,3.555,2562,4.951,2563,3.555,2564,3.555,2565,3.555,2566,6.477,2567,6.161,2568,6.161,2569,3.555,2570,6.161,2571,5.697,2572,6.161,2573,3.555,2574,3.555,2575,6.161,2576,3.555,2577,3.555,2578,4.951,2579,3.555,2580,3.555,2581,3.555,2582,3.555,2583,3.555,2584,3.555,2585,3.555,2586,3.555,2587,5.697,2588,3.555,2589,3.555,2590,3.555,2591,4.951,2592,5.697,2593,4.951,2594,4.951,2595,4.951,2596,3.555,2597,3.555,2598,3.555,2599,3.065,2600,3.065,2601,3.555,2602,3.555]],["title/dependencies.html",[2603,2.707,2604,3.909]],["body/dependencies.html",[60,0.018,97,0.322,108,2.218,115,1.287,116,1.408,192,0.88,263,0.015,264,0.015,1170,4.931,1171,4.931,1711,4.024,1886,4.412,2604,4.931,2605,5.719,2606,7.784,2607,5.719,2608,6.722,2609,5.719,2610,5.719,2611,5.719,2612,5.719,2613,7.14,2614,6.722,2615,5.719,2616,5.719,2617,4.931,2618,5.719,2619,5.719,2620,5.719,2621,5.719,2622,5.719,2623,5.719,2624,5.719,2625,5.719]],["title/miscellaneous/enumerations.html",[2626,2.209,2627,3.909]],["body/miscellaneous/enumerations.html",[38,0.153,60,0.017,74,0.778,105,3.47,218,1.063,263,0.015,264,0.015,476,2.556,634,4.864,1060,5.333,2626,4.223,2627,5.175,2628,6.003,2629,6.914,2630,6.003]],["title/index.html",[38,0.08,2631,3.14,2632,3.14]],["body/index.html",[60,0.015,130,2.293,181,0.956,215,0.91,263,0.015,264,0.015,379,3.573,1338,5.098,2617,5.098,2633,7.239,2634,5.913,2635,7.239,2636,7.239,2637,5.098,2638,5.913,2639,5.913,2640,5.913,2641,5.913,2642,5.913,2643,5.913,2644,5.913,2645,5.913,2646,5.913,2647,5.913,2648,7.239,2649,5.913,2650,5.913,2651,5.913,2652,4.561,2653,5.913,2654,5.913]],["title/modules.html",[2655,4.443]],["body/modules.html",[60,0.016,263,0.016,264,0.016,2655,5.352]],["title/overview.html",[2652,3.975]],["body/overview.html",[2,0.941,60,0.016,118,0.248,257,0.894,263,0.016,264,0.016,529,3.975,532,2.373,640,3.975,2652,4.721,2656,6.121,2657,6.121,2658,6.121,2659,6.121]],["title/properties.html",[39,0.256,2603,2.707]],["body/properties.html",[39,0.349,60,0.016,263,0.016,264,0.016,2637,5.33,2660,6.182]],["title/miscellaneous/variables.html",[2626,2.209,2661,3.909]],["body/miscellaneous/variables.html",[38,0.144,60,0.018,62,0.305,73,0.763,74,0.763,263,0.015,264,0.015,265,5.751,1704,4.867,2450,4.867,2553,4.867,2555,6.122,2557,6.122,2558,4.867,2559,5.751,2599,4.867,2600,5.751,2626,3.972,2661,4.867,2662,5.645,2663,5.645,2664,6.671,2665,6.671,2666,5.645,2667,5.645,2668,5.645,2669,5.645,2670,5.645,2671,5.645,2672,5.645,2673,5.645,2674,5.645,2675,5.645,2676,5.645,2677,5.645,2678,5.645]]],"invertedIndex":[["",{"_index":60,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":336,"title":{},"body":{"components/AddMemberCardComponent.html":{},"injectables/ChannelFirebaseService.html":{},"injectables/CursorPositionService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/MainMenuComponent.html":{},"injectables/MessageService.html":{},"components/PopupSearchComponent.html":{},"injectables/ReactionService.html":{},"components/SearchResultsComponent.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2660,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":2625,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2556,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2570,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2567,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2572,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2594,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2552,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":2576,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2575,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2592,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2571,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2591,"title":{},"body":{"coverage.html":{}}}],["0/24",{"_index":2563,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2577,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":2582,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2560,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2595,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":2561,"title":{},"body":{"coverage.html":{}}}],["0/32",{"_index":2565,"title":{},"body":{"coverage.html":{}}}],["0/33",{"_index":2586,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2578,"title":{},"body":{"coverage.html":{}}}],["0/43",{"_index":2590,"title":{},"body":{"coverage.html":{}}}],["0/45",{"_index":2574,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2587,"title":{},"body":{"coverage.html":{}}}],["0/59",{"_index":2584,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2593,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2568,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2562,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2566,"title":{},"body":{"coverage.html":{}}}],["0px",{"_index":901,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["1",{"_index":640,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogEditChannelComponent.html":{},"components/ThreadComponent.html":{},"injectables/UtilityService.html":{},"overview.html":{}}}],["1.jpg",{"_index":464,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["1000",{"_index":2009,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["100dvw",{"_index":1038,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["1200",{"_index":1608,"title":{},"body":{"components/MainPageComponent.html":{}}}],["14",{"_index":2658,"title":{},"body":{"overview.html":{}}}],["17.0.1",{"_index":2611,"title":{},"body":{"dependencies.html":{}}}],["17.2.0",{"_index":2606,"title":{},"body":{"dependencies.html":{}}}],["17.2.2",{"_index":2617,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["17.3.4",{"_index":2608,"title":{},"body":{"dependencies.html":{}}}],["1970/01/01",{"_index":2299,"title":{},"body":{"components/ThreadComponent.html":{}}}],["2",{"_index":2657,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":2623,"title":{},"body":{"dependencies.html":{}}}],["2.jpg",{"_index":465,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["2000",{"_index":421,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["282px",{"_index":1487,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["3",{"_index":2638,"title":{},"body":{"index.html":{}}}],["3.jpg",{"_index":466,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["38",{"_index":2656,"title":{},"body":{"overview.html":{}}}],["4",{"_index":1337,"title":{},"body":{"components/LoginComponent.html":{}}}],["4.18.2",{"_index":2620,"title":{},"body":{"dependencies.html":{}}}],["4.jpg",{"_index":467,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["5",{"_index":2659,"title":{},"body":{"overview.html":{}}}],["5.jpg",{"_index":468,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["500",{"_index":418,"title":{},"body":{"components/AppComponent.html":{}}}],["500px",{"_index":977,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["554px",{"_index":139,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogShowMembersComponent.html":{}}}],["6",{"_index":2184,"title":{},"body":{"components/SignInComponent.html":{}}}],["6.jpg",{"_index":469,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["64;{{username",{"_index":1925,"title":{},"body":{"components/ProfileButtonComponent.html":{}}}],["7.8.0",{"_index":2621,"title":{},"body":{"dependencies.html":{}}}],["768",{"_index":1606,"title":{},"body":{"components/MainPageComponent.html":{}}}],["9.2.0",{"_index":2618,"title":{},"body":{"dependencies.html":{}}}],["_ngzone",{"_index":999,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["_snackbar",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["a.click",{"_index":1780,"title":{},"body":{"injectables/MessageService.html":{}}}],["a.download",{"_index":1778,"title":{},"body":{"injectables/MessageService.html":{}}}],["a.href",{"_index":1777,"title":{},"body":{"injectables/MessageService.html":{}}}],["a.style.display",{"_index":1775,"title":{},"body":{"injectables/MessageService.html":{}}}],["abbrechen",{"_index":1158,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["activatedroute",{"_index":447,"title":{},"body":{"components/AvatarComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{}}}],["active_members",{"_index":82,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["activechannelid",{"_index":1494,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["actual_component",{"_index":262,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["add",{"_index":20,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["addchannel",{"_index":540,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["addchannel(channel",{"_index":559,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["addchannelcardcomponent",{"_index":1,"title":{"components/AddChannelCardComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["adddoc",{"_index":615,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["adddoc(ref",{"_index":667,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["addemoji",{"_index":1165,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["addemoji(event",{"_index":1167,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["addmembercardcomponent",{"_index":112,"title":{"components/AddMemberCardComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["addmessage",{"_index":1632,"title":{},"body":{"injectables/MessageService.html":{}}}],["addmessage(message",{"_index":1651,"title":{},"body":{"injectables/MessageService.html":{}}}],["addprofilebutton",{"_index":1811,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["addprofilebutton(user",{"_index":1823,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["addreaction",{"_index":1954,"title":{},"body":{"injectables/ReactionService.html":{}}}],["addreaction(reaction",{"_index":1960,"title":{},"body":{"injectables/ReactionService.html":{}}}],["addtextnodetocontainer",{"_index":773,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["addtextnodetocontainer(container",{"_index":781,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["adresse",{"_index":755,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["aktiv",{"_index":1238,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["aktualisieren",{"_index":940,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["allchannelsquery",{"_index":711,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["alle",{"_index":331,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["allmessages",{"_index":1624,"title":{},"body":{"injectables/MessageService.html":{}}}],["anchortopleft",{"_index":903,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["anchortopright",{"_index":904,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["anderen",{"_index":165,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["angular",{"_index":2635,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2605,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2607,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/portal",{"_index":880,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["angular/cdk/text",{"_index":1030,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["angular/common",{"_index":115,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2609,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":97,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":2610,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/auth",{"_index":745,"title":{},"body":{"components/CheckEmailComponent.html":{},"injectables/UserAuthService.html":{}}}],["angular/fire/firestore",{"_index":622,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"injectables/UserAuthService.html":{}}}],["angular/fire/storage",{"_index":1710,"title":{},"body":{"injectables/MessageService.html":{}}}],["angular/forms",{"_index":108,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2612,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":101,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["angular/material/card",{"_index":98,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{}}}],["angular/material/checkbox",{"_index":2168,"title":{},"body":{"components/SignInComponent.html":{}}}],["angular/material/dialog",{"_index":102,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{}}}],["angular/material/expansion",{"_index":1516,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["angular/material/icon",{"_index":99,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["angular/material/input",{"_index":100,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["angular/material/progress",{"_index":1358,"title":{},"body":{"components/LoginComponent.html":{}}}],["angular/material/radio",{"_index":305,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["angular/material/snack",{"_index":389,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/ResetPasswordComponent.html":{},"directives/TagToComponentDirective.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["angular/platform",{"_index":2613,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":116,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":2616,"title":{},"body":{"dependencies.html":{}}}],["anmelden",{"_index":1407,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginSnackbarComponent.html":{}}}],["anmeldung",{"_index":1393,"title":{},"body":{"components/LoginComponent.html":{}}}],["anonymimg",{"_index":1445,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["antworten",{"_index":2370,"title":{},"body":{"components/ThreadComponent.html":{}}}],["any).clipboarddata",{"_index":2264,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["app",{"_index":19,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["app.component.html",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":174,"title":{"components/AppComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2559,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applyactioncode",{"_index":2447,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["applyactioncode(auth",{"_index":2472,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["applyfilters",{"_index":2053,"title":{},"body":{"injectables/SearchService.html":{}}}],["applyfilters(searchterm",{"_index":2062,"title":{},"body":{"injectables/SearchService.html":{}}}],["appopenprofile",{"_index":1790,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["appopenprofile]'},{'name",{"_index":259,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["apptagtocomponent",{"_index":261,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["april",{"_index":2309,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["arbeit",{"_index":1399,"title":{},"body":{"components/LoginComponent.html":{}}}],["arguments",{"_index":365,"title":{},"body":{"components/AppComponent.html":{},"components/MainPageComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["array",{"_index":672,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["array.from",{"_index":695,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["assets/img/avatar",{"_index":463,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["assets/img/mail.png",{"_index":1350,"title":{},"body":{"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["assets/img/mail_b.png",{"_index":1392,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets/img/person.png",{"_index":462,"title":{},"body":{"components/AvatarComponent.html":{},"components/MainHeaderComponent.html":{}}}],["assets/img/person_filled.png",{"_index":2165,"title":{},"body":{"components/SignInComponent.html":{}}}],["async",{"_index":49,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{}}}],["attachements",{"_index":1622,"title":{},"body":{"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["august",{"_index":2313,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["aus",{"_index":519,"title":{},"body":{"components/AvatarComponent.html":{}}}],["auth",{"_index":2402,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["auth.currentuser",{"_index":2476,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["autosize",{"_index":983,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["avatar",{"_index":429,"title":{},"body":{"components/AvatarComponent.html":{}}}],["avatar'},{'name",{"_index":177,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["avatar.component.html",{"_index":430,"title":{},"body":{"components/AvatarComponent.html":{}}}],["avatar.component.scss",{"_index":431,"title":{},"body":{"components/AvatarComponent.html":{}}}],["avatar/avatar.component",{"_index":1425,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["avatarcomponent",{"_index":176,"title":{"components/AvatarComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["avatars",{"_index":432,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["await",{"_index":126,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{}}}],["backend",{"_index":2646,"title":{},"body":{"index.html":{}}}],["backtochannels",{"_index":1449,"title":{},"body":{"components/MainHeaderComponent.html":{},"injectables/SharedService.html":{}}}],["backtochannelssubject",{"_index":2106,"title":{},"body":{"injectables/SharedService.html":{}}}],["bar",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/LoginComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/ResetPasswordComponent.html":{},"directives/TagToComponentDirective.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["bar'},{'name",{"_index":245,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["bar.component",{"_index":1475,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuComponent.html":{}}}],["bar.component.ts",{"_index":2585,"title":{},"body":{"coverage.html":{}}}],["bar/search",{"_index":1474,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuComponent.html":{},"coverage.html":{}}}],["bari",{"_index":1273,"title":{},"body":{"components/ImprintComponent.html":{}}}],["bearbeiten",{"_index":1068,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["bearbeitet",{"_index":1137,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["behavior",{"_index":2260,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["behaviorsubject",{"_index":2210,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["behaviorsubject(null",{"_index":2207,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["bei",{"_index":1398,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginPageComponent.html":{}}}],["beim",{"_index":939,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["beispiel",{"_index":154,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["benutzer",{"_index":1041,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/PopupSearchComponent.html":{}}}],["ber",{"_index":763,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["berein",{"_index":2017,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["bereits",{"_index":161,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/SignInComponent.html":{}}}],["beschreibung",{"_index":166,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["besten",{"_index":147,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["bestimmte",{"_index":333,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["bild",{"_index":523,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["bitte",{"_index":162,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["blob",{"_index":1770,"title":{},"body":{"injectables/MessageService.html":{}}}],["bloburl",{"_index":1658,"title":{},"body":{"injectables/MessageService.html":{}}}],["boolean",{"_index":302,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/AvatarComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"interfaces/Message.html":{},"injectables/ProfileService.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":2600,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":137,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/MainHeaderComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["break",{"_index":502,"title":{},"body":{"components/AvatarComponent.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["browser",{"_index":2614,"title":{},"body":{"dependencies.html":{}}}],["button",{"_index":67,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"directives/OpenProfileDirective.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{}}}],["button'},{'name",{"_index":239,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["button.component",{"_index":1849,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["button.component.html",{"_index":1914,"title":{},"body":{"components/ProfileButtonComponent.html":{}}}],["button.component.scss",{"_index":1915,"title":{},"body":{"components/ProfileButtonComponent.html":{}}}],["button.component.ts",{"_index":1913,"title":{},"body":{"components/ProfileButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:11",{"_index":1917,"title":{},"body":{"components/ProfileButtonComponent.html":{}}}],["button.component.ts:15",{"_index":1918,"title":{},"body":{"components/ProfileButtonComponent.html":{}}}],["button.component.ts:16",{"_index":1919,"title":{},"body":{"components/ProfileButtonComponent.html":{}}}],["button.component.ts:18",{"_index":1920,"title":{},"body":{"components/ProfileButtonComponent.html":{}}}],["button.getboundingclientrect",{"_index":894,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["button/profile",{"_index":1848,"title":{},"body":{"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"directives/TagToComponentDirective.html":{},"coverage.html":{}}}],["buttonused",{"_index":887,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["cancelediting",{"_index":991,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["card",{"_index":21,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{}}}],["card'},{'name",{"_index":173,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["card.component",{"_index":114,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/MainMenuChannelsComponent.html":{}}}],["card.component.html",{"_index":35,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{}}}],["card.component.scss",{"_index":37,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{}}}],["card.component.ts",{"_index":16,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:28",{"_index":299,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:29",{"_index":298,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:30",{"_index":296,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:31",{"_index":300,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:32",{"_index":284,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:35",{"_index":295,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:36",{"_index":304,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:37",{"_index":294,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:38",{"_index":303,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:39",{"_index":297,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:40",{"_index":301,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:41",{"_index":91,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:42",{"_index":85,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:44",{"_index":286,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:50",{"_index":289,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:51",{"_index":58,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:54",{"_index":89,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:55",{"_index":88,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:56",{"_index":86,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:57",{"_index":93,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{}}}],["card.component.ts:58",{"_index":87,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:59",{"_index":92,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:63",{"_index":66,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{}}}],["card.component.ts:75",{"_index":292,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card.component.ts:77",{"_index":71,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["card.component.ts:88",{"_index":285,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["card/add",{"_index":15,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/MainMenuChannelsComponent.html":{},"coverage.html":{}}}],["case",{"_index":900,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["catch((error",{"_index":719,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["catch(error",{"_index":937,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["cdktextareaautosize",{"_index":1014,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["cdr",{"_index":2224,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["changeavatar",{"_index":438,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["changeavatar(i",{"_index":449,"title":{},"body":{"components/AvatarComponent.html":{}}}],["changeavatar(i:number",{"_index":495,"title":{},"body":{"components/AvatarComponent.html":{}}}],["changechannelname",{"_index":992,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["changecurrentuser",{"_index":2406,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["changecurrentuser(name",{"_index":2417,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["changedetectorref",{"_index":2225,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["changeemailonly",{"_index":1088,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["changeemailonly(email",{"_index":1097,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["changeicon",{"_index":1316,"title":{},"body":{"components/LoginComponent.html":{}}}],["changeicon(focus",{"_index":1326,"title":{},"body":{"components/LoginComponent.html":{}}}],["changeiconmail",{"_index":2139,"title":{},"body":{"components/SignInComponent.html":{}}}],["changeiconmail(focus",{"_index":2146,"title":{},"body":{"components/SignInComponent.html":{}}}],["changeiconname",{"_index":2140,"title":{},"body":{"components/SignInComponent.html":{}}}],["changeiconname(focus",{"_index":2148,"title":{},"body":{"components/SignInComponent.html":{}}}],["changemessage",{"_index":1633,"title":{},"body":{"injectables/MessageService.html":{}}}],["changemessage(messageid",{"_index":1653,"title":{},"body":{"injectables/MessageService.html":{}}}],["changenameonly",{"_index":1089,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["changenameonly(displayname",{"_index":1099,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["changepassword",{"_index":1991,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/UserAuthService.html":{}}}],["changepassword(newpassword",{"_index":1996,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/UserAuthService.html":{}}}],["changes",{"_index":1832,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["changes['searchterm",{"_index":1852,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["changeuseravatar",{"_index":1090,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["changeuseravatar(i",{"_index":1102,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["channel",{"_index":14,"title":{"interfaces/Channel.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["channel'},{'name",{"_index":179,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["channel.channel_type",{"_index":633,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/MainMenuChannelsComponent.html":{},"injectables/SearchService.html":{}}}],["channel.component.html",{"_index":981,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.scss",{"_index":982,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts",{"_index":979,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"coverage.html":{}}}],["channel.component.ts:102",{"_index":1008,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:114",{"_index":1011,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:121",{"_index":1004,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:22",{"_index":1021,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:23",{"_index":1020,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:24",{"_index":1025,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:25",{"_index":1024,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:26",{"_index":1023,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:27",{"_index":1001,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:30",{"_index":1019,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:32",{"_index":1026,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:33",{"_index":1017,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:35",{"_index":1018,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:36",{"_index":1022,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:39",{"_index":1016,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:41",{"_index":1009,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:48",{"_index":1010,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:54",{"_index":1007,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:60",{"_index":1012,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:67",{"_index":1013,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:77",{"_index":1003,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:87",{"_index":1005,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.component.ts:96",{"_index":1002,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channel.data",{"_index":648,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channel.id",{"_index":644,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogEditChannelComponent.html":{},"components/MainMenuChannelsComponent.html":{},"injectables/SearchService.html":{}}}],["channel.members.includes(currentuserid",{"_index":724,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channel.members.includes(dm_target_id",{"_index":641,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channel.members.length",{"_index":639,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channel.members[0",{"_index":637,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channel.members[1",{"_index":638,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channel.name",{"_index":122,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{}}}],["channel/channel.component",{"_index":1603,"title":{},"body":{"components/MainPageComponent.html":{}}}],["channel/dialog",{"_index":978,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"coverage.html":{}}}],["channel/message/message.component",{"_index":2330,"title":{},"body":{"components/ThreadComponent.html":{}}}],["channel_id",{"_index":569,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["channel_type",{"_index":83,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["channelcomponent",{"_index":178,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["channeldata",{"_index":647,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channeldata.members",{"_index":706,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channeldata.members.filter(memberid",{"_index":704,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channelexists",{"_index":984,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"injectables/SearchService.html":{}}}],["channelexists(channelid",{"_index":2064,"title":{},"body":{"injectables/SearchService.html":{}}}],["channelfirebaseservice",{"_index":56,"title":{"injectables/ChannelFirebaseService.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{}}}],["channelfound",{"_index":722,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channelid",{"_index":125,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"injectables/MessageService.html":{},"injectables/SearchService.html":{},"injectables/UserManagementService.html":{}}}],["channels",{"_index":141,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/MainMenuChannelsComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{}}}],["channels'},{'name",{"_index":220,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["channels.component",{"_index":1541,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["channels.component.html",{"_index":1492,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.scss",{"_index":1493,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts",{"_index":1490,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"coverage.html":{}}}],["channels.component.ts:24",{"_index":1509,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:25",{"_index":1502,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:29",{"_index":1508,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:30",{"_index":1511,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:31",{"_index":1515,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:32",{"_index":1512,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:33",{"_index":1514,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:34",{"_index":1510,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:35",{"_index":1513,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:40",{"_index":1506,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:47",{"_index":1503,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:53",{"_index":1507,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.component.ts:58",{"_index":1504,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channels.filter((channel",{"_index":2095,"title":{},"body":{"injectables/SearchService.html":{}}}],["channels.foreach((channel",{"_index":676,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["channels.some(channel",{"_index":2100,"title":{},"body":{"injectables/SearchService.html":{}}}],["channels/add",{"_index":13,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"coverage.html":{}}}],["channels/main",{"_index":1489,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"coverage.html":{}}}],["channelservice",{"_index":41,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["channelservice.channels",{"_index":1523,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["channelservice.currentchannel.description",{"_index":1072,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channelservice.currentchannel.name",{"_index":1067,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["channelservice.currentthread.name",{"_index":2365,"title":{},"body":{"components/ThreadComponent.html":{}}}],["channeltype",{"_index":2070,"title":{},"body":{"injectables/SearchService.html":{}}}],["channeltypeenum",{"_index":105,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/PopupSearchComponent.html":{},"injectables/SearchService.html":{},"miscellaneous/enumerations.html":{}}}],["channeltypeenum.direct",{"_index":1213,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["channeltypeenum.main",{"_index":84,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/PopupSearchComponent.html":{}}}],["channeltypeenum.new",{"_index":603,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/MainMenuComponent.html":{}}}],["channeltypeenum.thread",{"_index":605,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["charindex",{"_index":795,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["check",{"_index":181,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"index.html":{}}}],["checkactioncode",{"_index":2448,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["checkactioncode(auth",{"_index":2473,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["checkauth",{"_index":2407,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["checkauthloggedinasguest",{"_index":2408,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["checkbox",{"_index":2133,"title":{},"body":{"components/SignInComponent.html":{}}}],["checked",{"_index":2134,"title":{},"body":{"components/SignInComponent.html":{}}}],["checkemail",{"_index":2141,"title":{},"body":{"components/SignInComponent.html":{}}}],["checkemailcomponent",{"_index":180,"title":{"components/CheckEmailComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["checkemailexistence",{"_index":2409,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["checkemailexistence(email",{"_index":2422,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["checkurls",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["checkwindowwidth",{"_index":2142,"title":{},"body":{"components/SignInComponent.html":{}}}],["cino",{"_index":1278,"title":{},"body":{"components/ImprintComponent.html":{}}}],["class",{"_index":118,"title":{"classes/User.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":2378,"title":{},"body":{"classes/User.html":{}}}],["clearfilters",{"_index":2054,"title":{},"body":{"injectables/SearchService.html":{}}}],["cli",{"_index":2636,"title":{},"body":{"index.html":{}}}],["click",{"_index":1793,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["clipboard",{"_index":2261,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["clipboarddata",{"_index":2262,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["clipboarddata.getdata('text",{"_index":2265,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["clipboardevent",{"_index":2231,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["clone",{"_index":2644,"title":{},"body":{"index.html":{}}}],["closeavatardialog",{"_index":1091,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["closemenuifmobile",{"_index":278,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["closethread",{"_index":1199,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SearchResultsComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{}}}],["collection",{"_index":613,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["collection(this.firestore",{"_index":654,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["color",{"_index":269,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["command",{"_index":2653,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":33,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{}}}],["component",{"_index":0,"title":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["component,position",{"_index":1188,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["component.directive.ts",{"_index":2218,"title":{},"body":{"directives/TagToComponentDirective.html":{},"coverage.html":{}}}],["component.directive.ts:13",{"_index":2228,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["component.directive.ts:14",{"_index":2226,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["component.directive.ts:20",{"_index":2236,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["component.directive.ts:26",{"_index":2234,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["component.directive.ts:32",{"_index":2235,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["component.directive.ts:41",{"_index":2233,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["component.directive.ts:65",{"_index":2229,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["component_template",{"_index":172,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["componentref",{"_index":1845,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["componentref.instance.userid",{"_index":1894,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["componentref.instance.username",{"_index":1895,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["componentref.location.nativeelement",{"_index":2256,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"overview.html":{}}}],["componenttype",{"_index":871,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["config",{"_index":2555,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirmpasswordreset",{"_index":2449,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["confirmpasswordreset(auth",{"_index":2493,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["confirmpopup",{"_index":353,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["console.error('fehler",{"_index":938,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["console.error(err",{"_index":1745,"title":{},"body":{"injectables/MessageService.html":{}}}],["console.error(error",{"_index":2014,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["console.log('triggered",{"_index":2245,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["const",{"_index":119,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"directives/TagToComponentDirective.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{}}}],["constructor",{"_index":52,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["constructor(auth",{"_index":2415,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["constructor(channelservice",{"_index":1528,"title":{},"body":{"components/MainMenuComponent.html":{},"injectables/UtilityService.html":{}}}],["constructor(customdialogservice",{"_index":1454,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{}}}],["constructor(dialog",{"_index":858,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["constructor(dialogref",{"_index":53,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{}}}],["constructor(el",{"_index":1916,"title":{},"body":{"components/ProfileButtonComponent.html":{}}}],["constructor(messageservice",{"_index":2282,"title":{},"body":{"components/ThreadComponent.html":{}}}],["constructor(obj",{"_index":2380,"title":{},"body":{"classes/User.html":{}}}],["constructor(private",{"_index":392,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ImprintComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/UtilityService.html":{}}}],["constructor(profileservice",{"_index":1794,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["constructor(public",{"_index":881,"title":{},"body":{"injectables/CustomDialogService.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/MainPageComponent.html":{},"injectables/UserAuthService.html":{}}}],["constructor(router",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginPageComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{}}}],["constructor(searchservice",{"_index":1819,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["constructor(userauth",{"_index":1324,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(userservice",{"_index":1555,"title":{},"body":{"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"injectables/ProfileService.html":{},"injectables/SearchService.html":{},"injectables/UserManagementService.html":{}}}],["constructor(viewcontainer",{"_index":2223,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["contact",{"_index":1285,"title":{},"body":{"components/ImprintComponent.html":{},"components/ThreadComponent.html":{}}}],["container",{"_index":511,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"components/PopupSearchComponent.html":{},"components/ResetPasswordComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["container.appendchild(textnode",{"_index":840,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["container.haschildnodes",{"_index":826,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["container.innerhtml",{"_index":2252,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["container.innerhtml.replace(regex",{"_index":2253,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["container.queryselectorall('.dynamic",{"_index":1888,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["contains",{"_index":673,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["contenteditable",{"_index":1923,"title":{},"body":{"components/ProfileButtonComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["converttodate",{"_index":2276,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["converttodate(dateasnumber",{"_index":2285,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["cors",{"_index":1765,"title":{},"body":{"injectables/MessageService.html":{}}}],["coverage",{"_index":2548,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":663,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["createchannel",{"_index":50,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["createchannel(button",{"_index":64,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["created",{"_index":255,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["created_at",{"_index":77,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ThreadComponent.html":{}}}],["createelement",{"_index":1634,"title":{},"body":{"injectables/MessageService.html":{}}}],["createelement(bloburl",{"_index":1656,"title":{},"body":{"injectables/MessageService.html":{}}}],["createnewchannel",{"_index":541,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["createnewchannel(channel",{"_index":561,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["createnewdirectchannel",{"_index":1200,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["createnewdirectchannel(user_id",{"_index":1205,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["createuser",{"_index":439,"title":{},"body":{"components/AvatarComponent.html":{}}}],["createuserobject",{"_index":1317,"title":{},"body":{"components/LoginComponent.html":{}}}],["createuserobject(user",{"_index":1329,"title":{},"body":{"components/LoginComponent.html":{}}}],["createuserwithemailandpassword",{"_index":2454,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["createuserwithemailandpassword(this.auth",{"_index":2494,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["creator",{"_index":79,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["ctrl/ngx",{"_index":1170,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{},"dependencies.html":{}}}],["currentchannel",{"_index":534,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowMembersComponent.html":{}}}],["currentchannel.members",{"_index":1190,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["currentchannel.name",{"_index":942,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["currentchannel['members",{"_index":698,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["currentdate",{"_index":2271,"title":{},"body":{"components/ThreadComponent.html":{}}}],["currenthread",{"_index":2272,"title":{},"body":{"components/ThreadComponent.html":{}}}],["currentmessage",{"_index":1625,"title":{},"body":{"injectables/MessageService.html":{}}}],["currentnode",{"_index":1909,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["currentthread",{"_index":535,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["currentuser",{"_index":433,"title":{},"body":{"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/ThreadComponent.html":{},"injectables/UserAuthService.html":{}}}],["currentuser?.name",{"_index":518,"title":{},"body":{"components/AvatarComponent.html":{}}}],["currentuser_id",{"_index":581,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["currentuserid",{"_index":434,"title":{},"body":{"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{}}}],["cursor",{"_index":1898,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["cursorpositionservice",{"_index":768,"title":{"injectables/CursorPositionService.html":{}},"body":{"injectables/CursorPositionService.html":{},"components/PopupSearchComponent.html":{},"coverage.html":{}}}],["custom",{"_index":884,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"injectables/ProfileService.html":{}}}],["customdialogservice",{"_index":42,"title":{"injectables/CustomDialogService.html":{}},"body":{"components/AddChannelCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["d",{"_index":2345,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["d.getdate",{"_index":2347,"title":{},"body":{"components/ThreadComponent.html":{}}}],["d.getday",{"_index":2349,"title":{},"body":{"components/ThreadComponent.html":{}}}],["d.getmonth",{"_index":2351,"title":{},"body":{"components/ThreadComponent.html":{}}}],["dabbuble",{"_index":1469,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["dabubble",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/SignInComponent.html":{},"index.html":{}}}],["das",{"_index":691,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["data",{"_index":589,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["data.active_members",{"_index":661,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["data.channel_id",{"_index":1720,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.channel_type",{"_index":662,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["data.created_at",{"_index":658,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["data.creator",{"_index":659,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["data.description",{"_index":657,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["data.is_deleted",{"_index":1726,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.last_reply",{"_index":1728,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.lasttimeused",{"_index":1975,"title":{},"body":{"injectables/ReactionService.html":{}}}],["data.members",{"_index":660,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["data.message.attachements",{"_index":1724,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.message.reactions",{"_index":1723,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.message.text",{"_index":1722,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.message_id",{"_index":1972,"title":{},"body":{"injectables/ReactionService.html":{}}}],["data.modified_at",{"_index":1725,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.name",{"_index":656,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["data.thread_id",{"_index":1721,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.total_replies",{"_index":1727,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.unicode",{"_index":1974,"title":{},"body":{"injectables/ReactionService.html":{}}}],["data.user_id",{"_index":1719,"title":{},"body":{"injectables/MessageService.html":{}}}],["data.users",{"_index":1973,"title":{},"body":{"injectables/ReactionService.html":{}}}],["date",{"_index":2295,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["date().gettime",{"_index":1212,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["date(dateasnumber",{"_index":2355,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["date(dateinput",{"_index":2346,"title":{},"body":{"components/ThreadComponent.html":{}}}],["date.getdate",{"_index":2356,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["date.getfullyear",{"_index":2360,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["date.getmonth",{"_index":2358,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["date.now",{"_index":78,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["dateasnumber",{"_index":2287,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["datei",{"_index":525,"title":{},"body":{"components/AvatarComponent.html":{}}}],["dateinput",{"_index":2290,"title":{},"body":{"components/ThreadComponent.html":{}}}],["datenschutz",{"_index":1440,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["datenschutzerklärung",{"_index":2193,"title":{},"body":{"components/SignInComponent.html":{}}}],["day",{"_index":2348,"title":{},"body":{"components/ThreadComponent.html":{}}}],["decorators",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/MainPageComponent.html":{},"directives/OpenProfileDirective.html":{},"directives/TagToComponentDirective.html":{}}}],["default",{"_index":73,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/MessageService.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UtilityService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":57,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["dein",{"_index":1155,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/SignInComponent.html":{}}}],["deinem",{"_index":143,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/SignInComponent.html":{}}}],["deinen",{"_index":517,"title":{},"body":{"components/AvatarComponent.html":{}}}],["deiner",{"_index":2179,"title":{},"body":{"components/SignInComponent.html":{}}}],["deletechannel",{"_index":542,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["deletechannel(channelid",{"_index":564,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["deletechannelandmessages",{"_index":993,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["deletedoc",{"_index":618,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{}}}],["deletedoc(doc.ref",{"_index":1787,"title":{},"body":{"injectables/MessageService.html":{}}}],["deletedoc(docref",{"_index":709,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["deletefile",{"_index":1635,"title":{},"body":{"injectables/MessageService.html":{}}}],["deletefile(path",{"_index":1659,"title":{},"body":{"injectables/MessageService.html":{}}}],["deleteobject",{"_index":1708,"title":{},"body":{"injectables/MessageService.html":{}}}],["deleteobject(storageref",{"_index":1783,"title":{},"body":{"injectables/MessageService.html":{}}}],["dem",{"_index":1856,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["den",{"_index":1881,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["dependencies",{"_index":2604,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["der",{"_index":520,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/LoginComponent.html":{},"components/PopupSearchComponent.html":{},"components/SignInComponent.html":{}}}],["description",{"_index":76,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["devspace",{"_index":1488,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuHeaderComponent.html":{}}}],["dezember",{"_index":2317,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["dialog",{"_index":43,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["dialog'},{'name",{"_index":216,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["dialog.component",{"_index":1476,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["dialog.component.html",{"_index":1290,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.component.scss",{"_index":1291,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1289,"title":{},"body":{"components/LogOutDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:16",{"_index":1294,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":1298,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":1299,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.component.ts:26",{"_index":1297,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.component.ts:31",{"_index":1295,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.component.ts:36",{"_index":1296,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["dialog.service",{"_index":111,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"injectables/ProfileService.html":{}}}],["dialog.service.ts",{"_index":850,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"coverage.html":{}}}],["dialog.service.ts:19",{"_index":859,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:21",{"_index":879,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:24",{"_index":872,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:31",{"_index":869,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:36",{"_index":875,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:54",{"_index":878,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:64",{"_index":867,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:82",{"_index":861,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog.service.ts:92",{"_index":864,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["dialog/log",{"_index":1288,"title":{},"body":{"components/LogOutDialogComponent.html":{},"components/MainHeaderComponent.html":{},"coverage.html":{}}}],["dialogaddmembercomponent",{"_index":183,"title":{"components/DialogAddMemberComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["dialogaddmembermobilecomponent",{"_index":185,"title":{"components/DialogAddMemberMobileComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["dialogeditchannelcomponent",{"_index":187,"title":{"components/DialogEditChannelComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["dialogeditprofilecomponent",{"_index":189,"title":{"components/DialogEditProfileComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["dialogemojipickercomponent",{"_index":191,"title":{"components/DialogEmojiPickerComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["dialogparams",{"_index":874,"title":{"interfaces/DialogParams.html":{}},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"coverage.html":{}}}],["dialogref",{"_index":44,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{}}}],["dialogshowmemberscomponent",{"_index":194,"title":{"components/DialogShowMembersComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["dialogshowprofilecomponent",{"_index":197,"title":{"components/DialogShowProfileComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["die",{"_index":764,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{}}}],["dienen",{"_index":142,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["dienstag",{"_index":2324,"title":{},"body":{"components/ThreadComponent.html":{}}}],["diese",{"_index":756,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["diesem",{"_index":158,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["dieser",{"_index":1071,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["dir",{"_index":1395,"title":{},"body":{"components/LoginComponent.html":{}}}],["direct",{"_index":634,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"miscellaneous/enumerations.html":{}}}],["directchannels",{"_index":631,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["directchannels.find((channel",{"_index":636,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["direction",{"_index":425,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["directive",{"_index":170,"title":{"directives/OpenProfileDirective.html":{},"directives/TagToComponentDirective.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["directives",{"_index":257,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"overview.html":{}}}],["directives/open",{"_index":1921,"title":{},"body":{"components/ProfileButtonComponent.html":{}}}],["direktnachrichten",{"_index":1581,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["disabled",{"_index":1117,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/SignInComponent.html":{}}}],["displaychanneltime",{"_index":2024,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["displayname",{"_index":1101,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"injectables/UserAuthService.html":{}}}],["div",{"_index":816,"title":{},"body":{"injectables/CursorPositionService.html":{},"directives/TagToComponentDirective.html":{}}}],["div.appendchild(range.clonecontents",{"_index":818,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["div.innerhtml",{"_index":819,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["dm",{"_index":1548,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm'},{'name",{"_index":224,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["dm.component",{"_index":1540,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["dm.component.html",{"_index":1549,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.scss",{"_index":1550,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts",{"_index":1547,"title":{},"body":{"components/MainMenuDmComponent.html":{},"coverage.html":{}}}],["dm.component.ts:23",{"_index":1567,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:24",{"_index":1574,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:25",{"_index":1571,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:26",{"_index":1570,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:27",{"_index":1569,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:36",{"_index":1556,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:39",{"_index":1575,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:40",{"_index":1566,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:42",{"_index":1573,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:44",{"_index":1568,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:45",{"_index":1572,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:49",{"_index":1559,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:57",{"_index":1565,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:62",{"_index":1562,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:69",{"_index":1564,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:78",{"_index":1561,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:89",{"_index":1558,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm.component.ts:97",{"_index":1557,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["dm/main",{"_index":1539,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"coverage.html":{}}}],["dm_target_id",{"_index":579,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["doc",{"_index":616,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{}}}],["doc(collection(this.firestore",{"_index":655,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{}}}],["doc(this.getchannelsref",{"_index":678,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["doc(this.getmessagesref",{"_index":1742,"title":{},"body":{"injectables/MessageService.html":{}}}],["doc(this.getreactionsref",{"_index":1983,"title":{},"body":{"injectables/ReactionService.html":{}}}],["doc.id",{"_index":717,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["docref",{"_index":666,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["docref.id",{"_index":668,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["docsnap",{"_index":699,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["docsnap.data",{"_index":702,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["docsnap.exists",{"_index":701,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["docsnapshot",{"_index":683,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["docsnapshot.data",{"_index":693,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["docsnapshot.exists",{"_index":685,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["document.body.appendchild(a",{"_index":1779,"title":{},"body":{"injectables/MessageService.html":{}}}],["document.body.removechild(a",{"_index":1782,"title":{},"body":{"injectables/MessageService.html":{}}}],["document.createelement('a",{"_index":1774,"title":{},"body":{"injectables/MessageService.html":{}}}],["document.createelement('div",{"_index":817,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["document.createrange",{"_index":828,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["document.createtextnode",{"_index":839,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["document.execcommand('inserttext",{"_index":2267,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["document.getelementbyid('addmemberbtn",{"_index":1185,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["document.getelementbyid('threadinput')?.focus",{"_index":2363,"title":{},"body":{"components/ThreadComponent.html":{}}}],["document.getelementbyid('userhead",{"_index":1221,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["document.queryselector('.cdk",{"_index":509,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["documentation",{"_index":2549,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["donnerstag",{"_index":2326,"title":{},"body":{"components/ThreadComponent.html":{}}}],["downloadfile",{"_index":1636,"title":{},"body":{"injectables/MessageService.html":{}}}],["downloadfile(path",{"_index":1662,"title":{},"body":{"injectables/MessageService.html":{}}}],["du",{"_index":1196,"title":{},"body":{"components/DialogShowMembersComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{}}}],["duplicatechannelname",{"_index":994,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["duplicatename",{"_index":45,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["duration",{"_index":420,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["durch",{"_index":1882,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["dynamic",{"_index":1886,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{},"dependencies.html":{}}}],["dynamichost",{"_index":2240,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["dynamicuserelements",{"_index":1887,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["dynamicuserelements.foreach((element",{"_index":1889,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["e",{"_index":753,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["edit",{"_index":188,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["editchanneldescription",{"_index":985,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["editchannelname",{"_index":986,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["editcurrentuser",{"_index":1201,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["editcurrentuser(button",{"_index":1207,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["editform",{"_index":1085,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["editmessagecomponent",{"_index":198,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["educational",{"_index":2640,"title":{},"body":{"index.html":{}}}],["eigenes",{"_index":522,"title":{},"body":{"components/AvatarComponent.html":{}}}],["ein",{"_index":155,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/CheckEmailComponent.html":{},"components/SignInComponent.html":{}}}],["eine",{"_index":2188,"title":{},"body":{"components/SignInComponent.html":{}}}],["einen",{"_index":164,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/SignInComponent.html":{}}}],["einmal",{"_index":1403,"title":{},"body":{"components/LoginComponent.html":{}}}],["el",{"_index":1457,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/ProfileButtonComponent.html":{}}}],["element",{"_index":169,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["element.classlist.add('animate",{"_index":512,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["element.classlist.remove('animate",{"_index":513,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["element.getattribute('data",{"_index":1890,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["element.innertext",{"_index":1892,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["elementref",{"_index":1458,"title":{},"body":{"components/MainHeaderComponent.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["elref",{"_index":1795,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["email",{"_index":201,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["email'},{'name",{"_index":182,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["email.component.html",{"_index":730,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email.component.scss",{"_index":731,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email.component.ts",{"_index":728,"title":{},"body":{"components/CheckEmailComponent.html":{},"coverage.html":{}}}],["email.component.ts:19",{"_index":740,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email.component.ts:20",{"_index":735,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email.component.ts:25",{"_index":737,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email.component.ts:30",{"_index":738,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email.component.ts:40",{"_index":739,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email.component.ts:51",{"_index":736,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["email/check",{"_index":727,"title":{},"body":{"components/CheckEmailComponent.html":{},"coverage.html":{}}}],["emailadresse",{"_index":1286,"title":{},"body":{"components/ImprintComponent.html":{}}}],["emailexists",{"_index":1086,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{}}}],["emailexists(email",{"_index":2425,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["emailplaceholder",{"_index":1092,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["emailsnackbarcomponent",{"_index":200,"title":{"components/EmailSnackbarComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["emoji",{"_index":192,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{},"dependencies.html":{}}}],["empfehlen",{"_index":1394,"title":{},"body":{"components/LoginComponent.html":{}}}],["endregion",{"_index":848,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["enumerations",{"_index":2627,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/channel",{"_index":1847,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["erfolgreich",{"_index":2503,"title":{},"body":{"components/UserCreatedSnackbarComponent.html":{}}}],["err",{"_index":1744,"title":{},"body":{"injectables/MessageService.html":{}}}],["error",{"_index":732,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{}}}],["error('channel",{"_index":687,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["error('netzwerkantwort",{"_index":1767,"title":{},"body":{"injectables/MessageService.html":{}}}],["ersetzen",{"_index":1880,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["erstellen",{"_index":140,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/LoginPageComponent.html":{},"components/SignInComponent.html":{}}}],["erstellt",{"_index":1073,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["event",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["event.clipboarddata",{"_index":2263,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["event.emoji.native",{"_index":1172,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["event.preventdefault",{"_index":1874,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["event.target.files[0",{"_index":489,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["event.target.innerwidth",{"_index":1607,"title":{},"body":{"components/MainPageComponent.html":{}}}],["existiert",{"_index":160,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/SignInComponent.html":{}}}],["export",{"_index":117,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["express",{"_index":2619,"title":{},"body":{"dependencies.html":{}}}],["extendrangetosearchterm",{"_index":1812,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["extendrangetosearchterm(range",{"_index":1825,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["fail",{"_index":837,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["falsches",{"_index":1401,"title":{},"body":{"components/LoginComponent.html":{}}}],["false",{"_index":90,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{},"injectables/MessageService.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{}}}],["februar",{"_index":2307,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["fetch(url",{"_index":1763,"title":{},"body":{"injectables/MessageService.html":{}}}],["fetchsigninmethodsforemail",{"_index":2456,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["fetchsigninmethodsforemail(this.auth",{"_index":2465,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["ffnen",{"_index":1614,"title":{},"body":{"components/MainPageComponent.html":{}}}],["field",{"_index":1031,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{}}}],["filter",{"_index":1813,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["filter(searchterm",{"_index":1827,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["filterchannels",{"_index":2055,"title":{},"body":{"injectables/SearchService.html":{}}}],["filterchannels(searchterm",{"_index":2067,"title":{},"body":{"injectables/SearchService.html":{}}}],["filterchannelsbytypeandprefix",{"_index":2056,"title":{},"body":{"injectables/SearchService.html":{}}}],["filterchannelsbytypeandprefix(prefix",{"_index":2069,"title":{},"body":{"injectables/SearchService.html":{}}}],["filteredchannels",{"_index":1809,"title":{},"body":{"components/PopupSearchComponent.html":{},"components/SearchResultsComponent.html":{}}}],["filteredchannels.length",{"_index":1911,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["filteredmessages",{"_index":2027,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["filteredusers",{"_index":271,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/PopupSearchComponent.html":{},"components/SearchResultsComponent.html":{}}}],["filteredusers.length",{"_index":342,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/PopupSearchComponent.html":{}}}],["filtermessages",{"_index":2057,"title":{},"body":{"injectables/SearchService.html":{}}}],["filtermessages(searchterm",{"_index":2073,"title":{},"body":{"injectables/SearchService.html":{}}}],["filterusers",{"_index":2058,"title":{},"body":{"injectables/SearchService.html":{},"injectables/UserManagementService.html":{}}}],["filterusers(searchinput",{"_index":2511,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["filterusers(searchterm",{"_index":2075,"title":{},"body":{"injectables/SearchService.html":{}}}],["filterusersbyprefix",{"_index":2059,"title":{},"body":{"injectables/SearchService.html":{}}}],["filterusersbyprefix(prefix",{"_index":2077,"title":{},"body":{"injectables/SearchService.html":{}}}],["findcurrentuserid",{"_index":440,"title":{},"body":{"components/AvatarComponent.html":{}}}],["firebase",{"_index":2645,"title":{},"body":{"index.html":{}}}],["firebase.service/channelfirebase.service",{"_index":103,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["firebase.service/message.service",{"_index":1033,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/MainMenuChannelsComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{}}}],["firebase.service/user.auth.service",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{}}}],["firebase.service/user.service",{"_index":109,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"injectables/ProfileService.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/UserManagementService.html":{}}}],["firebase/auth",{"_index":2461,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["firebase/firestore",{"_index":624,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["firebase/storage",{"_index":1707,"title":{},"body":{"injectables/MessageService.html":{}}}],["firestore",{"_index":536,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{}}}],["focus",{"_index":1328,"title":{},"body":{"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["for(channel",{"_index":1522,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["for(member",{"_index":1189,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["for(message",{"_index":2366,"title":{},"body":{"components/ThreadComponent.html":{}}}],["for(user",{"_index":337,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/MainMenuDmComponent.html":{},"components/PopupSearchComponent.html":{}}}],["formcontrol",{"_index":1115,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/SearchResultsComponent.html":{}}}],["formgroup",{"_index":1114,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["formsmodule",{"_index":32,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{}}}],["freitag",{"_index":2327,"title":{},"body":{"components/ThreadComponent.html":{}}}],["function",{"_index":610,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/SharedService.html":{}}}],["further",{"_index":2647,"title":{},"body":{"index.html":{}}}],["g",{"_index":2251,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["geada",{"_index":1276,"title":{},"body":{"components/ImprintComponent.html":{}}}],["geben",{"_index":751,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/SignInComponent.html":{}}}],["gebraucht",{"_index":692,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["gefunden",{"_index":689,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["generated",{"_index":2634,"title":{},"body":{"index.html":{}}}],["gesendet",{"_index":1251,"title":{},"body":{"components/EmailSnackbarComponent.html":{}}}],["getallchannels",{"_index":543,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getalluserids",{"_index":2505,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["getauth",{"_index":2450,"title":{},"body":{"injectables/UserAuthService.html":{},"miscellaneous/variables.html":{}}}],["getchannelcreationtime",{"_index":2540,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getchanneldata",{"_index":1527,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["getchannelref",{"_index":544,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getchannelref(channel_id",{"_index":567,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getchannelsforcurrentuser",{"_index":545,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getchannelsref",{"_index":546,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getcreatorname",{"_index":995,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["getcreatorname(channelservice.currentchannel.creator",{"_index":1075,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["getcreatorname(userid",{"_index":1006,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["getcurrentchannel",{"_index":547,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getcurrentchannel(channel_id",{"_index":572,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getcurrentchannelid",{"_index":2506,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["getcurrentthread",{"_index":548,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getcurrentthread(thread_id",{"_index":575,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getdateformat",{"_index":2277,"title":{},"body":{"components/ThreadComponent.html":{}}}],["getdateformat(dateinput",{"_index":2288,"title":{},"body":{"components/ThreadComponent.html":{}}}],["getdirectchannelid",{"_index":549,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getdirectchannelid(currentuser_id",{"_index":578,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getdirectchanneluser",{"_index":2278,"title":{},"body":{"components/ThreadComponent.html":{}}}],["getdoc",{"_index":619,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getdoc(docref",{"_index":700,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getdocs",{"_index":621,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{}}}],["getdocs(allchannelsquery",{"_index":713,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["getdocs(q",{"_index":1785,"title":{},"body":{"injectables/MessageService.html":{}}}],["getdownloadurl",{"_index":1706,"title":{},"body":{"injectables/MessageService.html":{}}}],["getdownloadurl(storageref",{"_index":1758,"title":{},"body":{"injectables/MessageService.html":{}}}],["getfiledata",{"_index":1637,"title":{},"body":{"injectables/MessageService.html":{}}}],["getfiledata(path",{"_index":1664,"title":{},"body":{"injectables/MessageService.html":{}}}],["getfirestore",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getmemberids",{"_index":2507,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["getmemberids(selectedusers",{"_index":2515,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["getmessagecreationtime",{"_index":2541,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getmessagecreationtime(message",{"_index":2545,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getmessageref",{"_index":1638,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmessageref(message_id",{"_index":1666,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmessagesfromchannel",{"_index":1639,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmessagesfromchannel(channel_id",{"_index":1669,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmessagesfromthread",{"_index":1640,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmessagesfromthread(thread_id",{"_index":1671,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmessagesref",{"_index":1641,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmetadata",{"_index":1709,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmetadata(storageref",{"_index":1759,"title":{},"body":{"injectables/MessageService.html":{}}}],["getmobileposition",{"_index":851,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["getmobileposition(mobileposition",{"_index":860,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["getownprofilestatus",{"_index":1928,"title":{},"body":{"injectables/ProfileService.html":{}}}],["getpanelclass",{"_index":852,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["getpanelclass(position",{"_index":863,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["getposition",{"_index":853,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["getposition(button",{"_index":866,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["getreactionsref",{"_index":1955,"title":{},"body":{"injectables/ReactionService.html":{}}}],["getselectedchannelid",{"_index":2197,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["getselecteduserid",{"_index":2198,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["getstorage",{"_index":1704,"title":{},"body":{"injectables/MessageService.html":{},"miscellaneous/variables.html":{}}}],["gettextareaplaceholdertext",{"_index":2279,"title":{},"body":{"components/ThreadComponent.html":{}}}],["gettextwithlinebreaks",{"_index":774,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["gettextwithlinebreaks(range",{"_index":783,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["getting",{"_index":2631,"title":{"index.html":{}},"body":{}}],["getuserdata",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["getuserdisplayname",{"_index":2025,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["getuserdisplayname(user.id",{"_index":2049,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["getuserdisplayname(userid",{"_index":2036,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["getviewinguserid",{"_index":1929,"title":{},"body":{"injectables/ProfileService.html":{}}}],["go",{"_index":2651,"title":{},"body":{"index.html":{}}}],["goback",{"_index":1268,"title":{},"body":{"components/ImprintComponent.html":{}}}],["google",{"_index":1408,"title":{},"body":{"components/LoginComponent.html":{}}}],["googleauthprovider",{"_index":2446,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["googleemail",{"_index":2403,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["googlename",{"_index":2404,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["googleprofileimg",{"_index":2405,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["googleuserid",{"_index":1369,"title":{},"body":{"components/LoginComponent.html":{}}}],["gotoavatar",{"_index":2143,"title":{},"body":{"components/SignInComponent.html":{}}}],["gotocheckemail",{"_index":1992,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["gotologin",{"_index":441,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/SignInComponent.html":{}}}],["gotosignin",{"_index":442,"title":{},"body":{"components/AvatarComponent.html":{},"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["großbuchstabe",{"_index":2186,"title":{},"body":{"components/SignInComponent.html":{}}}],["guest",{"_index":1303,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["guestlogin",{"_index":2410,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["guiseppe",{"_index":1277,"title":{},"body":{"components/ImprintComponent.html":{}}}],["gäste",{"_index":1409,"title":{},"body":{"components/LoginComponent.html":{}}}],["hackerman",{"_index":2400,"title":{},"body":{"classes/User.html":{}}}],["handleactioncode",{"_index":2411,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["handleactioncode(oobcode",{"_index":2428,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["handlepaste",{"_index":2220,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["handlepaste(event",{"_index":2230,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["hast",{"_index":2180,"title":{},"body":{"components/SignInComponent.html":{}}}],["header",{"_index":1253,"title":{},"body":{"components/HeaderComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuHeaderComponent.html":{}}}],["header'},{'name",{"_index":204,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["header.component",{"_index":1538,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MainPageComponent.html":{}}}],["header.component.html",{"_index":1254,"title":{},"body":{"components/HeaderComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuHeaderComponent.html":{}}}],["header.component.scss",{"_index":1255,"title":{},"body":{"components/HeaderComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuHeaderComponent.html":{}}}],["header.component.ts",{"_index":1444,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:15",{"_index":1584,"title":{},"body":{"components/MainMenuHeaderComponent.html":{}}}],["header.component.ts:17",{"_index":1586,"title":{},"body":{"components/MainMenuHeaderComponent.html":{}}}],["header.component.ts:18",{"_index":1585,"title":{},"body":{"components/MainMenuHeaderComponent.html":{}}}],["header.component.ts:21",{"_index":1466,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:22",{"_index":1470,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":1459,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:27",{"_index":1473,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:28",{"_index":1467,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:31",{"_index":1471,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:32",{"_index":1468,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:33",{"_index":1472,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:37",{"_index":1462,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:43",{"_index":1465,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:51",{"_index":1461,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:59",{"_index":1460,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header.component.ts:65",{"_index":1464,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["header/header.component",{"_index":1271,"title":{},"body":{"components/ImprintComponent.html":{}}}],["header/log",{"_index":1287,"title":{},"body":{"components/LogOutDialogComponent.html":{},"coverage.html":{}}}],["header/main",{"_index":1443,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["header/search",{"_index":1542,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["headercomponent",{"_index":203,"title":{"components/HeaderComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["help",{"_index":2648,"title":{},"body":{"index.html":{}}}],["hideelement",{"_index":1256,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["hideextras",{"_index":1413,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["hidemobileworkspace",{"_index":1450,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["hier",{"_index":1136,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["hinzufügen",{"_index":330,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/MainMenuChannelsComponent.html":{}}}],["hmtl",{"_index":1873,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["hochladen",{"_index":526,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["hole",{"_index":1902,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["horizontalposition",{"_index":422,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["hostlistener",{"_index":383,"title":{},"body":{"components/AppComponent.html":{},"components/MainPageComponent.html":{},"directives/OpenProfileDirective.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{}}}],["hostlistener('click",{"_index":1799,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["hostlistener('paste",{"_index":2232,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["hostlistener('window:resize",{"_index":1597,"title":{},"body":{"components/MainPageComponent.html":{}}}],["hostlistener('window:unload",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlisteners",{"_index":358,"title":{},"body":{"components/AppComponent.html":{},"components/MainPageComponent.html":{},"directives/OpenProfileDirective.html":{},"directives/TagToComponentDirective.html":{}}}],["hoverstate",{"_index":2135,"title":{},"body":{"components/SignInComponent.html":{}}}],["html",{"_index":168,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["htmlelement",{"_index":65,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"injectables/ProfileService.html":{},"directives/TagToComponentDirective.html":{}}}],["ich",{"_index":2191,"title":{},"body":{"components/SignInComponent.html":{}}}],["iconmail",{"_index":2136,"title":{},"body":{"components/SignInComponent.html":{}}}],["iconname",{"_index":2137,"title":{},"body":{"components/SignInComponent.html":{}}}],["iconsrc",{"_index":1311,"title":{},"body":{"components/LoginComponent.html":{}}}],["id",{"_index":75,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"injectables/StateManagementService.html":{},"classes/User.html":{},"injectables/UserManagementService.html":{}}}],["identifier",{"_index":2550,"title":{},"body":{"coverage.html":{}}}],["if(button",{"_index":1186,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["if(channelexists",{"_index":1070,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["if(i",{"_index":2368,"title":{},"body":{"components/ThreadComponent.html":{}}}],["if(ismobile",{"_index":1302,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["if(range",{"_index":1877,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["if(selection",{"_index":830,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["if(this.isviewinitialized",{"_index":2244,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["if(threadservice.threadopen",{"_index":1609,"title":{},"body":{"components/MainPageComponent.html":{}}}],["if(user.id",{"_index":1077,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["if(user?.id",{"_index":1582,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["if(userheadbutton",{"_index":1222,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["if(userservice.getuser(member",{"_index":1191,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["if(userservice.getuser(member).profile_img",{"_index":1192,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["ihnen",{"_index":762,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["ihr",{"_index":765,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["ihre",{"_index":752,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["imagechanged",{"_index":435,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["imageurl",{"_index":490,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["implements",{"_index":909,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["import",{"_index":94,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["importprovidersfrom",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importprovidersfrom(provideauth",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importprovidersfrom(providefirestore",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["importprovidersfrom(providestorage",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imports",{"_index":24,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["impressum",{"_index":1272,"title":{},"body":{"components/ImprintComponent.html":{},"components/LoginPageComponent.html":{}}}],["imprint",{"_index":1265,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprint'},{'name",{"_index":206,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["imprint.component.html",{"_index":1266,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprint.component.scss",{"_index":1267,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprintcomponent",{"_index":205,"title":{"components/ImprintComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["in'},{'name",{"_index":250,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["in.component",{"_index":1424,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["in.component.html",{"_index":2131,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.scss",{"_index":2132,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts",{"_index":2129,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["in.component.ts:101",{"_index":2147,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:22",{"_index":2158,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:23",{"_index":2159,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:24",{"_index":2160,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:25",{"_index":2163,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:26",{"_index":2162,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:27",{"_index":2167,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:28",{"_index":2161,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:29",{"_index":2166,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:30",{"_index":2164,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:31",{"_index":2145,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:39",{"_index":2154,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:47",{"_index":2153,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:52",{"_index":2150,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:62",{"_index":2152,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:74",{"_index":2151,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:84",{"_index":2156,"title":{},"body":{"components/SignInComponent.html":{}}}],["in.component.ts:96",{"_index":2149,"title":{},"body":{"components/SignInComponent.html":{}}}],["in/sign",{"_index":1423,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["index",{"_index":38,"title":{"index.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["info.data.email",{"_index":2475,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["initializeapp(environment.firebase",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject",{"_index":612,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/EmailSnackbarComponent.html":{},"components/LoginComponent.html":{},"components/LoginSnackbarComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["inject(firestore",{"_index":607,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/LoginComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{}}}],["inject(matsnackbarref",{"_index":1248,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["injectable",{"_index":531,"title":{"injectables/ChannelFirebaseService.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"injectables/StateManagementService.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"injectables/StateManagementService.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{}}}],["injectables",{"_index":532,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"injectables/StateManagementService.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"overview.html":{}}}],["input",{"_index":1800,"title":{},"body":{"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/SearchResultsComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["input'},{'name",{"_index":230,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["input.component",{"_index":2332,"title":{},"body":{"components/ThreadComponent.html":{}}}],["input.component.ts",{"_index":2589,"title":{},"body":{"coverage.html":{}}}],["input/message",{"_index":2331,"title":{},"body":{"components/ThreadComponent.html":{},"coverage.html":{}}}],["inputelement",{"_index":1816,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["inputlength",{"_index":1907,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["inputs",{"_index":1792,"title":{},"body":{"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/SearchResultsComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["insert",{"_index":2266,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["instanceof",{"_index":1261,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["interface",{"_index":528,"title":{"interfaces/Channel.html":{},"interfaces/DialogParams.html":{},"interfaces/Message.html":{},"interfaces/Reaction.html":{}},"body":{"interfaces/Channel.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"interfaces/Message.html":{},"interfaces/Reaction.html":{},"coverage.html":{}}}],["interfaces",{"_index":529,"title":{},"body":{"interfaces/Channel.html":{},"interfaces/DialogParams.html":{},"interfaces/Message.html":{},"interfaces/Reaction.html":{},"overview.html":{}}}],["interfaces/channel.interface",{"_index":104,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/PopupSearchComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{}}}],["interfaces/message.interface",{"_index":1703,"title":{},"body":{"injectables/MessageService.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["interfaces/reaction.interface",{"_index":1970,"title":{},"body":{"injectables/ReactionService.html":{}}}],["interfaces/user.interface",{"_index":306,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"components/PopupSearchComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"injectables/UserManagementService.html":{}}}],["is_deleted",{"_index":1616,"title":{},"body":{"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["is_typing",{"_index":1335,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["isanonymous",{"_index":2499,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["isduplicate",{"_index":120,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["isemaildisabled",{"_index":1093,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["isexpanded",{"_index":1495,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["isloading",{"_index":1312,"title":{},"body":{"components/LoginComponent.html":{}}}],["isloggedin",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["ismenuopen",{"_index":1446,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuComponent.html":{},"injectables/SharedService.html":{}}}],["ismobile",{"_index":854,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"components/LogOutDialogComponent.html":{}}}],["ismobile()){}logout",{"_index":1304,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["isnewdate",{"_index":2280,"title":{},"body":{"components/ThreadComponent.html":{}}}],["isnewdate(date",{"_index":2293,"title":{},"body":{"components/ThreadComponent.html":{}}}],["isnotcreator",{"_index":2530,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["isnotselected",{"_index":2527,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["isownprofile",{"_index":1202,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["ispartofnamematched",{"_index":2525,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["ist",{"_index":757,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/PopupSearchComponent.html":{},"components/SignInComponent.html":{}}}],["isviewinitialized",{"_index":2219,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["januar",{"_index":2306,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["json.parse(json.stringify(channel",{"_index":680,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["json.parse(json.stringify(message))).catch",{"_index":1743,"title":{},"body":{"injectables/MessageService.html":{}}}],["json.parse(json.stringify(reaction",{"_index":1984,"title":{},"body":{"injectables/ReactionService.html":{}}}],["json.parse(storeduser",{"_index":628,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["json.stringify(this.userservice.currentuser",{"_index":417,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuComponent.html":{}}}],["juli",{"_index":2312,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["juni",{"_index":2311,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["kanal",{"_index":156,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["kann",{"_index":1135,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["kanäle",{"_index":1860,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["kein",{"_index":1866,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["klare",{"_index":1864,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["kleinbuchstabe",{"_index":2187,"title":{},"body":{"components/SignInComponent.html":{}}}],["kommunikation",{"_index":146,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["konto",{"_index":1439,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignInComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["können",{"_index":767,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["last_channel",{"_index":1332,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["last_reply",{"_index":1617,"title":{},"body":{"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["last_thread",{"_index":1333,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["lastcursorposition",{"_index":771,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["lastelement",{"_index":772,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["lasttimeused",{"_index":1950,"title":{},"body":{"interfaces/Reaction.html":{},"injectables/ReactionService.html":{}}}],["leavechannel",{"_index":996,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["left",{"_index":862,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["legend",{"_index":167,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["leider",{"_index":758,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["leute",{"_index":329,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["liste",{"_index":521,"title":{},"body":{"components/AvatarComponent.html":{}}}],["literal",{"_index":1593,"title":{},"body":{"components/MainPageComponent.html":{},"interfaces/Message.html":{},"injectables/SearchService.html":{}}}],["loaddynamiccomponents",{"_index":2221,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["loaduserdata",{"_index":1318,"title":{},"body":{"components/LoginComponent.html":{}}}],["loaduserdata(loginemail",{"_index":1339,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem('currentuser",{"_index":627,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["localstorage.removeitem('currentuser",{"_index":1300,"title":{},"body":{"components/LogOutDialogComponent.html":{},"components/LoginPageComponent.html":{}}}],["localstorage.setitem('currentuser",{"_index":416,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuComponent.html":{}}}],["log",{"_index":214,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["logged_in",{"_index":1334,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["login",{"_index":210,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["login'},{'name",{"_index":208,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["login.component.html",{"_index":1309,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":1310,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":1422,"title":{},"body":{"components/LoginPageComponent.html":{},"components/SignInComponent.html":{}}}],["loginasguest",{"_index":1319,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":207,"title":{"components/LoginComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["loginemail",{"_index":1313,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginpagecomponent",{"_index":209,"title":{"components/LoginPageComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["loginpassword",{"_index":1314,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginsnackbarcomponent",{"_index":212,"title":{"components/LoginSnackbarComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["loginuser",{"_index":2412,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["loginuser(email",{"_index":2430,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["loginwithgoogle",{"_index":1320,"title":{},"body":{"components/LoginComponent.html":{},"injectables/UserAuthService.html":{}}}],["logout",{"_index":1292,"title":{},"body":{"components/LogOutDialogComponent.html":{},"injectables/UserAuthService.html":{}}}],["logoutdialogcomponent",{"_index":213,"title":{"components/LogOutDialogComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["lowercaseterm",{"_index":2089,"title":{},"body":{"injectables/SearchService.html":{}}}],["m",{"_index":2357,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["mai",{"_index":2310,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["mail",{"_index":754,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["main",{"_index":218,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"miscellaneous/enumerations.html":{}}}],["mainheadercomponent",{"_index":217,"title":{"components/MainHeaderComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["mainmenu",{"_index":1583,"title":{},"body":{"components/MainMenuHeaderComponent.html":{}}}],["mainmenuchannelscomponent",{"_index":219,"title":{"components/MainMenuChannelsComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["mainmenucomponent",{"_index":221,"title":{"components/MainMenuComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["mainmenudmcomponent",{"_index":223,"title":{"components/MainMenuDmComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["mainmenuheadercomponent",{"_index":225,"title":{"components/MainMenuHeaderComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["mainpage",{"_index":1447,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["mainpagecomponent",{"_index":226,"title":{"components/MainPageComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["man",{"_index":2639,"title":{},"body":{"index.html":{}}}],["management.service",{"_index":308,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["management.service.ts",{"_index":2195,"title":{},"body":{"injectables/StateManagementService.html":{},"injectables/UserManagementService.html":{},"coverage.html":{}}}],["management.service.ts:10",{"_index":2209,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["management.service.ts:12",{"_index":2204,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["management.service.ts:17",{"_index":2512,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:18",{"_index":2206,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["management.service.ts:24",{"_index":2201,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["management.service.ts:29",{"_index":2202,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["management.service.ts:30",{"_index":2520,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:38",{"_index":2518,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:43",{"_index":2514,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:48",{"_index":2522,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:53",{"_index":2516,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:58",{"_index":2513,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["management.service.ts:9",{"_index":2208,"title":{},"body":{"injectables/StateManagementService.html":{},"injectables/UserManagementService.html":{}}}],["marketing",{"_index":152,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["mart",{"_index":1171,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{},"dependencies.html":{}}}],["mat_radio_default_options",{"_index":267,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["matbuttonmodule",{"_index":28,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["matcardmodule",{"_index":25,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{}}}],["matcheckboxmodule",{"_index":2130,"title":{},"body":{"components/SignInComponent.html":{}}}],["matching",{"_index":264,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":55,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["matdialogactions",{"_index":30,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["matdialogcontent",{"_index":29,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["matdialogmodule",{"_index":31,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["matdialogref",{"_index":54,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{}}}],["matexpansionmodule",{"_index":1491,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["maticonmodule",{"_index":26,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["matinputmodule",{"_index":27,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["matprogressbarmodule",{"_index":1308,"title":{},"body":{"components/LoginComponent.html":{}}}],["matradiomodule",{"_index":270,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["matsnackbar",{"_index":362,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["matsnackbar,matsnackbarmodule",{"_index":741,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["matsnackbarmodule",{"_index":729,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["matsnackbarref",{"_index":1250,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["maxwidth",{"_index":138,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"injectables/ProfileService.html":{}}}],["member",{"_index":113,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["member'},{'name",{"_index":184,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["member.component",{"_index":971,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowMembersComponent.html":{}}}],["member.component.html",{"_index":910,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.scss",{"_index":911,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts",{"_index":908,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"coverage.html":{}}}],["member.component.ts:19",{"_index":925,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:20",{"_index":923,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:21",{"_index":926,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:22",{"_index":924,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:23",{"_index":921,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:24",{"_index":913,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:27",{"_index":922,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:28",{"_index":928,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:29",{"_index":919,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:30",{"_index":927,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:34",{"_index":914,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:42",{"_index":915,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:47",{"_index":917,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:58",{"_index":916,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member.component.ts:65",{"_index":918,"title":{},"body":{"components/DialogAddMemberComponent.html":{}}}],["member/dialog",{"_index":907,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowMembersComponent.html":{},"coverage.html":{}}}],["memberid",{"_index":705,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["memberids",{"_index":293,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"injectables/UserManagementService.html":{}}}],["members",{"_index":81,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["members'},{'name",{"_index":196,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["members.component.html",{"_index":1176,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.scss",{"_index":1177,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.ts",{"_index":1175,"title":{},"body":{"components/DialogShowMembersComponent.html":{},"coverage.html":{}}}],["members.component.ts:20",{"_index":1178,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.ts:23",{"_index":1183,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.ts:24",{"_index":1182,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.ts:25",{"_index":1184,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.ts:26",{"_index":1181,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.ts:30",{"_index":1179,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members.component.ts:38",{"_index":1180,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["members/dialog",{"_index":1174,"title":{},"body":{"components/DialogShowMembersComponent.html":{},"coverage.html":{}}}],["men",{"_index":1612,"title":{},"body":{"components/MainPageComponent.html":{}}}],["mentor",{"_index":1281,"title":{},"body":{"components/ImprintComponent.html":{}}}],["menu",{"_index":12,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["menu'},{'name",{"_index":222,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["menu.component",{"_index":1477,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{}}}],["menu.component.html",{"_index":1525,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.scss",{"_index":1526,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts",{"_index":1524,"title":{},"body":{"components/MainMenuComponent.html":{},"coverage.html":{}}}],["menu.component.ts:31",{"_index":1529,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:34",{"_index":1532,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:35",{"_index":1536,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:36",{"_index":1537,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:37",{"_index":1535,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:38",{"_index":1534,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:42",{"_index":1531,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu.component.ts:55",{"_index":1530,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["menu/main",{"_index":11,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":229,"title":{"interfaces/Message.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UtilityService.html":{},"coverage.html":{}}}],["message'},{'name",{"_index":199,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["message.channel_id",{"_index":2051,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["message.component.ts",{"_index":2581,"title":{},"body":{"coverage.html":{}}}],["message.id",{"_index":1735,"title":{},"body":{"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["message.message.text",{"_index":2050,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["message.message.text.tolowercase().includes(lowercaseterm",{"_index":2097,"title":{},"body":{"injectables/SearchService.html":{}}}],["message.total_replies",{"_index":2369,"title":{},"body":{"components/ThreadComponent.html":{}}}],["message/edit",{"_index":2580,"title":{},"body":{"coverage.html":{}}}],["message_id",{"_index":1668,"title":{},"body":{"injectables/MessageService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{}}}],["messagecomponent",{"_index":227,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["messagedate",{"_index":2343,"title":{},"body":{"components/ThreadComponent.html":{}}}],["messageid",{"_index":1655,"title":{},"body":{"injectables/MessageService.html":{}}}],["messageinput",{"_index":2273,"title":{},"body":{"components/ThreadComponent.html":{}}}],["messageinputcomponent",{"_index":228,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["messages",{"_index":1626,"title":{},"body":{"injectables/MessageService.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{}}}],["messages.filter((message",{"_index":2096,"title":{},"body":{"injectables/SearchService.html":{}}}],["messages.foreach((message",{"_index":1733,"title":{},"body":{"injectables/MessageService.html":{}}}],["messageservice",{"_index":987,"title":{"injectables/MessageService.html":{}},"body":{"components/DialogEditChannelComponent.html":{},"components/MainMenuChannelsComponent.html":{},"injectables/MessageService.html":{},"injectables/SearchService.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["messageservice.messagesthread",{"_index":2367,"title":{},"body":{"components/ThreadComponent.html":{}}}],["messagesource",{"_index":1627,"title":{},"body":{"injectables/MessageService.html":{}}}],["messagesthread",{"_index":1628,"title":{},"body":{"injectables/MessageService.html":{}}}],["mesut",{"_index":1279,"title":{},"body":{"components/ImprintComponent.html":{}}}],["metadata",{"_index":17,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["metadata.contenttype",{"_index":1761,"title":{},"body":{"injectables/MessageService.html":{}}}],["metadata.name",{"_index":1760,"title":{},"body":{"injectables/MessageService.html":{}}}],["methods",{"_index":48,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["mid",{"_index":135,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["mindestens",{"_index":2183,"title":{},"body":{"components/SignInComponent.html":{}}}],["miscellaneous",{"_index":2626,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":157,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/LoginComponent.html":{},"components/PopupSearchComponent.html":{},"components/SignInComponent.html":{}}}],["mitglieder",{"_index":332,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{}}}],["mitgliederliste",{"_index":941,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["mittwoch",{"_index":2325,"title":{},"body":{"components/ThreadComponent.html":{}}}],["mobile",{"_index":905,"title":{},"body":{"injectables/CustomDialogService.html":{},"components/DialogAddMemberMobileComponent.html":{},"interfaces/DialogParams.html":{}}}],["mobile'},{'name",{"_index":186,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["mobile.component",{"_index":1032,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["mobile.component.html",{"_index":946,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.scss",{"_index":947,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts",{"_index":945,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"coverage.html":{}}}],["mobile.component.ts:23",{"_index":966,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:24",{"_index":964,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:25",{"_index":967,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:26",{"_index":965,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:28",{"_index":961,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:29",{"_index":951,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:32",{"_index":963,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:33",{"_index":969,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:34",{"_index":960,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:35",{"_index":968,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:36",{"_index":962,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:41",{"_index":952,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:49",{"_index":953,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:54",{"_index":959,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:59",{"_index":955,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:70",{"_index":954,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:77",{"_index":956,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile.component.ts:92",{"_index":958,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["mobile/dialog",{"_index":944,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"coverage.html":{}}}],["mobilebutton",{"_index":877,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["mobilechange",{"_index":1496,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["mobilediv",{"_index":1481,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["mobileposition",{"_index":136,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"injectables/ProfileService.html":{}}}],["mode",{"_index":1764,"title":{},"body":{"injectables/MessageService.html":{}}}],["models/user",{"_index":481,"title":{},"body":{"components/AvatarComponent.html":{},"components/SignInComponent.html":{}}}],["modified_at",{"_index":1618,"title":{},"body":{"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["modules",{"_index":2655,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["montag",{"_index":2323,"title":{},"body":{"components/ThreadComponent.html":{}}}],["month",{"_index":2350,"title":{},"body":{"components/ThreadComponent.html":{}}}],["months",{"_index":2274,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["more",{"_index":1338,"title":{},"body":{"components/LoginComponent.html":{},"index.html":{}}}],["move",{"_index":2258,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["märz",{"_index":2308,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["n",{"_index":821,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["nachricht",{"_index":1242,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["name",{"_index":61,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["namen",{"_index":159,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/SignInComponent.html":{}}}],["navigatetomainpage",{"_index":1321,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigation",{"_index":482,"title":{},"body":{"components/AvatarComponent.html":{}}}],["navigation?.extras.state?.['user",{"_index":485,"title":{},"body":{"components/AvatarComponent.html":{}}}],["navigationend",{"_index":1259,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["ndern",{"_index":766,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["neu",{"_index":1438,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["neuen",{"_index":1883,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["neues",{"_index":2181,"title":{},"body":{"components/SignInComponent.html":{}}}],["new",{"_index":476,"title":{},"body":{"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/MessageService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UtilityService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["newchannel",{"_index":720,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/MainMenuComponent.html":{}}}],["newchannel.id",{"_index":1545,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["newdirectchannel",{"_index":1197,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["newemail",{"_index":2474,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["newhtml",{"_index":1835,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["newlyaddedusers",{"_index":912,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["newlyaddedusers.length",{"_index":943,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["newmemberids",{"_index":598,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["newmembers",{"_index":703,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["newmembers.length",{"_index":707,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["newpassword",{"_index":1998,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/UserAuthService.html":{}}}],["newstartoffset",{"_index":1910,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["nextcharindex",{"_index":834,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["ng",{"_index":2650,"title":{},"body":{"index.html":{}}}],["ngafterviewinit",{"_index":1451,"title":{},"body":{"components/MainHeaderComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["ngonchanges",{"_index":1814,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["ngonchanges(changes",{"_index":1829,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["ngondestroy",{"_index":550,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"components/PopupSearchComponent.html":{},"injectables/SharedService.html":{},"components/ThreadComponent.html":{}}}],["ngoninit",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/ProfileButtonComponent.html":{},"components/SignInComponent.html":{}}}],["ngzone",{"_index":1000,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["nicht",{"_index":688,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogEditProfileComponent.html":{},"injectables/MessageService.html":{},"components/ResetPasswordComponent.html":{}}}],["noch",{"_index":1402,"title":{},"body":{"components/LoginComponent.html":{}}}],["node",{"_index":794,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["node.nodetype",{"_index":832,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["node.text_node",{"_index":833,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["node.textcontent!.length",{"_index":835,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["nodestack",{"_index":829,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["nodestack.pop",{"_index":831,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["nodestack.push(node.childnodes[i",{"_index":836,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["none",{"_index":1776,"title":{},"body":{"injectables/MessageService.html":{}}}],["november",{"_index":2316,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["null",{"_index":788,"title":{},"body":{"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["number",{"_index":450,"title":{},"body":{"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/CursorPositionService.html":{},"components/DialogEditProfileComponent.html":{},"components/MainMenuComponent.html":{},"interfaces/Message.html":{},"interfaces/Reaction.html":{},"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["nutzen",{"_index":1397,"title":{},"body":{"components/LoginComponent.html":{}}}],["obj",{"_index":2382,"title":{},"body":{"classes/User.html":{}}}],["obj.email",{"_index":2394,"title":{},"body":{"classes/User.html":{}}}],["obj.id",{"_index":2392,"title":{},"body":{"classes/User.html":{}}}],["obj.is_typing",{"_index":2396,"title":{},"body":{"classes/User.html":{}}}],["obj.last_channel",{"_index":2398,"title":{},"body":{"classes/User.html":{}}}],["obj.last_thread",{"_index":2399,"title":{},"body":{"classes/User.html":{}}}],["obj.logged_in",{"_index":2395,"title":{},"body":{"classes/User.html":{}}}],["obj.name",{"_index":2393,"title":{},"body":{"classes/User.html":{}}}],["obj.profile_img",{"_index":2397,"title":{},"body":{"classes/User.html":{}}}],["object",{"_index":2157,"title":{},"body":{"components/SignInComponent.html":{}}}],["oder",{"_index":1406,"title":{},"body":{"components/LoginComponent.html":{}}}],["offline",{"_index":1239,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["ok",{"_index":1769,"title":{},"body":{"injectables/MessageService.html":{}}}],["oktober",{"_index":2315,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["omit",{"_index":562,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["onauthstatechanged",{"_index":2459,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["onauthstatechanged(this.auth",{"_index":2496,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["onclick",{"_index":1791,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["ondestroy",{"_index":96,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["onfilterusers",{"_index":279,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["oninit",{"_index":95,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SearchResultsComponent.html":{}}}],["onremoveselecteduser",{"_index":280,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["onremoveselecteduser(user",{"_index":287,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["onresize",{"_index":1588,"title":{},"body":{"components/MainPageComponent.html":{}}}],["onresize(event",{"_index":1596,"title":{},"body":{"components/MainPageComponent.html":{}}}],["onselectuser",{"_index":281,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["onselectuser(user",{"_index":288,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["onsnapshot",{"_index":614,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"components/SignInComponent.html":{}}}],["onsnapshot(q",{"_index":674,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["onsnapshot(this.getchannelref(channel_id",{"_index":646,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["onsnapshot(this.getchannelref(thread_id",{"_index":650,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["onsubmit",{"_index":1094,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["onupdatemembers",{"_index":282,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["oobcode",{"_index":1315,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"injectables/UserAuthService.html":{}}}],["openaddchanneldialog",{"_index":1497,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["openadduserdialog",{"_index":51,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{}}}],["openadduserdialog(button",{"_index":70,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["openavatardialog",{"_index":1095,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["openchannel",{"_index":1553,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["openchannel(user_id",{"_index":1560,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["opencurrentuser",{"_index":1293,"title":{},"body":{"components/LogOutDialogComponent.html":{}}}],["opendialog",{"_index":855,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["opendialog(component",{"_index":870,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["opendialogabsolute",{"_index":856,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["opendialogabsolute(undefined",{"_index":873,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["opendirectchannel",{"_index":1203,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["opendirectchannel(user_id",{"_index":1210,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["opendirectchannelmobile",{"_index":1554,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["opendirectchannelmobile(user_id",{"_index":1563,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["openlogoutdialog",{"_index":1452,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["openlogoutdialog(button",{"_index":1463,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["opennewchannel",{"_index":551,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogEditChannelComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuHeaderComponent.html":{}}}],["opennewchannel(currentuserid",{"_index":583,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["openprofile",{"_index":1930,"title":{},"body":{"injectables/ProfileService.html":{}}}],["openprofile(userid",{"_index":1936,"title":{},"body":{"injectables/ProfileService.html":{}}}],["openprofiledirective",{"_index":258,"title":{"directives/OpenProfileDirective.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["openthread",{"_index":2373,"title":{},"body":{"injectables/ThreadService.html":{}}}],["openuserprofile",{"_index":948,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowMembersComponent.html":{}}}],["openuserprofile(userid",{"_index":957,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["optional",{"_index":63,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["orderby",{"_index":1702,"title":{},"body":{"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["orderby('created_at",{"_index":1731,"title":{},"body":{"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["out",{"_index":215,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{},"index.html":{}}}],["overlay",{"_index":510,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["overview",{"_index":2652,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":2603,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":130,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"injectables/UserAuthService.html":{},"index.html":{}}}],["page'},{'name",{"_index":211,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["page.component",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SignInComponent.html":{}}}],["page.component.html",{"_index":1411,"title":{},"body":{"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{}}}],["page.component.scss",{"_index":1412,"title":{},"body":{"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{}}}],["page.component.ts",{"_index":1410,"title":{},"body":{"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:19",{"_index":1419,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:20",{"_index":1420,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:21",{"_index":1415,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:22",{"_index":1591,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:23",{"_index":1421,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:24",{"_index":1602,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:25",{"_index":1599,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:26",{"_index":1601,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:27",{"_index":1600,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:32",{"_index":1595,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:38",{"_index":1416,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:42",{"_index":1598,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:43",{"_index":1417,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page.component.ts:51",{"_index":1594,"title":{},"body":{"components/MainPageComponent.html":{}}}],["page.component.ts:55",{"_index":1418,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page/avatar",{"_index":2177,"title":{},"body":{"components/SignInComponent.html":{}}}],["page/avatar/avatar.component.ts",{"_index":428,"title":{},"body":{"components/AvatarComponent.html":{},"coverage.html":{}}}],["page/avatar/avatar.component.ts:102",{"_index":459,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:113",{"_index":452,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:17",{"_index":470,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:26",{"_index":474,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:27",{"_index":475,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:28",{"_index":472,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:29",{"_index":478,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:30",{"_index":477,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:31",{"_index":471,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:32",{"_index":448,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:41",{"_index":457,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:46",{"_index":456,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:53",{"_index":455,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:60",{"_index":461,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:69",{"_index":451,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:75",{"_index":454,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:87",{"_index":458,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/avatar/avatar.component.ts:94",{"_index":453,"title":{},"body":{"components/AvatarComponent.html":{}}}],["page/channel/channel.component.ts",{"_index":2573,"title":{},"body":{"coverage.html":{}}}],["page/channel/dialog",{"_index":906,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"coverage.html":{}}}],["page/channel/message/edit",{"_index":2579,"title":{},"body":{"coverage.html":{}}}],["page/channel/message/message.component.ts",{"_index":2583,"title":{},"body":{"coverage.html":{}}}],["page/check",{"_index":726,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["page/email",{"_index":1431,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page/imprint",{"_index":1427,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page/login",{"_index":384,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["page/login/login.component.ts",{"_index":1305,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["page/login/login.component.ts:103",{"_index":1330,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:131",{"_index":1342,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:143",{"_index":1327,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:22",{"_index":1349,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:23",{"_index":1348,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:24",{"_index":1353,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:25",{"_index":1354,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:26",{"_index":1352,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:27",{"_index":1351,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:28",{"_index":1325,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:34",{"_index":1355,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:38",{"_index":1345,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:43",{"_index":1341,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:59",{"_index":1347,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:68",{"_index":1340,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:76",{"_index":1343,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:92",{"_index":1344,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/login/login.component.ts:97",{"_index":1346,"title":{},"body":{"components/LoginComponent.html":{}}}],["page/main",{"_index":10,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/LogOutDialogComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"coverage.html":{}}}],["page/message",{"_index":2588,"title":{},"body":{"coverage.html":{}}}],["page/privacy",{"_index":1428,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["page/reset",{"_index":1985,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["page/sign",{"_index":2128,"title":{},"body":{"components/SignInComponent.html":{},"coverage.html":{}}}],["page/signin",{"_index":488,"title":{},"body":{"components/AvatarComponent.html":{},"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["page/thread/thread.component.ts",{"_index":2268,"title":{},"body":{"components/ThreadComponent.html":{},"coverage.html":{}}}],["page/thread/thread.component.ts:103",{"_index":2289,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:114",{"_index":2286,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:125",{"_index":2292,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:136",{"_index":2291,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:143",{"_index":2284,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:149",{"_index":2297,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:24",{"_index":2301,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:25",{"_index":2300,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:26",{"_index":2304,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:27",{"_index":2303,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:40",{"_index":2329,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:49",{"_index":2318,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:64",{"_index":2283,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:68",{"_index":2305,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:69",{"_index":2321,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:70",{"_index":2298,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:71",{"_index":2320,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:72",{"_index":2319,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:88",{"_index":2296,"title":{},"body":{"components/ThreadComponent.html":{}}}],["page/thread/thread.component.ts:95",{"_index":2294,"title":{},"body":{"components/ThreadComponent.html":{}}}],["panelclass",{"_index":883,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["pannelclass",{"_index":902,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["parameters",{"_index":59,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["parentelement",{"_index":799,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["part.tolowercase().startswith(lowercaseterm",{"_index":2094,"title":{},"body":{"injectables/SearchService.html":{}}}],["part.tolowercase().startswith(searchterm",{"_index":2526,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["password",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{}}}],["password'},{'name",{"_index":242,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["password.component",{"_index":1357,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginPageComponent.html":{}}}],["password.component.html",{"_index":1987,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1988,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1986,"title":{},"body":{"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:17",{"_index":2007,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:18",{"_index":2005,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:19",{"_index":2006,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:20",{"_index":1995,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:25",{"_index":2000,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:30",{"_index":2001,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:37",{"_index":1999,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:47",{"_index":2002,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":2004,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password.component.ts:65",{"_index":1997,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["password/reset",{"_index":1356,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["password?mode=action&oobcode=code",{"_index":407,"title":{},"body":{"components/AppComponent.html":{}}}],["passworderror",{"_index":2138,"title":{},"body":{"components/SignInComponent.html":{}}}],["passwort",{"_index":749,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{}}}],["passwörter",{"_index":2015,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["paste",{"_index":2222,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["path",{"_index":1661,"title":{},"body":{"injectables/MessageService.html":{}}}],["picker",{"_index":1161,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["picker'},{'name",{"_index":193,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["picker.component.html",{"_index":1163,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["picker.component.scss",{"_index":1164,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["picker.component.ts",{"_index":1160,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{},"coverage.html":{}}}],["picker.component.ts:12",{"_index":1166,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["picker.component.ts:14",{"_index":1169,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["picker.component.ts:16",{"_index":1168,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["picker/dialog",{"_index":1159,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{},"coverage.html":{}}}],["pickercomponent",{"_index":1162,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["pipe(take(1",{"_index":1043,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["placeholders",{"_index":1885,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["plz",{"_index":1282,"title":{},"body":{"components/ImprintComponent.html":{}}}],["policy",{"_index":1429,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["policy'},{'name",{"_index":236,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["policy.component.ts",{"_index":2598,"title":{},"body":{"coverage.html":{}}}],["policy/privacy",{"_index":2597,"title":{},"body":{"coverage.html":{}}}],["popup",{"_index":232,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["popups/email",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"components/CheckEmailComponent.html":{}}}],["popups/login",{"_index":2008,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["popups/user",{"_index":479,"title":{},"body":{"components/AvatarComponent.html":{}}}],["popupsearchcomponent",{"_index":231,"title":{"components/PopupSearchComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["position",{"_index":134,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"injectables/ProfileService.html":{}}}],["position.service",{"_index":1851,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["position.service.ts",{"_index":770,"title":{},"body":{"injectables/CursorPositionService.html":{},"coverage.html":{}}}],["position.service.ts:12",{"_index":792,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["position.service.ts:16",{"_index":790,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["position.service.ts:29",{"_index":785,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["position.service.ts:41",{"_index":787,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["position.service.ts:7",{"_index":801,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["position.service.ts:74",{"_index":782,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["position.service.ts:79",{"_index":800,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["position.service.ts:8",{"_index":780,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["position.service.ts:88",{"_index":797,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["positionasjson",{"_index":889,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["precaretrange",{"_index":807,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["precaretrange.selectnodecontents(container",{"_index":809,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["precaretrange.setend(range.startcontainer",{"_index":810,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["precarettext",{"_index":812,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["precarettext.length",{"_index":815,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["prefix",{"_index":2072,"title":{},"body":{"injectables/SearchService.html":{}}}],["prevent",{"_index":2259,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["primary",{"_index":312,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["privacy",{"_index":235,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["privacypolicycomponent",{"_index":234,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["private",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{}}}],["process",{"_index":743,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["profil",{"_index":1156,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{}}}],["profile",{"_index":238,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["profile'},{'name",{"_index":190,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["profile.component",{"_index":974,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["profile.component.html",{"_index":1083,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.scss",{"_index":1084,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts",{"_index":1081,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:106",{"_index":1108,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:123",{"_index":1100,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:130",{"_index":1098,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:18",{"_index":1120,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:23",{"_index":1215,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:24",{"_index":1214,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:25",{"_index":1111,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":1121,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:34",{"_index":1112,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:35",{"_index":1124,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:36",{"_index":1096,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:39",{"_index":1113,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:40",{"_index":1126,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:41",{"_index":1125,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:42",{"_index":1122,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:46",{"_index":1107,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:54",{"_index":1209,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:59",{"_index":1208,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:63",{"_index":1105,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:69",{"_index":1211,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:70",{"_index":1106,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:75",{"_index":1109,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:80",{"_index":1104,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:82",{"_index":1206,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:89",{"_index":1103,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.component.ts:90",{"_index":1204,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["profile.component.ts:96",{"_index":1110,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["profile.directive",{"_index":310,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/LogOutDialogComponent.html":{},"components/ProfileButtonComponent.html":{},"components/SearchResultsComponent.html":{}}}],["profile.directive.ts",{"_index":1789,"title":{},"body":{"directives/OpenProfileDirective.html":{},"coverage.html":{}}}],["profile.directive.ts:10",{"_index":1796,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["profile.directive.ts:18",{"_index":1798,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["profile.directive.ts:9",{"_index":1797,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["profile/dialog",{"_index":973,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["profile_img",{"_index":1331,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["profilebuttoncomponent",{"_index":237,"title":{"components/ProfileButtonComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["profileimg",{"_index":1551,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["profileservice",{"_index":950,"title":{"injectables/ProfileService.html":{}},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowProfileComponent.html":{},"directives/OpenProfileDirective.html":{},"injectables/ProfileService.html":{},"coverage.html":{}}}],["project",{"_index":2633,"title":{},"body":{"index.html":{}}}],["promise",{"_index":69,"title":{},"body":{"components/AddChannelCardComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/MessageService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{}}}],["promise((resolve",{"_index":1747,"title":{},"body":{"injectables/MessageService.html":{},"injectables/UserAuthService.html":{}}}],["promise(async",{"_index":2495,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["promise.all",{"_index":1373,"title":{},"body":{"components/LoginComponent.html":{}}}],["promise.all([this.loaduserdata(this.loginemail",{"_index":1362,"title":{},"body":{"components/LoginComponent.html":{}}}],["promise.resolve(this.updateuserpassword(newpassword)).then",{"_index":2012,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["properties",{"_index":39,"title":{"properties.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/PopupSearchComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UtilityService.html":{},"properties.html":{}}}],["provide",{"_index":266,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["provideanimationsasync",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":625,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"injectables/StateManagementService.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["providefirebaseapp",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":2479,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["providerouter(routes",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":265,"title":{},"body":{"components/AddMemberCardComponent.html":{},"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["präfix",{"_index":1857,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["public",{"_index":40,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"injectables/ProfileService.html":{},"components/SearchResultsComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{}}}],["purpose",{"_index":2641,"title":{},"body":{"index.html":{}}}],["px",{"_index":896,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["q",{"_index":670,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["query",{"_index":620,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["query(this.getchannelsref",{"_index":712,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["query(this.getmessagesref",{"_index":1739,"title":{},"body":{"injectables/MessageService.html":{}}}],["query(this.getreactionsref",{"_index":1977,"title":{},"body":{"injectables/ReactionService.html":{}}}],["querysnapshot",{"_index":1784,"title":{},"body":{"injectables/MessageService.html":{}}}],["querysnapshot.docs",{"_index":1786,"title":{},"body":{"injectables/MessageService.html":{}}}],["querysnapshot.foreach((doc",{"_index":715,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["range",{"_index":784,"title":{},"body":{"injectables/CursorPositionService.html":{},"components/PopupSearchComponent.html":{}}}],["range!.setstartafter(element",{"_index":1896,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["range.clonerange",{"_index":808,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["range.collapse(true",{"_index":843,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["range.setend(node",{"_index":847,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["range.setendafter(parentelement",{"_index":842,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["range.setstart(node",{"_index":846,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["range.setstartafter(parentelement",{"_index":841,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["range.startcontainer",{"_index":1905,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["range.startoffset",{"_index":811,"title":{},"body":{"injectables/CursorPositionService.html":{},"components/PopupSearchComponent.html":{}}}],["reaction",{"_index":1948,"title":{"interfaces/Reaction.html":{}},"body":{"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"coverage.html":{}}}],["reaction.id",{"_index":1982,"title":{},"body":{"injectables/ReactionService.html":{}}}],["reactions",{"_index":1621,"title":{},"body":{"interfaces/Message.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["reactions.foreach((reaction",{"_index":1980,"title":{},"body":{"injectables/ReactionService.html":{}}}],["reactionsarray",{"_index":1967,"title":{},"body":{"injectables/ReactionService.html":{}}}],["reactionsarray.length",{"_index":1979,"title":{},"body":{"injectables/ReactionService.html":{}}}],["reactionsarray.push(this.setreaction(reaction.data",{"_index":1981,"title":{},"body":{"injectables/ReactionService.html":{}}}],["reactionservice",{"_index":1952,"title":{"injectables/ReactionService.html":{}},"body":{"injectables/ReactionService.html":{},"coverage.html":{}}}],["reactiveformsmodule",{"_index":1082,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["read",{"_index":669,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["rect",{"_index":893,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["rect.bottom",{"_index":895,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["rect.left",{"_index":897,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["rect.right",{"_index":898,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["ref",{"_index":664,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["ref(storage",{"_index":1750,"title":{},"body":{"injectables/MessageService.html":{}}}],["reference",{"_index":2654,"title":{},"body":{"index.html":{}}}],["references",{"_index":1971,"title":{},"body":{"injectables/ReactionService.html":{}}}],["regex",{"_index":2249,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["regexp(`@${user.id",{"_index":2250,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["region",{"_index":824,"title":{},"body":{"injectables/CursorPositionService.html":{},"injectables/UserAuthService.html":{}}}],["registeruser",{"_index":2413,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["registeruser(email",{"_index":2434,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["reject",{"_index":1748,"title":{},"body":{"injectables/MessageService.html":{},"injectables/UserAuthService.html":{}}}],["reject(error",{"_index":1755,"title":{},"body":{"injectables/MessageService.html":{}}}],["removefilterusers",{"_index":949,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["removemessagesfromemptychannel",{"_index":1642,"title":{},"body":{"injectables/MessageService.html":{}}}],["removemessagesfromemptychannel(channelid",{"_index":1675,"title":{},"body":{"injectables/MessageService.html":{}}}],["removeselecteduser",{"_index":2508,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["removeselecteduser(selectedusers",{"_index":2517,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["removethreadmessagesfromchannel",{"_index":1643,"title":{},"body":{"injectables/MessageService.html":{}}}],["removethreadmessagesfromchannel(threadid",{"_index":1677,"title":{},"body":{"injectables/MessageService.html":{}}}],["removeuserfromchannel",{"_index":552,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["removeuserfromchannel(channelid",{"_index":585,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["renderer",{"_index":1455,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["renderer2",{"_index":1456,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["replace",{"_index":1872,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["replace(/&nbsp;/g",{"_index":822,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["replace(//gi",{"_index":820,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["replace(/]+>/g",{"_index":823,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["replacerangewithhtml",{"_index":1815,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["replacerangewithhtml(range",{"_index":1834,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["reset",{"_index":241,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["resetemail",{"_index":733,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["resetpassword",{"_index":1989,"title":{},"body":{"components/ResetPasswordComponent.html":{},"injectables/UserAuthService.html":{}}}],["resetpassword(email",{"_index":2436,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["resetpasswordagain",{"_index":1990,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["resetpasswordcomponent",{"_index":240,"title":{"components/ResetPasswordComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["resetuser",{"_index":1414,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["resolve",{"_index":1756,"title":{},"body":{"injectables/MessageService.html":{},"injectables/UserAuthService.html":{}}}],["resolve(false",{"_index":2498,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["resolve(isanonymous",{"_index":2501,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["resolve(true",{"_index":2497,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["response",{"_index":1762,"title":{},"body":{"injectables/MessageService.html":{}}}],["response.blob",{"_index":1771,"title":{},"body":{"injectables/MessageService.html":{}}}],["response.ok",{"_index":1766,"title":{},"body":{"injectables/MessageService.html":{}}}],["restore",{"_index":825,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["restorecursorposition",{"_index":775,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["restorecursorposition(container",{"_index":786,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["result",{"_index":2354,"title":{},"body":{"components/ThreadComponent.html":{}}}],["result.user",{"_index":2482,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["results",{"_index":263,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["results'},{'name",{"_index":247,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["results.channels",{"_index":1871,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["results.component.html",{"_index":2021,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.scss",{"_index":2022,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts",{"_index":2020,"title":{},"body":{"components/SearchResultsComponent.html":{},"coverage.html":{}}}],["results.component.ts:22",{"_index":2033,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:23",{"_index":2032,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:24",{"_index":2030,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:25",{"_index":2031,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:26",{"_index":2029,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:30",{"_index":2039,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:31",{"_index":2040,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:32",{"_index":2041,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:36",{"_index":2037,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:45",{"_index":2038,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:51",{"_index":2035,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.component.ts:56",{"_index":2034,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["results.users",{"_index":1870,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["results/search",{"_index":2019,"title":{},"body":{"components/SearchResultsComponent.html":{},"coverage.html":{}}}],["return",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChannelFirebaseService.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{}}}],["returns",{"_index":68,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["returntologin",{"_index":1993,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["ricardo",{"_index":1275,"title":{},"body":{"components/ImprintComponent.html":{}}}],["right",{"_index":423,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberMobileComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"injectables/ProfileService.html":{}}}],["root",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChannelFirebaseService.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"injectables/MessageService.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"injectables/StateManagementService.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["root'},{'name",{"_index":175,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["route",{"_index":446,"title":{},"body":{"components/AvatarComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["router",{"_index":46,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{}}}],["routerlink",{"_index":1306,"title":{},"body":{"components/LoginComponent.html":{}}}],["routermodule",{"_index":1307,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{}}}],["routeroutlet",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["rtl",{"_index":426,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["runtransaction",{"_index":623,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["runtransaction(this.firestore",{"_index":681,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["rxjs",{"_index":1711,"title":{},"body":{"injectables/MessageService.html":{},"injectables/SharedService.html":{},"injectables/StateManagementService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1029,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["samstag",{"_index":2328,"title":{},"body":{"components/ThreadComponent.html":{}}}],["savecursorposition",{"_index":776,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["savecursorposition(container",{"_index":789,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["saveuser",{"_index":2414,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["saveuser(name",{"_index":2438,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["schließen",{"_index":1613,"title":{},"body":{"components/MainPageComponent.html":{}}}],["schreiben",{"_index":2182,"title":{},"body":{"components/SignInComponent.html":{}}}],["search",{"_index":244,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["search'},{'name",{"_index":233,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["search.component.html",{"_index":1807,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.scss",{"_index":1808,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts",{"_index":1806,"title":{},"body":{"components/PopupSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:110",{"_index":1826,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:134",{"_index":1836,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:31",{"_index":1840,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:32",{"_index":1839,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:33",{"_index":1842,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:35",{"_index":1822,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:36",{"_index":1821,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:37",{"_index":1820,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:41",{"_index":1841,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:42",{"_index":1844,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:43",{"_index":1843,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:44",{"_index":1837,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:46",{"_index":1838,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:49",{"_index":1831,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:53",{"_index":1833,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:56",{"_index":1828,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search.component.ts:80",{"_index":1824,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["search/popup",{"_index":1805,"title":{},"body":{"components/PopupSearchComponent.html":{},"coverage.html":{}}}],["searchbarcomponent",{"_index":243,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["searchcontrol",{"_index":2028,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["searchinput",{"_index":272,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"injectables/UserManagementService.html":{}}}],["searchinput.trim().tolowercase",{"_index":2523,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["searchresultscomponent",{"_index":246,"title":{"components/SearchResultsComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["searchservice",{"_index":1810,"title":{"injectables/SearchService.html":{}},"body":{"components/PopupSearchComponent.html":{},"injectables/SearchService.html":{},"coverage.html":{}}}],["searchterm",{"_index":1817,"title":{},"body":{"components/PopupSearchComponent.html":{},"injectables/SearchService.html":{},"injectables/UserManagementService.html":{}}}],["searchterm(searchterm",{"_index":2079,"title":{},"body":{"injectables/SearchService.html":{}}}],["searchterm.length",{"_index":1908,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["searchterm.startswith",{"_index":1854,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["searchterm.trim().tolowercase",{"_index":2088,"title":{},"body":{"injectables/SearchService.html":{}}}],["sein",{"_index":151,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["selectchannel",{"_index":1498,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["selectchannel(channelid",{"_index":1505,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["selected.id",{"_index":2529,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["selectedavatar",{"_index":436,"title":{},"body":{"components/AvatarComponent.html":{}}}],["selectedchannelid",{"_index":2196,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["selectedoption",{"_index":273,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["selecteduserid",{"_index":988,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/MainMenuDmComponent.html":{},"components/PopupSearchComponent.html":{},"injectables/StateManagementService.html":{}}}],["selectedusers",{"_index":274,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"injectables/UserManagementService.html":{}}}],["selectedusers.filter((u",{"_index":2534,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["selectedusers.find((u",{"_index":2532,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["selectedusers.length",{"_index":335,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["selectedusers.map(user",{"_index":2536,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["selectedusers.push(user",{"_index":2533,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["selectedusers.some(selected",{"_index":2528,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["selection",{"_index":796,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["selection.addrange(range",{"_index":845,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["selection.getrangeat(0",{"_index":806,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["selection.rangecount",{"_index":805,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["selection.removeallranges",{"_index":844,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["selector",{"_index":18,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["selectuser",{"_index":2509,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["selectuser(selectedusers",{"_index":2519,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["send",{"_index":742,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["senden",{"_index":761,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["sendpasswordresetemail",{"_index":734,"title":{},"body":{"components/CheckEmailComponent.html":{},"injectables/UserAuthService.html":{}}}],["sendpasswordresetemail(this.auth",{"_index":2491,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["september",{"_index":2314,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["server",{"_index":2615,"title":{},"body":{"dependencies.html":{}}}],["serverconfig",{"_index":2557,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["servername",{"_index":1448,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["services/cursor",{"_index":1850,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["services/custom",{"_index":110,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{}}}],["services/profile.service",{"_index":970,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowProfileComponent.html":{},"directives/OpenProfileDirective.html":{}}}],["services/search.service",{"_index":1846,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["services/shared.service",{"_index":311,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/ThreadComponent.html":{}}}],["services/state",{"_index":1517,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["services/thread.service",{"_index":1216,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/SearchResultsComponent.html":{},"components/ThreadComponent.html":{}}}],["services/user",{"_index":307,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["services/utility.service",{"_index":2042,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["set",{"_index":1897,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["set([currentchannel['creator",{"_index":696,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["setavatartouser",{"_index":443,"title":{},"body":{"components/AvatarComponent.html":{}}}],["setchannel",{"_index":553,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["setchannel(data",{"_index":587,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["setcurrentchannel",{"_index":554,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["setcurrentchannel(channel_id",{"_index":590,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["setfocus",{"_index":2281,"title":{},"body":{"components/ThreadComponent.html":{}}}],["setgoogleuser",{"_index":1322,"title":{},"body":{"components/LoginComponent.html":{}}}],["setlastcursorposition",{"_index":777,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["setlastcursorposition(container",{"_index":791,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["setmessage",{"_index":1644,"title":{},"body":{"injectables/MessageService.html":{}}}],["setmessage(data",{"_index":1680,"title":{},"body":{"injectables/MessageService.html":{}}}],["setownprofilestatus",{"_index":1931,"title":{},"body":{"injectables/ProfileService.html":{}}}],["setownprofilestatus(status",{"_index":1938,"title":{},"body":{"injectables/ProfileService.html":{}}}],["setrange",{"_index":778,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["setrange(range",{"_index":793,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["setrangeafterparentelement",{"_index":779,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["setrangeafterparentelement(range",{"_index":798,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["setreaction",{"_index":1956,"title":{},"body":{"injectables/ReactionService.html":{}}}],["setreaction(data",{"_index":1963,"title":{},"body":{"injectables/ReactionService.html":{}}}],["setselectedchannelid",{"_index":2199,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["setselectedchannelid(id",{"_index":2203,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["setselecteduserid",{"_index":2200,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["setselecteduserid(id",{"_index":2205,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["settimeout",{"_index":415,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["setuserchannel",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["setviewinguserid",{"_index":1932,"title":{},"body":{"injectables/ProfileService.html":{}}}],["setviewinguserid(userid",{"_index":1941,"title":{},"body":{"injectables/ProfileService.html":{}}}],["shared/dialog",{"_index":972,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{},"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["shared/directives/open",{"_index":309,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/LogOutDialogComponent.html":{},"components/SearchResultsComponent.html":{}}}],["shared/enums/channel",{"_index":106,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/SearchService.html":{}}}],["sharedservice",{"_index":275,"title":{"injectables/SharedService.html":{}},"body":{"components/AddMemberCardComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"injectables/SharedService.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["sharedservice.ismenuopen",{"_index":1610,"title":{},"body":{"components/MainPageComponent.html":{}}}],["shouldshowsearchresults",{"_index":2026,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["show",{"_index":195,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["showmobilediv",{"_index":2107,"title":{},"body":{"injectables/SharedService.html":{}}}],["showmobiledivsubject",{"_index":2108,"title":{},"body":{"injectables/SharedService.html":{}}}],["showmobileworkspace",{"_index":1453,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["showuserlist",{"_index":276,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["sie",{"_index":149,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/CheckEmailComponent.html":{},"components/PopupSearchComponent.html":{},"components/SignInComponent.html":{}}}],["sign",{"_index":249,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["signinanonymously",{"_index":2457,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["signinanonymously(this.auth",{"_index":2464,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["signincomponent",{"_index":248,"title":{"components/SignInComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["signinwithemailandpassword",{"_index":2455,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["signinwithemailandpassword(this.auth",{"_index":2463,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["signinwithpopup",{"_index":2451,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["signinwithpopup(this.auth",{"_index":2480,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["signout",{"_index":2458,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["signout(this.auth",{"_index":2478,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["simplechange",{"_index":2237,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["simplechanges",{"_index":1830,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["simplesnackbar",{"_index":2239,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["slack",{"_index":2643,"title":{},"body":{"index.html":{}}}],["snackbar",{"_index":256,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["snackbar'},{'name",{"_index":202,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["snackbar.component",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["snackbar.component.html",{"_index":1245,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["snackbar.component.scss",{"_index":1246,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["snackbar.component.ts",{"_index":1244,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["snackbar.component.ts:12",{"_index":1249,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["snackbar/email",{"_index":387,"title":{},"body":{"components/AppComponent.html":{},"components/CheckEmailComponent.html":{},"components/EmailSnackbarComponent.html":{},"coverage.html":{}}}],["snackbar/login",{"_index":1442,"title":{},"body":{"components/LoginSnackbarComponent.html":{},"components/ResetPasswordComponent.html":{},"coverage.html":{}}}],["snackbar/user",{"_index":480,"title":{},"body":{"components/AvatarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["snackbarref",{"_index":1247,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["snapshot",{"_index":1754,"title":{},"body":{"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["sollten",{"_index":148,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["some((part",{"_index":2093,"title":{},"body":{"injectables/SearchService.html":{},"injectables/UserManagementService.html":{}}}],["sonderzeichen",{"_index":2190,"title":{},"body":{"components/SignInComponent.html":{}}}],["sonntag",{"_index":2322,"title":{},"body":{"components/ThreadComponent.html":{}}}],["sopa",{"_index":1274,"title":{},"body":{"components/ImprintComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["specific",{"_index":334,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["speichern",{"_index":1069,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["split",{"_index":2092,"title":{},"body":{"injectables/SearchService.html":{},"injectables/UserManagementService.html":{}}}],["src/.../app.config.server.ts",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../channel",{"_index":2628,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../main.server.ts",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":343,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:57",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:70",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:81",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:90",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":2553,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":2558,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts",{"_index":533,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"coverage.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:104",{"_index":582,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:110",{"_index":571,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:115",{"_index":568,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:120",{"_index":588,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:135",{"_index":560,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:143",{"_index":593,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:158",{"_index":596,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:166",{"_index":599,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:183",{"_index":586,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:200",{"_index":565,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:208",{"_index":566,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:225",{"_index":563,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:23",{"_index":608,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:234",{"_index":584,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:24",{"_index":602,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:25",{"_index":604,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:35",{"_index":606,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:45",{"_index":601,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:47",{"_index":609,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:48",{"_index":611,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:49",{"_index":558,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:54",{"_index":570,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:63",{"_index":580,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:80",{"_index":591,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:86",{"_index":573,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/channelfirebase.service.ts:97",{"_index":576,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["src/app/firebase.service/message.service.ts",{"_index":1623,"title":{},"body":{"injectables/MessageService.html":{},"coverage.html":{}}}],["src/app/firebase.service/message.service.ts:111",{"_index":1652,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:119",{"_index":1684,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:134",{"_index":1686,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:149",{"_index":1682,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:161",{"_index":1688,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:172",{"_index":1690,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:188",{"_index":1665,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:202",{"_index":1663,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:215",{"_index":1657,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:227",{"_index":1660,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:234",{"_index":1678,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:243",{"_index":1676,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:29",{"_index":1698,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:30",{"_index":1693,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:31",{"_index":1694,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:32",{"_index":1696,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:33",{"_index":1691,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:34",{"_index":1699,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:35",{"_index":1695,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:49",{"_index":1700,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:50",{"_index":1701,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:51",{"_index":1650,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:58",{"_index":1654,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:63",{"_index":1674,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:70",{"_index":1670,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:75",{"_index":1672,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:80",{"_index":1673,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:85",{"_index":1667,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/message.service.ts:90",{"_index":1681,"title":{},"body":{"injectables/MessageService.html":{}}}],["src/app/firebase.service/reaction.service.ts",{"_index":1953,"title":{},"body":{"injectables/ReactionService.html":{},"coverage.html":{}}}],["src/app/firebase.service/reaction.service.ts:11",{"_index":1959,"title":{},"body":{"injectables/ReactionService.html":{}}}],["src/app/firebase.service/reaction.service.ts:16",{"_index":1962,"title":{},"body":{"injectables/ReactionService.html":{}}}],["src/app/firebase.service/reaction.service.ts:21",{"_index":1964,"title":{},"body":{"injectables/ReactionService.html":{}}}],["src/app/firebase.service/reaction.service.ts:34",{"_index":1961,"title":{},"body":{"injectables/ReactionService.html":{}}}],["src/app/firebase.service/reaction.service.ts:42",{"_index":1966,"title":{},"body":{"injectables/ReactionService.html":{}}}],["src/app/firebase.service/reaction.service.ts:56",{"_index":1969,"title":{},"body":{"injectables/ReactionService.html":{}}}],["src/app/firebase.service/user.auth.service.ts",{"_index":2401,"title":{},"body":{"injectables/UserAuthService.html":{},"coverage.html":{}}}],["src/app/firebase.service/user.auth.service.ts:102",{"_index":2419,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:109",{"_index":2435,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:114",{"_index":2423,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:119",{"_index":2420,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:12",{"_index":2442,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:13",{"_index":2441,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:132",{"_index":2421,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:14",{"_index":2444,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:15",{"_index":2443,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:16",{"_index":2416,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:18",{"_index":2440,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:19",{"_index":2445,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:24",{"_index":2431,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:29",{"_index":2427,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:34",{"_index":2426,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:39",{"_index":2418,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:54",{"_index":2429,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:66",{"_index":2424,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:71",{"_index":2433,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:76",{"_index":2432,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:88",{"_index":2439,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.auth.service.ts:97",{"_index":2437,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["src/app/firebase.service/user.service.ts",{"_index":2564,"title":{},"body":{"coverage.html":{}}}],["src/app/interfaces/channel.interface.ts",{"_index":530,"title":{},"body":{"interfaces/Channel.html":{},"coverage.html":{}}}],["src/app/interfaces/message.interface.ts",{"_index":1615,"title":{},"body":{"interfaces/Message.html":{},"coverage.html":{}}}],["src/app/interfaces/reaction.interface.ts",{"_index":1949,"title":{},"body":{"interfaces/Reaction.html":{},"coverage.html":{}}}],["src/app/interfaces/user.interface.ts",{"_index":2569,"title":{},"body":{"coverage.html":{}}}],["src/app/login",{"_index":427,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{},"coverage.html":{}}}],["src/app/main",{"_index":9,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/LogOutDialogComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/ThreadComponent.html":{},"coverage.html":{}}}],["src/app/models/user.ts",{"_index":2379,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/models/user.ts:10",{"_index":2381,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:2",{"_index":2384,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:24",{"_index":2391,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:3",{"_index":2388,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:4",{"_index":2383,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:5",{"_index":2389,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:6",{"_index":2387,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:7",{"_index":2385,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:8",{"_index":2390,"title":{},"body":{"classes/User.html":{}}}],["src/app/models/user.ts:9",{"_index":2386,"title":{},"body":{"classes/User.html":{}}}],["src/app/popups/email",{"_index":1243,"title":{},"body":{"components/EmailSnackbarComponent.html":{},"coverage.html":{}}}],["src/app/popups/login",{"_index":1441,"title":{},"body":{"components/LoginSnackbarComponent.html":{},"coverage.html":{}}}],["src/app/popups/user",{"_index":2502,"title":{},"body":{"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["src/app/services/cursor",{"_index":769,"title":{},"body":{"injectables/CursorPositionService.html":{},"coverage.html":{}}}],["src/app/services/custom",{"_index":849,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"coverage.html":{}}}],["src/app/services/profile.service.ts",{"_index":1926,"title":{},"body":{"injectables/ProfileService.html":{},"coverage.html":{}}}],["src/app/services/profile.service.ts:11",{"_index":1943,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:12",{"_index":1933,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:17",{"_index":1937,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:31",{"_index":1939,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:36",{"_index":1934,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:41",{"_index":1942,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/profile.service.ts:46",{"_index":1935,"title":{},"body":{"injectables/ProfileService.html":{}}}],["src/app/services/search.service.ts",{"_index":2052,"title":{},"body":{"injectables/SearchService.html":{},"coverage.html":{}}}],["src/app/services/search.service.ts:13",{"_index":2061,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:21",{"_index":2063,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:34",{"_index":2066,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:43",{"_index":2080,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:48",{"_index":2076,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:58",{"_index":2068,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:68",{"_index":2074,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:78",{"_index":2065,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:83",{"_index":2083,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:88",{"_index":2078,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/search.service.ts:98",{"_index":2071,"title":{},"body":{"injectables/SearchService.html":{}}}],["src/app/services/shared.service.ts",{"_index":2105,"title":{},"body":{"injectables/SharedService.html":{},"coverage.html":{}}}],["src/app/services/shared.service.ts:10",{"_index":2122,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:11",{"_index":2119,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:13",{"_index":2118,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:14",{"_index":2110,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:18",{"_index":2113,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:23",{"_index":2111,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:28",{"_index":2115,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:33",{"_index":2112,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/shared.service.ts:9",{"_index":2120,"title":{},"body":{"injectables/SharedService.html":{}}}],["src/app/services/state",{"_index":2194,"title":{},"body":{"injectables/StateManagementService.html":{},"coverage.html":{}}}],["src/app/services/thread.service.ts",{"_index":2371,"title":{},"body":{"injectables/ThreadService.html":{},"coverage.html":{}}}],["src/app/services/thread.service.ts:13",{"_index":2376,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/thread.service.ts:18",{"_index":2375,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/thread.service.ts:8",{"_index":2374,"title":{},"body":{"injectables/ThreadService.html":{}}}],["src/app/services/user",{"_index":2504,"title":{},"body":{"injectables/UserManagementService.html":{},"coverage.html":{}}}],["src/app/services/utility.service.ts",{"_index":2539,"title":{},"body":{"injectables/UtilityService.html":{},"coverage.html":{}}}],["src/app/services/utility.service.ts:22",{"_index":2542,"title":{},"body":{"injectables/UtilityService.html":{}}}],["src/app/services/utility.service.ts:26",{"_index":2543,"title":{},"body":{"injectables/UtilityService.html":{}}}],["src/app/services/utility.service.ts:38",{"_index":2544,"title":{},"body":{"injectables/UtilityService.html":{}}}],["src/app/services/utility.service.ts:54",{"_index":2546,"title":{},"body":{"injectables/UtilityService.html":{}}}],["src/app/services/utility.service.ts:9",{"_index":2547,"title":{},"body":{"injectables/UtilityService.html":{}}}],["src/app/shared/dialog",{"_index":1080,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/DialogShowProfileComponent.html":{},"coverage.html":{}}}],["src/app/shared/directives/open",{"_index":1788,"title":{},"body":{"directives/OpenProfileDirective.html":{},"coverage.html":{}}}],["src/app/shared/directives/tag",{"_index":2217,"title":{},"body":{"directives/TagToComponentDirective.html":{},"coverage.html":{}}}],["src/app/shared/enums/channel",{"_index":2630,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/shared/header/header.component.ts",{"_index":1252,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/shared/header/header.component.ts:13",{"_index":1257,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/header/header.component.ts:27",{"_index":1258,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/shared/imprint/imprint.component.ts",{"_index":1264,"title":{},"body":{"components/ImprintComponent.html":{},"coverage.html":{}}}],["src/app/shared/imprint/imprint.component.ts:13",{"_index":1269,"title":{},"body":{"components/ImprintComponent.html":{}}}],["src/app/shared/imprint/imprint.component.ts:18",{"_index":1270,"title":{},"body":{"components/ImprintComponent.html":{}}}],["src/app/shared/popup",{"_index":1804,"title":{},"body":{"components/PopupSearchComponent.html":{},"coverage.html":{}}}],["src/app/shared/privacy",{"_index":2596,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/profile",{"_index":1912,"title":{},"body":{"components/ProfileButtonComponent.html":{},"coverage.html":{}}}],["src/app/shared/search",{"_index":2018,"title":{},"body":{"components/SearchResultsComponent.html":{},"coverage.html":{}}}],["src/main.server.ts",{"_index":2599,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stadt",{"_index":1284,"title":{},"body":{"components/ImprintComponent.html":{}}}],["standalone",{"_index":22,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["start",{"_index":515,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["startcontainer",{"_index":1904,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["started",{"_index":2632,"title":{"index.html":{}},"body":{}}],["startoffset",{"_index":1906,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["startpunkt",{"_index":1903,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["state",{"_index":2178,"title":{},"body":{"components/SignInComponent.html":{}}}],["statemanagementservice",{"_index":1501,"title":{"injectables/StateManagementService.html":{}},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/StateManagementService.html":{},"coverage.html":{}}}],["statements",{"_index":2551,"title":{},"body":{"coverage.html":{}}}],["stateservice",{"_index":1500,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["status",{"_index":1940,"title":{},"body":{"injectables/ProfileService.html":{}}}],["stimme",{"_index":2192,"title":{},"body":{"components/SignInComponent.html":{}}}],["stimmen",{"_index":2016,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["storage",{"_index":1746,"title":{},"body":{"injectables/MessageService.html":{}}}],["storageref",{"_index":1749,"title":{},"body":{"injectables/MessageService.html":{}}}],["storeduser",{"_index":626,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["string",{"_index":291,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowProfileComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{}}}],["styleurl",{"_index":36,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["suballmessages",{"_index":1645,"title":{},"body":{"injectables/MessageService.html":{}}}],["subchannels",{"_index":555,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["subchannels(user_id",{"_index":592,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["subject",{"_index":1697,"title":{},"body":{"injectables/MessageService.html":{},"injectables/SharedService.html":{}}}],["submessages",{"_index":1646,"title":{},"body":{"injectables/MessageService.html":{}}}],["submessages(channel_id",{"_index":1683,"title":{},"body":{"injectables/MessageService.html":{}}}],["submessagesthread",{"_index":1647,"title":{},"body":{"injectables/MessageService.html":{}}}],["submessagesthread(thread_id",{"_index":1685,"title":{},"body":{"injectables/MessageService.html":{}}}],["subreactionsformessage",{"_index":1957,"title":{},"body":{"injectables/ReactionService.html":{}}}],["subreactionsformessage(message_id",{"_index":1965,"title":{},"body":{"injectables/ReactionService.html":{}}}],["subscribe",{"_index":1044,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["subscribetobacktochannels",{"_index":2109,"title":{},"body":{"injectables/SharedService.html":{}}}],["subscribetobacktochannels(togglemenu",{"_index":2114,"title":{},"body":{"injectables/SharedService.html":{}}}],["subscription",{"_index":2116,"title":{},"body":{"injectables/SharedService.html":{}}}],["suchbegriff",{"_index":1867,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["suche",{"_index":1855,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["switch",{"_index":899,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["table",{"_index":2602,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2601,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1899,"title":{},"body":{"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{}}}],["tagtocomponentdirective",{"_index":260,"title":{"directives/TagToComponentDirective.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["take",{"_index":1028,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["team",{"_index":144,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["tempchanneldescription",{"_index":989,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["tempchannelname",{"_index":990,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["templateref",{"_index":2238,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["templateurl",{"_index":34,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["text",{"_index":1620,"title":{},"body":{"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{}}}],["textfieldmodule",{"_index":980,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["textnode",{"_index":838,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["themenbezogen",{"_index":150,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["then((querysnapshot",{"_index":714,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["then((result",{"_index":2481,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this._ngzone.onstable",{"_index":1042,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this._snackbar.openfromcomponent(emailsnackbarcomponent",{"_index":419,"title":{},"body":{"components/AppComponent.html":{},"components/CheckEmailComponent.html":{}}}],["this._snackbar.openfromcomponent(loginsnackbarcomponent",{"_index":2010,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this._snackbar.openfromcomponent(usercreatedsnackbarcomponent",{"_index":514,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.addchannel(newchannel",{"_index":721,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.addtextnodetocontainer(container",{"_index":827,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["this.allmessages",{"_index":1740,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.allmessages.push(this.setmessage(message.data",{"_index":1741,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.auth.currentuser",{"_index":2466,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.autosize.resizetofitcontent(true",{"_index":1045,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.avatars[0",{"_index":473,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.avatars[i",{"_index":496,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["this.backtochannels$.subscribe(togglemenu",{"_index":2125,"title":{},"body":{"injectables/SharedService.html":{}}}],["this.backtochannelssubject.asobservable",{"_index":2117,"title":{},"body":{"injectables/SharedService.html":{}}}],["this.backtochannelssubject.next",{"_index":2124,"title":{},"body":{"injectables/SharedService.html":{}}}],["this.backtochannelssubject.unsubscribe",{"_index":2126,"title":{},"body":{"injectables/SharedService.html":{}}}],["this.button",{"_index":1801,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["this.cancelediting",{"_index":1050,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.cdr.detectchanges",{"_index":2242,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["this.changeavatar",{"_index":1139,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.changechannelname",{"_index":1048,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.changeemailonly(email",{"_index":1150,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.changenameonly(displayname",{"_index":1148,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.channel",{"_index":635,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channel.id",{"_index":642,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channel.name",{"_index":123,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["this.channelexists",{"_index":1047,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelexists(message.channel_id",{"_index":2098,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.channels",{"_index":675,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channels.filter",{"_index":632,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channels.filter(channel",{"_index":710,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channels.find((channel",{"_index":643,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channels.find(channel",{"_index":723,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channels.push(channel",{"_index":718,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channels.push(this.setchannel(channel.data",{"_index":677,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.channelservice.addchannel(newchannel).then(channelid",{"_index":1544,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.channelservice.addchannel(this.channel",{"_index":127,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["this.channelservice.addchannel(this.newdirectchannel",{"_index":1231,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.channelservice.channels",{"_index":1061,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"injectables/SearchService.html":{}}}],["this.channelservice.channels.filter",{"_index":2104,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.channelservice.channels.some",{"_index":1051,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.channels.some(channel",{"_index":121,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["this.channelservice.currentchannel",{"_index":920,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{}}}],["this.channelservice.currentchannel.active_members.includes(this.userservice.currentuser.id",{"_index":411,"title":{},"body":{"components/AppComponent.html":{}}}],["this.channelservice.currentchannel.creator",{"_index":2531,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["this.channelservice.currentchannel.description",{"_index":1037,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.currentchannel.id",{"_index":1052,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"injectables/UserManagementService.html":{}}}],["this.channelservice.currentchannel.members",{"_index":929,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.channelservice.currentchannel.members.length",{"_index":1055,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.currentchannel.name",{"_index":1035,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.currentthread.id",{"_index":2302,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.channelservice.deletechannel(thread.id",{"_index":1065,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.getchannelsforcurrentuser",{"_index":1366,"title":{},"body":{"components/LoginComponent.html":{},"components/MainPageComponent.html":{}}}],["this.channelservice.getcurrentthread(thread_id",{"_index":2337,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.channelservice.getdirectchannelid(this.userservice.currentuser.id",{"_index":1224,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.channelservice.opennewchannel(this.userservice.currentuser.id",{"_index":1059,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.removeuserfromchannel(this.channelservice.currentchannel.id",{"_index":1057,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.setcurrentchannel(channelid",{"_index":128,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["this.channelservice.unsubcurrentthread",{"_index":2336,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.channelservice.updatechannel(this.channelservice.currentchannel",{"_index":1049,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.channelservice.updatechannelmembers(channelid",{"_index":2535,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["this.checkemail",{"_index":2171,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.checkurls",{"_index":406,"title":{},"body":{"components/AppComponent.html":{}}}],["this.closeavatardialog",{"_index":1143,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.closemenuifmobile",{"_index":327,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["this.closethread",{"_index":1227,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"components/ThreadComponent.html":{}}}],["this.confirmpopup",{"_index":506,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.converttodate(date",{"_index":2344,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.createelement(bloburl",{"_index":1773,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.createnewdirectchannel(user_id",{"_index":1226,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.createuserobject(user",{"_index":1375,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.currentchannel",{"_index":645,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.currentdate",{"_index":2342,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.currenthread",{"_index":2333,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.currentthread",{"_index":651,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.currentuser",{"_index":484,"title":{},"body":{"components/AvatarComponent.html":{},"components/ThreadComponent.html":{}}}],["this.currentuser.email",{"_index":499,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.currentuser.id",{"_index":2361,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.currentuserid",{"_index":500,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.cursorpositionservice.restorecursorposition(container",{"_index":1876,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["this.customdialogservice.opendialog(component",{"_index":1223,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuChannelsComponent.html":{},"injectables/ProfileService.html":{}}}],["this.customdialogservice.opendialogabsolute",{"_index":133,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{}}}],["this.customdialogservice.opendialogabsolute({button",{"_index":1187,"title":{},"body":{"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"injectables/ProfileService.html":{}}}],["this.deletechannel(channelid",{"_index":708,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.deletechannelandmessages",{"_index":1056,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.dialog.open(component",{"_index":882,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["this.dialogref",{"_index":886,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["this.dialogref.close",{"_index":131,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{}}}],["this.dialogref.close(emoji",{"_index":1173,"title":{},"body":{"components/DialogEmojiPickerComponent.html":{}}}],["this.dialogref.updateposition(positionasjson",{"_index":891,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["this.displayname",{"_index":2489,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.duplicatechannelname",{"_index":1046,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.duplicatename",{"_index":124,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["this.editchanneldescription",{"_index":1054,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.editchannelname",{"_index":1053,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.editform.get('email')?.disable",{"_index":1131,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.editform.get('email')?.enable",{"_index":1132,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.editform.get('email')?.value",{"_index":1146,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.editform.get('name')?.value",{"_index":1145,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.editform.patchvalue",{"_index":1129,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.editform.valid",{"_index":1144,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.el.nativeelement.queryselector('.mobilediv",{"_index":1482,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.elementref.nativeelement",{"_index":2247,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["this.elref.nativeelement",{"_index":1802,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["this.email",{"_index":1381,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.emailexists",{"_index":1153,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/SignInComponent.html":{}}}],["this.error",{"_index":748,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{}}}],["this.extendrangetosearchterm(range",{"_index":1878,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["this.filter(this.searchterm",{"_index":1853,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["this.filterchannels(searchterm",{"_index":2085,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.filteredchannels",{"_index":1859,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["this.filteredchannels.length",{"_index":2046,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["this.filteredmessages.length",{"_index":2047,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["this.filteredusers",{"_index":313,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/PopupSearchComponent.html":{}}}],["this.filteredusers.filter(u",{"_index":935,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.filteredusers.length",{"_index":2045,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["this.filtermessages(searchterm",{"_index":2086,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.filterusers(searchterm",{"_index":2084,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.findcurrentuserid",{"_index":486,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.getchanneldata",{"_index":1543,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.getchannelsref",{"_index":665,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.getmessagesref",{"_index":1729,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.getmobileposition(mobileposition",{"_index":892,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["this.getposition(buttonused",{"_index":890,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["this.getreactionsref",{"_index":1976,"title":{},"body":{"injectables/ReactionService.html":{}}}],["this.gettextwithlinebreaks(precaretrange",{"_index":813,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["this.getuserdata",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["this.googleemail",{"_index":2484,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.googlename",{"_index":2483,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.googleprofileimg",{"_index":2485,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.gotologin",{"_index":508,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.hideelement",{"_index":1262,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["this.hideextras",{"_index":1426,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.hidemobileworkspace",{"_index":1479,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.iconsrc",{"_index":1391,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.id",{"_index":1383,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.imagechanged",{"_index":494,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["this.inputelement.nativeelement",{"_index":1875,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["this.is_typing",{"_index":1387,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.isemaildisabled",{"_index":1118,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.isexpanded",{"_index":1521,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.isloading",{"_index":1359,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.ismobile",{"_index":888,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["this.isownprofile",{"_index":1946,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.isviewinitialized",{"_index":2243,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["this.last_channel",{"_index":1384,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.last_thread",{"_index":1385,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.lastcursorposition",{"_index":802,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["this.lastelement",{"_index":814,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["this.loaddynamiccomponents",{"_index":2241,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["this.loaduserdata('guest",{"_index":1390,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loaduserdata(this.userauth.googleemail",{"_index":1374,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logged_in",{"_index":1386,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.loginpassword",{"_index":1361,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":2469,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.mainmenu.opennewchannel",{"_index":1587,"title":{},"body":{"components/MainMenuHeaderComponent.html":{}}}],["this.mainpage.togglemenu",{"_index":1519,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.message",{"_index":2246,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["this.messageinput",{"_index":2364,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.messages",{"_index":1732,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messages.push(this.setmessage(message.data",{"_index":1734,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messageservice.allmessages",{"_index":2087,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.messageservice.getmessagesfromthread(thread_id",{"_index":2338,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.messageservice.removemessagesfromemptychannel(this.channelservice.currentchannel.id",{"_index":1066,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.messageservice.removethreadmessagesfromchannel(this.channelservice.currentchannel.id",{"_index":1064,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.messageservice.removethreadmessagesfromchannel(thread.id",{"_index":1063,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.messageservice.unsubmessagesthread",{"_index":2341,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.messagesource.asobservable",{"_index":1692,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messagesource.next(messageid",{"_index":1714,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messagesthread",{"_index":1737,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.messagesthread.push(this.setmessage(message.data",{"_index":1738,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.months[month",{"_index":2353,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.name",{"_index":1380,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.navigatetomainpage",{"_index":1364,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.newdirectchannel.created_at",{"_index":1229,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.newdirectchannel.creator",{"_index":1228,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.newdirectchannel.members",{"_index":1230,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.newlyaddedusers",{"_index":931,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.newlyaddedusers.filter(u",{"_index":936,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.newlyaddedusers.find(u",{"_index":932,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.newlyaddedusers.push(user",{"_index":934,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.onfilterusers",{"_index":319,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.oobcode",{"_index":1432,"title":{},"body":{"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.openadduserdialog(button",{"_index":132,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["this.openchannel(user_id",{"_index":1579,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["this.opennewchannel",{"_index":1058,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.password",{"_index":1388,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.profile_img",{"_index":1382,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["this.profileservice.getownprofilestatus",{"_index":1219,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["this.profileservice.getviewinguserid",{"_index":1217,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["this.profileservice.openprofile(this.userid",{"_index":1803,"title":{},"body":{"directives/OpenProfileDirective.html":{}}}],["this.profileservice.setownprofilestatus(false",{"_index":975,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["this.profileservice.setviewinguserid(userid",{"_index":976,"title":{},"body":{"components/DialogAddMemberMobileComponent.html":{}}}],["this.renderer.addclass(mobilediv",{"_index":1483,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.renderer.addclass(this.el.nativeelement",{"_index":1924,"title":{},"body":{"components/ProfileButtonComponent.html":{}}}],["this.renderer.insertbefore(container",{"_index":2255,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["this.renderer.insertbefore(container,componentref.location.nativeelement,element",{"_index":1900,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["this.renderer.removechild(container",{"_index":1901,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["this.renderer.removeclass(mobilediv",{"_index":1485,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.renderer.setattribute(this.el.nativeelement",{"_index":1922,"title":{},"body":{"components/ProfileButtonComponent.html":{}}}],["this.replacerangewithhtml(range",{"_index":1884,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["this.resetemail",{"_index":747,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["this.resetuser",{"_index":1430,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.returntologin",{"_index":2013,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.route.snapshot.queryparams['oobcode",{"_index":1433,"title":{},"body":{"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":1260,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["this.router.getcurrentnavigation",{"_index":483,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.router.navigate(['/login",{"_index":409,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{}}}],["this.router.navigate(['/main",{"_index":129,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/LoginComponent.html":{},"components/MainMenuComponent.html":{},"injectables/UserAuthService.html":{}}}],["this.router.navigate(['login",{"_index":1435,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.router.navigatebyurl('/main",{"_index":1225,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.router.url",{"_index":1263,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginPageComponent.html":{}}}],["this.router.url.includes('/login",{"_index":408,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPageComponent.html":{}}}],["this.router.url.includes('/reset",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["this.savecursorposition(container",{"_index":803,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["this.searchcontrol.value.trim().length",{"_index":2044,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["this.searchinput",{"_index":318,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.searchservice.clearfilters",{"_index":1869,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["this.searchservice.filterchannelsbytypeandprefix",{"_index":1863,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["this.searchservice.filterusersbyprefix",{"_index":1858,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["this.searchterm",{"_index":1879,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["this.searchterm(prefix.slice(1",{"_index":2103,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.searchterm(searchterm",{"_index":2090,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.selectedavatar",{"_index":492,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.selectedchannelid.asobservable",{"_index":2215,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["this.selectedchannelid.next(id",{"_index":2211,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["this.selectedchannelid.next(null",{"_index":2214,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["this.selectedoption",{"_index":321,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["this.selecteduserid",{"_index":1578,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["this.selecteduserid.asobservable",{"_index":2216,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["this.selecteduserid.next(id",{"_index":2213,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["this.selecteduserid.next(null",{"_index":2212,"title":{},"body":{"injectables/StateManagementService.html":{}}}],["this.selectedusers",{"_index":315,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.setavatartouser",{"_index":505,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.setchannel(channel.data",{"_index":649,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.setchannel(doc.data",{"_index":716,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.setcurrentchannel(channelfound.id",{"_index":725,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.setfocus",{"_index":2339,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.setgoogleuser",{"_index":1368,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.setownprofilestatus(isownprofile",{"_index":1944,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.setuserchannel",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setviewinguserid(userid",{"_index":1945,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.sharedservice.backtochannels",{"_index":1486,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainMenuComponent.html":{}}}],["this.sharedservice.backtochannels$.subscribe",{"_index":1484,"title":{},"body":{"components/MainHeaderComponent.html":{},"components/MainPageComponent.html":{}}}],["this.sharedservice.ismenuopen",{"_index":1533,"title":{},"body":{"components/MainMenuComponent.html":{},"components/MainPageComponent.html":{}}}],["this.sharedservice.showmobilediv",{"_index":1520,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{}}}],["this.sharedservice.showmobilediv$.subscribe",{"_index":1480,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.showmobiledivsubject.asobservable",{"_index":2121,"title":{},"body":{"injectables/SharedService.html":{}}}],["this.showmobiledivsubject.next",{"_index":2123,"title":{},"body":{"injectables/SharedService.html":{}}}],["this.showmobiledivsubject.unsubscribe",{"_index":2127,"title":{},"body":{"injectables/SharedService.html":{}}}],["this.showmobileworkspace",{"_index":1478,"title":{},"body":{"components/MainHeaderComponent.html":{}}}],["this.showuserlist",{"_index":316,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["this.stateservice.getselecteduserid().subscribe(id",{"_index":1577,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["this.stateservice.setselectedchannelid(channelid",{"_index":1518,"title":{},"body":{"components/MainMenuChannelsComponent.html":{}}}],["this.stateservice.setselecteduserid(user_id",{"_index":1580,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["this.suballmessages",{"_index":1713,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.subchannels(currentuser.id",{"_index":630,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.submessages(channel_id",{"_index":1717,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.submessagesthread(thread_id",{"_index":1718,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.tempchanneldescription",{"_index":1036,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.tempchannelname",{"_index":1034,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["this.thisavatar",{"_index":1141,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.threadexists(message.thread_id",{"_index":2099,"title":{},"body":{"injectables/SearchService.html":{}}}],["this.threadopen",{"_index":2377,"title":{},"body":{"injectables/ThreadService.html":{}}}],["this.threadservice.closethread",{"_index":1233,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SearchResultsComponent.html":{},"components/ThreadComponent.html":{}}}],["this.togglemenu",{"_index":1605,"title":{},"body":{"components/MainPageComponent.html":{}}}],["this.triggeranimation",{"_index":507,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["this.unsuballmessages",{"_index":1712,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.unsubchannels",{"_index":629,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.unsubcurrentchannel",{"_index":653,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["this.unsubmessages",{"_index":1715,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.unsubmessagesthread",{"_index":1716,"title":{},"body":{"injectables/MessageService.html":{}}}],["this.update(memberids",{"_index":324,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["this.updatedialogposition(button",{"_index":885,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["this.updateloggedinuser",{"_index":1363,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.uploadedavatar",{"_index":493,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.user",{"_index":1218,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/SignInComponent.html":{}}}],["this.user.email",{"_index":2169,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.user.password).then(async",{"_index":2174,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.user.profile_img",{"_index":503,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.userauth.changecurrentuser(displayname",{"_index":1151,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userauth.changecurrentuser(email",{"_index":1154,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userauth.changepassword(newpassword",{"_index":2011,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["this.userauth.checkauth().then(isloggedin",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userauth.currentuser().then((user",{"_index":1128,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userauth.emailexists(email",{"_index":1152,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userauth.googleemail",{"_index":1134,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/LoginComponent.html":{}}}],["this.userauth.googleemail)?.id",{"_index":1371,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userauth.googlename",{"_index":1376,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userauth.googleprofileimg",{"_index":1377,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userauth.guestlogin",{"_index":1389,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userauth.handleactioncode(this.oobcode",{"_index":1434,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["this.userauth.loginuser(this.loginemail",{"_index":1360,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userauth.loginwithgoogle",{"_index":1367,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userauth.logout",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userauth.registeruser(this.user.email",{"_index":2173,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.userauth.resetpassword(this.resetemail).then",{"_index":746,"title":{},"body":{"components/CheckEmailComponent.html":{}}}],["this.userauth.saveuser(this.user.name",{"_index":2176,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.userid",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usermanagementservice.filterusers(this.searchinput",{"_index":314,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.usermanagementservice.getalluserids",{"_index":322,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["this.usermanagementservice.getcurrentchannelid",{"_index":325,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.usermanagementservice.getmemberids(this.selectedusers",{"_index":323,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.usermanagementservice.removeselecteduser(this.selectedusers",{"_index":320,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.usermanagementservice.selectuser(this.selectedusers",{"_index":317,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.usermanagementservice.updatemembers(channelid",{"_index":326,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.users",{"_index":1576,"title":{},"body":{"components/MainMenuDmComponent.html":{}}}],["this.userservice",{"_index":2043,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["this.userservice.addavatartouser(this.currentuserid",{"_index":504,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.userservice.adddatabaseidtouser(this.currentuserid",{"_index":501,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.userservice.adduser(this.user",{"_index":2175,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.userservice.adduser(user",{"_index":1372,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.allusers",{"_index":497,"title":{},"body":{"components/AvatarComponent.html":{},"components/MainMenuDmComponent.html":{},"components/PopupSearchComponent.html":{},"injectables/SearchService.html":{}}}],["this.userservice.allusers.filter((user",{"_index":2524,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["this.userservice.allusers.find(user",{"_index":1370,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.allusers.foreach(user",{"_index":2248,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["this.userservice.allusers.map(user",{"_index":2538,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["this.userservice.currentuser",{"_index":410,"title":{},"body":{"components/AppComponent.html":{},"components/MainPageComponent.html":{},"components/ThreadComponent.html":{}}}],["this.userservice.currentuser.email",{"_index":1149,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userservice.currentuser.id",{"_index":80,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/ProfileService.html":{}}}],["this.userservice.currentuser.last_channel",{"_index":412,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.currentuser.last_thread",{"_index":2340,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.userservice.currentuser.name",{"_index":1147,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userservice.currentuser.profile_img",{"_index":1140,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userservice.currentuser?.email",{"_index":1133,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userservice.currentuser?.profile_img",{"_index":1123,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["this.userservice.currentuserthread$.subscribe(thread_id",{"_index":2335,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.userservice.deleteuser(this.currentuserid",{"_index":487,"title":{},"body":{"components/AvatarComponent.html":{}}}],["this.userservice.getcurrentuser",{"_index":414,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.getcurrentuser(loginemail",{"_index":1365,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.getuser(contact",{"_index":2362,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.userservice.getuser(userid",{"_index":1039,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/SearchResultsComponent.html":{}}}],["this.userservice.getusers",{"_index":413,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["this.userservice.getusersbyids(this.channelservice.currentchannel.members",{"_index":930,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["this.userservice.savelastthread(this.userservice.currentuser.id",{"_index":1232,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SearchResultsComponent.html":{},"components/ThreadComponent.html":{}}}],["this.userservice.subcurrentuserforthread(this.userservice.currentuser.id",{"_index":2334,"title":{},"body":{"components/ThreadComponent.html":{}}}],["this.userservice.updatelastchannel(this.userservice.currentuser.id",{"_index":1546,"title":{},"body":{"components/MainMenuComponent.html":{}}}],["this.userservice.updateonlinestatus(this.userid",{"_index":398,"title":{},"body":{"components/AppComponent.html":{}}}],["this.userservice.updateonlinestatus(this.userservice.currentuser.id",{"_index":1301,"title":{},"body":{"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{}}}],["this.userservice.updateuseremail(this.userservice.currentuser.id",{"_index":2468,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.userservice.updateuserimage(this.userservice.currentuser.id",{"_index":1142,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["this.userservice.updateusername(this.userservice.currentuser.id",{"_index":2471,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["this.userservice.uploadimage(file",{"_index":491,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["this.utilityservice.getchannelcreationtime",{"_index":2048,"title":{},"body":{"components/SearchResultsComponent.html":{}}}],["this.validatepassword(this.user.password",{"_index":2172,"title":{},"body":{"components/SignInComponent.html":{}}}],["this.viewcontainer.createcomponent(profilebuttoncomponent",{"_index":2254,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["this.viewcontainerref.createcomponent(profilebuttoncomponent",{"_index":1893,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["this.viewinguserid",{"_index":1947,"title":{},"body":{"injectables/ProfileService.html":{}}}],["this.weekdays[day",{"_index":2352,"title":{},"body":{"components/ThreadComponent.html":{}}}],["thisavatar",{"_index":1087,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["thread",{"_index":1060,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/ThreadComponent.html":{},"miscellaneous/enumerations.html":{}}}],["thread'},{'name",{"_index":252,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["thread.component.html",{"_index":2269,"title":{},"body":{"components/ThreadComponent.html":{}}}],["thread.component.scss",{"_index":2270,"title":{},"body":{"components/ThreadComponent.html":{}}}],["thread.id",{"_index":2102,"title":{},"body":{"injectables/SearchService.html":{}}}],["thread.name",{"_index":1062,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["thread/thread.component",{"_index":1604,"title":{},"body":{"components/MainPageComponent.html":{}}}],["thread_id",{"_index":577,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["threadcomponent",{"_index":251,"title":{"components/ThreadComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["threadexists",{"_index":2060,"title":{},"body":{"injectables/SearchService.html":{}}}],["threadexists(threadid",{"_index":2081,"title":{},"body":{"injectables/SearchService.html":{}}}],["threadid",{"_index":1679,"title":{},"body":{"injectables/MessageService.html":{},"injectables/SearchService.html":{}}}],["threadopen",{"_index":2372,"title":{},"body":{"injectables/ThreadService.html":{}}}],["threads",{"_index":2082,"title":{},"body":{"injectables/SearchService.html":{}}}],["threads.some(thread",{"_index":2101,"title":{},"body":{"injectables/SearchService.html":{}}}],["threadservice",{"_index":1198,"title":{"injectables/ThreadService.html":{}},"body":{"components/DialogShowProfileComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/SearchResultsComponent.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"coverage.html":{}}}],["throw",{"_index":686,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{}}}],["timeoutid",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["title",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":2257,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["toggleexpansion",{"_index":1499,"title":{},"body":{"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["togglemenu",{"_index":1589,"title":{},"body":{"components/MainPageComponent.html":{},"injectables/SharedService.html":{}}}],["tojson",{"_index":1336,"title":{},"body":{"components/LoginComponent.html":{},"classes/User.html":{}}}],["top",{"_index":868,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["total_replies",{"_index":1619,"title":{},"body":{"interfaces/Message.html":{},"injectables/MessageService.html":{}}}],["track",{"_index":338,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuDmComponent.html":{},"components/PopupSearchComponent.html":{},"components/ThreadComponent.html":{}}}],["transaction",{"_index":682,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["transaction.get(docref",{"_index":684,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["transaction.update(docref",{"_index":697,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["triggeranimation",{"_index":444,"title":{},"body":{"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["triggerresize",{"_index":997,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["true",{"_index":23,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["tslib",{"_index":2622,"title":{},"body":{"dependencies.html":{}}}],["typ",{"_index":1862,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["type",{"_index":62,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"injectables/UtilityService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type.enum",{"_index":107,"title":{},"body":{"components/AddChannelCardComponent.html":{},"interfaces/Channel.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/PopupSearchComponent.html":{},"injectables/SearchService.html":{}}}],["type.enum.ts",{"_index":2629,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["typeof",{"_index":652,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{},"components/SignInComponent.html":{}}}],["u.id",{"_index":933,"title":{},"body":{"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"injectables/UserManagementService.html":{}}}],["unbekannter",{"_index":1040,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["und",{"_index":1283,"title":{},"body":{"components/ImprintComponent.html":{},"components/SignInComponent.html":{}}}],["undefined",{"_index":600,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{},"components/SignInComponent.html":{},"injectables/UserManagementService.html":{}}}],["ungültig",{"_index":759,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["unicode",{"_index":1951,"title":{},"body":{"interfaces/Reaction.html":{},"injectables/ReactionService.html":{}}}],["unknown",{"_index":574,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{},"injectables/UserAuthService.html":{}}}],["unloadhandler",{"_index":357,"title":{},"body":{"components/AppComponent.html":{}}}],["unloadhandler(event",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["unsuballmessages",{"_index":1629,"title":{},"body":{"injectables/MessageService.html":{}}}],["unsubchannels",{"_index":537,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["unsubcurrentchannel",{"_index":538,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["unsubcurrentthread",{"_index":539,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["unsubmessages",{"_index":1630,"title":{},"body":{"injectables/MessageService.html":{}}}],["unsubmessagesthread",{"_index":1631,"title":{},"body":{"injectables/MessageService.html":{}}}],["update",{"_index":283,"title":{},"body":{"components/AddMemberCardComponent.html":{},"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["update(memberids",{"_index":290,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["updatechannel",{"_index":556,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["updatechannel(channel",{"_index":595,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["updatechannelmembers",{"_index":557,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["updatechannelmembers(channelid",{"_index":597,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["updatedialogposition",{"_index":857,"title":{},"body":{"injectables/CustomDialogService.html":{}}}],["updatedialogposition(button",{"_index":876,"title":{},"body":{"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{}}}],["updatedmemberids",{"_index":694,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["updatedoc",{"_index":617,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["updatedoc(docref",{"_index":679,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"injectables/MessageService.html":{},"injectables/ReactionService.html":{}}}],["updateeditedchannel",{"_index":998,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["updateemail",{"_index":2452,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["updateemail(user",{"_index":2477,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["updateloggedinuser",{"_index":1323,"title":{},"body":{"components/LoginComponent.html":{}}}],["updatemembers",{"_index":2510,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["updatemembers(channelid",{"_index":2521,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["updatemessage",{"_index":1648,"title":{},"body":{"injectables/MessageService.html":{}}}],["updatemessage(message",{"_index":1687,"title":{},"body":{"injectables/MessageService.html":{}}}],["updateprofile",{"_index":744,"title":{},"body":{"components/CheckEmailComponent.html":{},"injectables/UserAuthService.html":{}}}],["updateprofile(user",{"_index":2470,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["updateprofile(user_auth",{"_index":2488,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["updatereaction",{"_index":1958,"title":{},"body":{"injectables/ReactionService.html":{}}}],["updatereaction(reaction",{"_index":1968,"title":{},"body":{"injectables/ReactionService.html":{}}}],["updateuserpassword",{"_index":1994,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["updateuserpassword(newpassword",{"_index":2003,"title":{},"body":{"components/ResetPasswordComponent.html":{}}}],["uploadavatar",{"_index":445,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["uploadavatar(event",{"_index":460,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{}}}],["uploadbytesresumable",{"_index":1705,"title":{},"body":{"injectables/MessageService.html":{}}}],["uploadbytesresumable(storageref",{"_index":1752,"title":{},"body":{"injectables/MessageService.html":{}}}],["uploadedavatar",{"_index":437,"title":{},"body":{"components/AvatarComponent.html":{}}}],["uploadfile",{"_index":1649,"title":{},"body":{"injectables/MessageService.html":{}}}],["uploadfile(file",{"_index":1689,"title":{},"body":{"injectables/MessageService.html":{}}}],["uploadtask",{"_index":1751,"title":{},"body":{"injectables/MessageService.html":{}}}],["uploadtask.on('state_changed",{"_index":1753,"title":{},"body":{"injectables/MessageService.html":{}}}],["url",{"_index":1757,"title":{},"body":{"injectables/MessageService.html":{}}}],["use",{"_index":2649,"title":{},"body":{"index.html":{}}}],["user",{"_index":254,"title":{"classes/User.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UserManagementService.html":{},"coverage.html":{}}}],["user.displayname",{"_index":1130,"title":{},"body":{"components/DialogEditProfileComponent.html":{},"injectables/UserAuthService.html":{}}}],["user.email",{"_index":498,"title":{},"body":{"components/AvatarComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/LoginComponent.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{}}}],["user.id",{"_index":339,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/AvatarComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/LoginComponent.html":{},"components/PopupSearchComponent.html":{},"injectables/UserManagementService.html":{}}}],["user.id).filter((id",{"_index":2537,"title":{},"body":{"injectables/UserManagementService.html":{}}}],["user.isanonymous",{"_index":2500,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["user.last_channel",{"_index":1378,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.last_thread",{"_index":1379,"title":{},"body":{"components/LoginComponent.html":{}}}],["user.logged_in",{"_index":340,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{}}}],["user.name",{"_index":341,"title":{},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/MainMenuDmComponent.html":{},"components/PopupSearchComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"directives/TagToComponentDirective.html":{},"injectables/UserManagementService.html":{}}}],["user.photourl",{"_index":2486,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["user.service",{"_index":2462,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["user?.email",{"_index":1241,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["user?.id",{"_index":1236,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["user?.logged_in",{"_index":1237,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["user?.name",{"_index":1235,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["user_auth",{"_index":2487,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["user_auth.displayname",{"_index":2490,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["user_id",{"_index":594,"title":{},"body":{"injectables/ChannelFirebaseService.html":{},"components/DialogShowProfileComponent.html":{},"components/MainMenuDmComponent.html":{},"interfaces/Message.html":{},"injectables/MessageService.html":{},"components/ThreadComponent.html":{}}}],["userauth",{"_index":350,"title":{},"body":{"components/AppComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{}}}],["userauthservice",{"_index":363,"title":{"injectables/UserAuthService.html":{}},"body":{"components/AppComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SignInComponent.html":{},"injectables/UserAuthService.html":{},"coverage.html":{}}}],["usercreatedsnackbarcomponent",{"_index":253,"title":{"components/UserCreatedSnackbarComponent.html":{}},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{},"coverage.html":{}}}],["userexists",{"_index":2170,"title":{},"body":{"components/SignInComponent.html":{}}}],["userheadbutton",{"_index":1220,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"injectables/ProfileService.html":{}}}],["userid",{"_index":351,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogShowProfileComponent.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["usermanagementservice",{"_index":277,"title":{"injectables/UserManagementService.html":{}},"body":{"components/AddMemberCardComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"injectables/UserManagementService.html":{},"coverage.html":{}}}],["username",{"_index":1891,"title":{},"body":{"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["users",{"_index":1552,"title":{},"body":{"components/MainMenuDmComponent.html":{},"components/PopupSearchComponent.html":{},"interfaces/Reaction.html":{},"injectables/ReactionService.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{}}}],["users.filter((user",{"_index":2091,"title":{},"body":{"injectables/SearchService.html":{}}}],["userservice",{"_index":47,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"injectables/ProfileService.html":{},"components/SearchResultsComponent.html":{},"injectables/SearchService.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/UserAuthService.html":{},"injectables/UserManagementService.html":{},"coverage.html":{}}}],["userservice.allusers",{"_index":1076,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["userservice.currentuser",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["userservice.currentuser.email",{"_index":1240,"title":{},"body":{"components/DialogShowProfileComponent.html":{},"components/LogOutDialogComponent.html":{}}}],["userservice.currentuser.id",{"_index":396,"title":{},"body":{"components/AppComponent.html":{},"components/DialogShowProfileComponent.html":{}}}],["userservice.currentuser.name",{"_index":1234,"title":{},"body":{"components/DialogShowProfileComponent.html":{}}}],["userservice.currentuser?.id",{"_index":1078,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/MainMenuDmComponent.html":{}}}],["userservice.currentuser?.name",{"_index":1195,"title":{},"body":{"components/DialogShowMembersComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuDmComponent.html":{},"components/SearchResultsComponent.html":{}}}],["userservice.getuser(member).logged_in",{"_index":1194,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["userservice.getuser(member).name",{"_index":1193,"title":{},"body":{"components/DialogShowMembersComponent.html":{}}}],["usevalue",{"_index":268,"title":{},"body":{"components/AddMemberCardComponent.html":{}}}],["utilityservice",{"_index":2023,"title":{"injectables/UtilityService.html":{}},"body":{"components/SearchResultsComponent.html":{},"injectables/UtilityService.html":{},"coverage.html":{}}}],["validatepassword",{"_index":2144,"title":{},"body":{"components/SignInComponent.html":{}}}],["validatepassword(password",{"_index":2155,"title":{},"body":{"components/SignInComponent.html":{}}}],["validators",{"_index":1127,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["validators.email",{"_index":1119,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["validators.required",{"_index":1116,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["value",{"_index":74,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"injectables/MessageService.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"injectables/ReactionService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{},"injectables/UserAuthService.html":{},"components/UserCreatedSnackbarComponent.html":{},"injectables/UtilityService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":171,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/EmailSnackbarComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/LoginSnackbarComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"components/SignInComponent.html":{},"components/ThreadComponent.html":{},"components/UserCreatedSnackbarComponent.html":{}}}],["variable",{"_index":2554,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2661,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vergessen",{"_index":1405,"title":{},"body":{"components/LoginComponent.html":{}}}],["verifybeforeupdateemail",{"_index":2460,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["verifybeforeupdateemail(user",{"_index":2467,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["verifypasswordresetcode",{"_index":2453,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["verifypasswordresetcode(auth",{"_index":2492,"title":{},"body":{"injectables/UserAuthService.html":{}}}],["verlassen",{"_index":1079,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["version",{"_index":2637,"title":{},"body":{"index.html":{},"properties.html":{}}}],["versuchen",{"_index":1404,"title":{},"body":{"components/LoginComponent.html":{}}}],["verticalposition",{"_index":424,"title":{},"body":{"components/AppComponent.html":{},"components/AvatarComponent.html":{},"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}],["verwenden",{"_index":524,"title":{},"body":{"components/AvatarComponent.html":{}}}],["verwendest",{"_index":1400,"title":{},"body":{"components/LoginComponent.html":{}}}],["viewchild",{"_index":1027,"title":{},"body":{"components/DialogEditChannelComponent.html":{},"components/SignInComponent.html":{}}}],["viewchild('autosize",{"_index":1015,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["viewcontainer",{"_index":2227,"title":{},"body":{"directives/TagToComponentDirective.html":{}}}],["viewcontainerref",{"_index":1818,"title":{},"body":{"components/PopupSearchComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["viewinguserid",{"_index":1927,"title":{},"body":{"injectables/ProfileService.html":{}}}],["void",{"_index":72,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AddMemberCardComponent.html":{},"components/AppComponent.html":{},"components/AvatarComponent.html":{},"injectables/ChannelFirebaseService.html":{},"components/CheckEmailComponent.html":{},"injectables/CursorPositionService.html":{},"injectables/CustomDialogService.html":{},"components/DialogAddMemberComponent.html":{},"components/DialogAddMemberMobileComponent.html":{},"components/DialogEditChannelComponent.html":{},"components/DialogEditProfileComponent.html":{},"components/DialogEmojiPickerComponent.html":{},"interfaces/DialogParams.html":{},"components/DialogShowMembersComponent.html":{},"components/DialogShowProfileComponent.html":{},"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/LogOutDialogComponent.html":{},"components/LoginComponent.html":{},"components/LoginPageComponent.html":{},"components/MainHeaderComponent.html":{},"components/MainMenuChannelsComponent.html":{},"components/MainMenuComponent.html":{},"components/MainMenuDmComponent.html":{},"components/MainMenuHeaderComponent.html":{},"components/MainPageComponent.html":{},"injectables/MessageService.html":{},"directives/OpenProfileDirective.html":{},"components/PopupSearchComponent.html":{},"components/ProfileButtonComponent.html":{},"injectables/ProfileService.html":{},"components/ResetPasswordComponent.html":{},"components/SearchResultsComponent.html":{},"injectables/SharedService.html":{},"components/SignInComponent.html":{},"injectables/StateManagementService.html":{},"directives/TagToComponentDirective.html":{},"components/ThreadComponent.html":{},"injectables/ThreadService.html":{}}}],["vollständiger",{"_index":1157,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["vom",{"_index":1861,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["von",{"_index":1074,"title":{},"body":{"components/DialogEditChannelComponent.html":{}}}],["vorhanden",{"_index":1868,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["war",{"_index":1768,"title":{},"body":{"injectables/MessageService.html":{}}}],["webbrowser",{"_index":2642,"title":{},"body":{"index.html":{}}}],["weekdays",{"_index":2275,"title":{},"body":{"components/ThreadComponent.html":{}}}],["weiter",{"_index":527,"title":{},"body":{"components/AvatarComponent.html":{},"components/SignInComponent.html":{}}}],["wenn",{"_index":1865,"title":{},"body":{"components/PopupSearchComponent.html":{}}}],["werden",{"_index":1138,"title":{},"body":{"components/DialogEditProfileComponent.html":{}}}],["where('channel_id",{"_index":1730,"title":{},"body":{"injectables/MessageService.html":{}}}],["where('members",{"_index":671,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["where('message_id",{"_index":1978,"title":{},"body":{"injectables/ReactionService.html":{}}}],["where('thread_id",{"_index":1736,"title":{},"body":{"injectables/MessageService.html":{}}}],["window",{"_index":1436,"title":{},"body":{"components/LoginPageComponent.html":{},"components/MainPageComponent.html":{},"components/SignInComponent.html":{},"directives/TagToComponentDirective.html":{}}}],["window.getselection",{"_index":804,"title":{},"body":{"injectables/CursorPositionService.html":{}}}],["window.innerwidth",{"_index":328,"title":{},"body":{"components/AddMemberCardComponent.html":{},"injectables/CustomDialogService.html":{},"interfaces/DialogParams.html":{},"components/LogOutDialogComponent.html":{},"components/MainPageComponent.html":{},"components/SignInComponent.html":{}}}],["window.localstorage",{"_index":1437,"title":{},"body":{"components/LoginPageComponent.html":{}}}],["window.url.createobjecturl(blob",{"_index":1772,"title":{},"body":{"injectables/MessageService.html":{}}}],["window.url.revokeobjecturl(bloburl",{"_index":1781,"title":{},"body":{"injectables/MessageService.html":{}}}],["window:resize",{"_index":1590,"title":{},"body":{"components/MainPageComponent.html":{}}}],["window:resize(event",{"_index":1592,"title":{},"body":{"components/MainPageComponent.html":{}}}],["window:unload",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["window:unload(event",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["wir",{"_index":760,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/LoginComponent.html":{}}}],["wird",{"_index":690,"title":{},"body":{"injectables/ChannelFirebaseService.html":{}}}],["workspace",{"_index":1611,"title":{},"body":{"components/MainPageComponent.html":{}}}],["wähle",{"_index":516,"title":{},"body":{"components/AvatarComponent.html":{}}}],["wählen",{"_index":163,"title":{},"body":{"components/AddChannelCardComponent.html":{},"components/AvatarComponent.html":{}}}],["y",{"_index":2359,"title":{},"body":{"components/ThreadComponent.html":{},"injectables/UtilityService.html":{}}}],["yes",{"_index":865,"title":{},"body":{"injectables/CustomDialogService.html":{},"injectables/MessageService.html":{},"classes/User.html":{},"injectables/UserAuthService.html":{}}}],["zahl",{"_index":2189,"title":{},"body":{"components/SignInComponent.html":{}}}],["zeichen",{"_index":2185,"title":{},"body":{"components/SignInComponent.html":{}}}],["zertürk",{"_index":1280,"title":{},"body":{"components/ImprintComponent.html":{}}}],["zone.js",{"_index":2624,"title":{},"body":{"dependencies.html":{}}}],["zu",{"_index":1396,"title":{},"body":{"components/LoginComponent.html":{},"components/SignInComponent.html":{}}}],["zum",{"_index":153,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["zur",{"_index":145,"title":{},"body":{"components/AddChannelCardComponent.html":{}}}],["zurücksetzen",{"_index":750,"title":{},"body":{"components/CheckEmailComponent.html":{},"components/ResetPasswordComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AddChannelCardComponent.html":{"url":"components/AddChannelCardComponent.html","title":"component - AddChannelCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddChannelCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-channel-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCardModule\n                            MatIconModule\n                            MatInputModule\n                            MatButtonModule\n                            MatDialogContent\n                            MatDialogActions\n                            MatDialogModule\n                            FormsModule\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./add-channel-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./add-channel-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channel\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                customDialogService\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                duplicateName\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createChannel\n                            \n                            \n                                openAddUserDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, dialog: MatDialog, channelService: ChannelFirebaseService, userService: UserService, customDialogService: CustomDialogService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    createChannel(button: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddUserDialog\n                        \n                    \n                \n            \n            \n                \nopenAddUserDialog(button: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    name: '',\n    description: '',\n    created_at: Date.now(),\n    creator: this.userService.currentUser.id,\n    members: [this.userService.currentUser.id],\n    active_members: [],\n    channel_type: ChannelTypeEnum.main,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        customDialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomDialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duplicateName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts:57\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  MatDialogContent,\n  MatDialogActions,\n  MatDialogRef,\n  MatDialogModule,\n  MatDialog,\n} from '@angular/material/dialog';\nimport { ChannelFirebaseService } from '../../../../firebase.service/channelFirebase.service';\nimport { Channel } from '../../../../interfaces/channel.interface';\nimport { ChannelTypeEnum } from '../../../../shared/enums/channel-type.enum';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from '../../../../firebase.service/user.service';\nimport { CustomDialogService } from '../../../../services/custom-dialog.service';\nimport { AddMemberCardComponent } from '../add-member-card/add-member-card.component';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-add-channel-card',\n  standalone: true,\n  imports: [\n    MatCardModule,\n    MatIconModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDialogContent,\n    MatDialogActions,\n    MatDialogModule,\n    FormsModule,\n    CommonModule\n  ],\n  templateUrl: './add-channel-card.component.html',\n  styleUrl: './add-channel-card.component.scss',\n})\nexport class AddChannelCardComponent {\n  duplicateName = false;\n  channel: Channel = {\n    id: '',\n    name: '',\n    description: '',\n    created_at: Date.now(),\n    creator: this.userService.currentUser.id,\n    members: [this.userService.currentUser.id],\n    active_members: [],\n    channel_type: ChannelTypeEnum.main,\n  };\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public dialog: MatDialog,\n    public channelService: ChannelFirebaseService,\n    public userService: UserService,\n    public customDialogService: CustomDialogService,\n    public router: Router\n  ) { }\n\n\n  async createChannel(button: HTMLElement): Promise {\n    const isDuplicate = this.channelService.channels.some(channel => channel.name === this.channel.name);\n    if (isDuplicate) {\n      this.duplicateName = true;\n    } else {\n      const channelId = await this.channelService.addChannel(this.channel);\n      this.channelService.setCurrentChannel(channelId);\n      this.router.navigate(['/main-page', channelId]);\n      this.dialogRef.close();\n      this.openAddUserDialog(button);\n    }\n  }\n\n\n  openAddUserDialog(button: HTMLElement): void {\n    const component = AddMemberCardComponent;\n    this.customDialogService.openDialogAbsolute({ button, component, position: 'mid', mobilePosition: 'bottom', maxWidth: '554px' });\n  }\n}\n\n    \n\n    \n        \n    \n        Channel erstellen\n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n\n    \n        Channels dienen deinem Team zur Kommunikation. Am besten sollten sie themenbezogen sein #marketing zum Beispiel.\n    \n\n    \n        Channel-Name\n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n            \n            \n        \n        @if (duplicateName){\n            Ein Kanal mit diesem Namen existiert bereits. Bitte wählen Sie einen anderen Namen.\n        }\n    \n\n    \n        Beschreibung (optional)\n        \n            \n        \n    \n\n    \n        Erstellen\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Channel erstellen                                                                                                                                                                Channels dienen deinem Team zur Kommunikation. Am besten sollten sie themenbezogen sein #marketing zum Beispiel.                Channel-Name                                                                                                                                                                                @if (duplicateName){            Ein Kanal mit diesem Namen existiert bereits. Bitte wählen Sie einen anderen Namen.        }                Beschreibung (optional)                                            Erstellen    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddChannelCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddMemberCardComponent.html":{"url":"components/AddMemberCardComponent.html","title":"component - AddMemberCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddMemberCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            { provide: MAT_RADIO_DEFAULT_OPTIONS, useValue: { color:  } }\n                \n            \n\n\n            \n                selector\n                app-add-member-card\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                            MatRadioModule\n                            FormsModule\n                                OpenProfileDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./add-member-card.component.html\n            \n\n\n\n            \n                styleUrl\n                ./add-member-card.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                searchInput\n                            \n                            \n                                selectedOption\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                    Public\n                                sharedService\n                            \n                            \n                                showUserList\n                            \n                            \n                                    Public\n                                userManagementService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenuIfMobile\n                            \n                            \n                                onFilterUsers\n                            \n                            \n                                onRemoveSelectedUser\n                            \n                            \n                                onSelectUser\n                            \n                            \n                                onUpdateMembers\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, userService: UserService, channelService: ChannelFirebaseService, userManagementService: UserManagementService, router: Router, sharedService: SharedService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userManagementService\n                                                  \n                                                        \n                                                                        UserManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeMenuIfMobile\n                        \n                    \n                \n            \n            \n                \ncloseMenuIfMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilterUsers\n                        \n                    \n                \n            \n            \n                \nonFilterUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveSelectedUser\n                        \n                    \n                \n            \n            \n                \nonRemoveSelectedUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectUser\n                        \n                    \n                \n            \n            \n                \nonSelectUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdateMembers\n                        \n                    \n                \n            \n            \n                \nonUpdateMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(memberIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                memberIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedOption\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'all'\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sharedService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SharedService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUserList\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userManagementService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserManagementService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport {\n  MatRadioModule,\n  MAT_RADIO_DEFAULT_OPTIONS,\n} from '@angular/material/radio';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from '../../../../firebase.service/user.service';\nimport { User } from '../../../../interfaces/user.interface';\nimport { ChannelFirebaseService } from '../../../../firebase.service/channelFirebase.service';\nimport { UserManagementService } from '../../../../services/user-management.service';\nimport { OpenProfileDirective } from '../../../../shared/directives/open-profile.directive';\nimport { Router } from '@angular/router';\nimport { SharedService } from '../../../../services/shared.service';\n\n@Component({\n  selector: 'app-add-member-card',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, MatRadioModule, FormsModule, OpenProfileDirective],\n  providers: [\n    { provide: MAT_RADIO_DEFAULT_OPTIONS, useValue: { color: 'primary' } },\n  ],\n  templateUrl: './add-member-card.component.html',\n  styleUrl: './add-member-card.component.scss',\n})\nexport class AddMemberCardComponent {\n  selectedOption: string = 'all';\n  searchInput: string = '';\n  filteredUsers: User[] = [];\n  selectedUsers: User[] = [];\n  showUserList: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    public userManagementService: UserManagementService,\n    public router: Router,\n    public sharedService: SharedService\n  ) { }\n\n\n  onFilterUsers(): void {\n    this.filteredUsers = this.userManagementService.filterUsers(this.searchInput, this.selectedUsers);\n    this.showUserList = true;\n  }\n\n\n  onSelectUser(user: User): void {\n    this.selectedUsers = this.userManagementService.selectUser(this.selectedUsers, user);\n    this.searchInput = '';\n    this.onFilterUsers();\n  }\n\n\n  onRemoveSelectedUser(user: User): void {\n    this.selectedUsers = this.userManagementService.removeSelectedUser(this.selectedUsers, user);\n    this.onFilterUsers();\n  }\n\n\n  onUpdateMembers(): void {\n    let memberIds: string[];\n    if (this.selectedOption === 'all') {\n      memberIds = this.userManagementService.getAllUserIds();\n    } else {\n      memberIds = this.userManagementService.getMemberIds(this.selectedUsers);\n    }\n    this.update(memberIds);\n    \n  }\n\n\n  update(memberIds: string[]) {\n    const channelId = this.userManagementService.getCurrentChannelId();\n    if (channelId) {\n      this.userManagementService.updateMembers(channelId, memberIds)\n      this.closeMenuIfMobile();\n      this.router.navigate(['/main-page/' + channelId])\n        .then(() =>\n          this.dialogRef.close()\n        );\n    }\n  }\n\n\n  closeMenuIfMobile() {\n    if (window.innerWidth \n    \n\n    \n        \n    \n    \n        Leute hinzufügen\n        \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n\n    \n        Alle Mitglieder hinzufügen\n        Bestimmte Leute hinzufügen\n    \n\n    @if (selectedOption === 'specific') {\n    \n        @if (selectedUsers.length > 0) {\n        @for(user of selectedUsers; track user.id) {\n        \n            \n                \n                @if (!user.logged_in){\n                \n                }\n                @if (user.logged_in){\n                \n                }\n            \n            \n                {{ user.name }}\n            \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n        \n        }\n        }\n    \n\n    \n        \n            \n            @if (filteredUsers.length > 0 && showUserList) {\n            \n                \n                    @for(user of filteredUsers; track user.id) {\n                    \n                        \n                            \n                            @if (!user.logged_in){\n                            \n                            }\n                            @if (user.logged_in){\n                            \n                            }\n                        \n                        {{user.name}}\n                    \n                    }\n                \n            \n            }\n        \n    \n    }\n\n    Erstellen\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Leute hinzufügen                                                                                                                                                                        Alle Mitglieder hinzufügen        Bestimmte Leute hinzufügen        @if (selectedOption === \\'specific\\') {            @if (selectedUsers.length > 0) {        @for(user of selectedUsers; track user.id) {                                                    @if (!user.logged_in){                                }                @if (user.logged_in){                                }                                        {{ user.name }}                                                                                                                                                                                                                    }        }                                        @if (filteredUsers.length > 0 && showUserList) {                                                @for(user of filteredUsers; track user.id) {                                                                                                    @if (!user.logged_in){                                                        }                            @if (user.logged_in){                                                        }                                                {{user.name}}                                        }                                        }                }    Erstellen'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddMemberCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                LoginPageComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                timeoutId\n                            \n                            \n                                title\n                            \n                            \n                                    Public\n                                userAuth\n                            \n                            \n                                userId\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUrls\n                            \n                            \n                                confirmPopup\n                            \n                            \n                                getUserData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                setUserChannel\n                            \n                            \n                                    \n                                unloadHandler\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:unload\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _snackBar: MatSnackBar, userAuth: UserAuthService, userService: UserService, channelService: ChannelFirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:unload\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:unload(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:34\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkUrls\n                        \n                    \n                \n            \n            \n                \ncheckUrls()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPopup\n                        \n                    \n                \n            \n            \n                \nconfirmPopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserData\n                        \n                    \n                \n            \n            \n                \ngetUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUserChannel\n                        \n                    \n                \n            \n            \n                \nsetUserChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        unloadHandler\n                        \n                    \n                \n            \n            \n                \n                        \n                    unloadHandler(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:unload', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        timeoutId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'DABubble'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserAuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { Router, RouterOutlet } from '@angular/router';\nimport { LoginPageComponent } from './login-page/login-page.component';\nimport { EmailSnackbarComponent } from './popups/email-snackbar/email-snackbar.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserAuthService } from './firebase.service/user.auth.service';\nimport { UserService } from './firebase.service/user.service';\nimport { ChannelFirebaseService } from './firebase.service/channelFirebase.service';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, LoginPageComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'DABubble';\n  timeoutId: any;\n  userId: any;\n\n  constructor(private router: Router, \n    private _snackBar: MatSnackBar, \n    public userAuth: UserAuthService,\n    public userService: UserService, \n    public channelService: ChannelFirebaseService) {\n    if (userService.currentUser) {\n      this.userId = userService.currentUser.id;\n    }\n  }\n\n\n  @HostListener('window:unload', ['$event'])\n  unloadHandler(event: Event) {\n    this.userAuth.logout();\n    if (this.userId) {\n    this.userService.updateOnlineStatus(this.userId, false);\n    }\n  }\n\n\n  ngOnInit(): void {\n    this.userAuth.checkAuth().then(isLoggedIn => {\n      if (isLoggedIn) {\n        if (this.router.url.includes('/reset-password')){\n          return;\n        }\n        this.getUserData();\n        this.setUserChannel();\n      } if (!isLoggedIn) {\n        this.checkUrls();\n      }\n    });\n  }\n\n\n  checkUrls(){\n    if (this.router.url.includes('/reset-password?mode=action&oobCode=code') || this.router.url.includes('/reset-password')) {\n      return;\n    } if (this.router.url.includes('/login-page/login')) {\n      return;\n    }\n    else {\n    this.userAuth.logout();\n    this.router.navigate(['/login-page/login']);\n    }\n  }\n\n\n  setUserChannel() {\n    if (this.userService.currentUser) {\n      if (this.channelService.currentChannel.active_members.includes(this.userService.currentUser.id)) {\n        this.router.navigate(['/main-page/' + this.userService.currentUser.last_channel]);\n      } else { \n        this.router.navigate(['/main-page']);\n      }\n    }\n  }\n\n\n  getUserData(){\n    this.userService.getUsers();\n    this.userService.getCurrentUser();\n    setTimeout(() => {\n      localStorage.setItem('currentUser', JSON.stringify(this.userService.currentUser));\n    }, 500);\n  }\n\n\n  confirmPopup() {\n    this._snackBar.openFromComponent(EmailSnackbarComponent, {\n      duration: 2000,\n      horizontalPosition: 'right',\n      verticalPosition: 'bottom',\n      direction: 'rtl'\n    });\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AvatarComponent.html":{"url":"components/AvatarComponent.html","title":"component - AvatarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AvatarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/avatar/avatar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-avatar\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./avatar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./avatar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatars\n                            \n                            \n                                currentUser\n                            \n                            \n                                currentUserId\n                            \n                            \n                                imageChanged\n                            \n                            \n                                selectedAvatar\n                            \n                            \n                                uploadedAvatar\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeAvatar\n                            \n                            \n                                confirmPopup\n                            \n                            \n                                createUser\n                            \n                            \n                                findCurrentUserId\n                            \n                            \n                                goToLogin\n                            \n                            \n                                goToSignIn\n                            \n                            \n                                ngonInit\n                            \n                            \n                                setAvatarToUser\n                            \n                            \n                                triggerAnimation\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _snackBar: MatSnackBar, route: ActivatedRoute, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/avatar/avatar.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeAvatar\n                        \n                    \n                \n            \n            \n                \nchangeAvatar(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPopup\n                        \n                    \n                \n            \n            \n                \nconfirmPopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:113\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUser\n                        \n                    \n                \n            \n            \n                \ncreateUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findCurrentUserId\n                        \n                    \n                \n            \n            \n                \nfindCurrentUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToLogin\n                        \n                    \n                \n            \n            \n                \ngoToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToSignIn\n                        \n                    \n                \n            \n            \n                \ngoToSignIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngonInit\n                        \n                    \n                \n            \n            \n                \nngonInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAvatarToUser\n                        \n                    \n                \n            \n            \n                \nsetAvatarToUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerAnimation\n                        \n                    \n                \n            \n            \n                \ntriggerAnimation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/avatar/avatar.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'assets/img/person.png',\n    'assets/img/avatar-1.jpg',\n    'assets/img/avatar-2.jpg',\n    'assets/img/avatar-3.jpg',\n    'assets/img/avatar-4.jpg',\n    'assets/img/avatar-5.jpg',\n    'assets/img/avatar-6.jpg',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageChanged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedAvatar\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.avatars[0]\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadedAvatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/avatar/avatar.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserCreatedSnackbarComponent } from '../../popups/user-created-snackbar/user-created-snackbar.component';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserService } from '../../firebase.service/user.service';\nimport { User } from '../../models/user';\n\n@Component({\n  selector: 'app-avatar',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './avatar.component.html',\n  styleUrl: './avatar.component.scss'\n})\nexport class AvatarComponent {\n  avatars = [\n    'assets/img/person.png',\n    'assets/img/avatar-1.jpg',\n    'assets/img/avatar-2.jpg',\n    'assets/img/avatar-3.jpg',\n    'assets/img/avatar-4.jpg',\n    'assets/img/avatar-5.jpg',\n    'assets/img/avatar-6.jpg',\n  ];\n  selectedAvatar = this.avatars[0];\n  uploadedAvatar = '';\n  imageChanged: boolean = false;\n  userId: string | any;\n  user: User = new User();\n  currentUser: any;\n  currentUserId: string | any;\n\n  constructor(private router: Router, private _snackBar: MatSnackBar, private route: ActivatedRoute, \n    private userService: UserService) { \n      const navigation = this.router.getCurrentNavigation();\n      this.currentUser = navigation?.extras.state?.['user'];\n    }\n\n\n  ngonInit() {\n    this.userService.getUsers();\n  }\n\n\n  goToSignIn(){\n    this.findCurrentUserId();\n    this.userService.deleteUser(this.currentUserId);\n    this.router.navigate(['/login-page/signin']);\n  }\n\n\n  goToLogin(){\n    setTimeout(() => {\n      this.router.navigate(['/login-page/login']);\n    }, 2000);\n  }\n\n\n  async uploadAvatar(event: any) {\n    const file = event.target.files[0];\n    const imageUrl = await this.userService.uploadImage(file);\n    this.selectedAvatar = imageUrl;\n    this.uploadedAvatar = this.selectedAvatar;\n    this.imageChanged = true;\n  }\n\n\n  changeAvatar(i:number){\n    this.selectedAvatar = this.avatars[i];\n    this.imageChanged = true;\n  }\n\n\n  findCurrentUserId(): void {\n    for (let user of this.userService.allUsers) {\n      if (user.email === this.currentUser.email) {\n        this.currentUserId = user.id;\n        this.userService.addDatabaseIdToUser(this.currentUserId);\n        break;\n        \n      }\n    }\n  }\n\n\n  setAvatarToUser(){\n    this.findCurrentUserId();\n    this.user.profile_img = this.selectedAvatar;\n    this.userService.addAvatarToUser(this.currentUserId, this.selectedAvatar);\n  }\n\n\n  createUser(){\n    this.setAvatarToUser();\n    this.confirmPopup();\n    this.triggerAnimation();\n    this.goToLogin();\n  }\n\n\n  triggerAnimation() {\n    const element = document.querySelector('.cdk-overlay-container');\n    if (element) {\n      element.classList.add('animate');\n      setTimeout(() => {\n        element.classList.remove('animate');\n      }, 2000);\n    }\n  }\n  \n\n  confirmPopup(){\n    this._snackBar.openFromComponent(UserCreatedSnackbarComponent, {\n      duration: 2000,\n      horizontalPosition: 'start',\n      verticalPosition: 'bottom',\n      direction: 'rtl',\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    Wähle deinen Avatar\n    \n        \n            \n        \n        {{currentUser?.name}}\n        \n            Aus der Liste wählen\n\n        \n\n        \n            \n            \n            \n            \n            \n            \n        \n        \n            eigenes Bild verwenden\n            \n            Datei Hochladen\n        \n    \n    \n        Weiter\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Wähle deinen Avatar                                        {{currentUser?.name}}                    Aus der Liste wählen                                                                                                                    eigenes Bild verwenden                        Datei Hochladen                        Weiter    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'AvatarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Channel.html":{"url":"interfaces/Channel.html","title":"interface - Channel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Channel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/channel.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active_members\n                                        \n                                \n                                \n                                        \n                                            channel_type\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            creator\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            members\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active_members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active_members:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        channel_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channel_type:         ChannelTypeEnum\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChannelTypeEnum\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        creator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        members\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        members:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChannelTypeEnum } from '../shared/enums/channel-type.enum';\n\nexport interface Channel {\n  id: string;\n  name: string;\n  description: string;\n  created_at: number;\n  creator: string;\n  members: string[];\n  active_members: string[];\n  channel_type: ChannelTypeEnum;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChannelFirebaseService.html":{"url":"injectables/ChannelFirebaseService.html","title":"injectable - ChannelFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChannelFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/firebase.service/channelFirebase.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                channel\n                            \n                            \n                                channels\n                            \n                            \n                                currentChannel\n                            \n                            \n                                currentThread\n                            \n                            \n                                firestore\n                            \n                            \n                                unsubChannels\n                            \n                            \n                                unsubCurrentChannel\n                            \n                            \n                                unsubCurrentThread\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addChannel\n                            \n                            \n                                    Async\n                                createNewChannel\n                            \n                            \n                                    Async\n                                deleteChannel\n                            \n                            \n                                    Async\n                                getAllChannels\n                            \n                            \n                                getChannelRef\n                            \n                            \n                                    Async\n                                getChannelsForCurrentUser\n                            \n                            \n                                getChannelsRef\n                            \n                            \n                                    Async\n                                getCurrentChannel\n                            \n                            \n                                getCurrentThread\n                            \n                            \n                                getDirectChannelId\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                openNewChannel\n                            \n                            \n                                    Async\n                                removeUserFromChannel\n                            \n                            \n                                setChannel\n                            \n                            \n                                setCurrentChannel\n                            \n                            \n                                subChannels\n                            \n                            \n                                    Async\n                                updateChannel\n                            \n                            \n                                    Async\n                                updateChannelMembers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:49\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    addChannel(channel: Channel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:135\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel\n                                            \n                                                            Channel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createNewChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    createNewChannel(channel: Omit)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:225\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel\n                                            \n                                                            Omit\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteChannel(channelId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:200\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllChannels\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:208\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChannelRef\n                        \n                    \n                \n            \n            \n                \ngetChannelRef(channel_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getChannelsForCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getChannelsForCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChannelsRef\n                        \n                    \n                \n            \n            \n                \ngetChannelsRef()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentChannel(channel_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentThread\n                        \n                    \n                \n            \n            \n                \ngetCurrentThread(thread_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                thread_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirectChannelId\n                        \n                    \n                \n            \n            \n                \ngetDirectChannelId(currentUser_id: string, dm_target_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUser_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dm_target_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:104\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openNewChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    openNewChannel(currentUserId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:234\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                currentUserId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeUserFromChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeUserFromChannel(channelId: string, userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:183\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setChannel\n                        \n                    \n                \n            \n            \n                \nsetChannel(data: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Channel\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setCurrentChannel\n                        \n                    \n                \n            \n            \n                \nsetCurrentChannel(channel_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subChannels\n                        \n                    \n                \n            \n            \n                \nsubChannels(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateChannel(channel: Channel)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel\n                                            \n                                                            Channel\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateChannelMembers\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateChannelMembers(channelId: string, newMemberIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/channelFirebase.service.ts:166\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newMemberIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    name: '',\n    description: '',\n    created_at: 0,\n    creator: '', // 'user_id'\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.new,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentThread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    name: '',\n    description: '',\n    created_at: 0,\n    creator: '',\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.thread,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubChannels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubCurrentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : function () { }\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubCurrentThread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : function () { }\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/channelFirebase.service.ts:49\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Channel } from '../interfaces/channel.interface';\nimport {\n  Firestore,\n  collection,\n  onSnapshot,\n  addDoc,\n  doc,\n  updateDoc,\n  deleteDoc,\n  getDoc,\n  where,\n  query,\n  getDocs,\n} from '@angular/fire/firestore';\nimport { ChannelTypeEnum } from '../shared/enums/channel-type.enum';\nimport { runTransaction } from 'firebase/firestore';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ChannelFirebaseService {\n  firestore: Firestore = inject(Firestore);\n  channels: Channel[] = [];\n  currentChannel: Channel = {\n    id: '',\n    name: '',\n    description: '',\n    created_at: 0,\n    creator: '', // 'user_id'\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.new,\n  };\n  currentThread: Channel = {\n    id: '',\n    name: '',\n    description: '',\n    created_at: 0,\n    creator: '',\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.thread,\n  };\n  channel: Channel | undefined;\n\n  unsubChannels: any;\n  unsubCurrentChannel: any = function () { };\n  unsubCurrentThread: any = function () { };\n\n  constructor() { }\n\n\n  async getChannelsForCurrentUser() {\n    const storedUser = localStorage.getItem('currentUser');\n    if (storedUser) {\n      let currentUser = await JSON.parse(storedUser);\n      this.unsubChannels = this.subChannels(currentUser.id);\n    }\n  }\n\n\n  getDirectChannelId(currentUser_id: string, dm_target_id: string): string {\n    let directChannels = this.channels.filter(\n      (channel) => channel.channel_type == 'direct'\n    );\n    this.channel = undefined;\n    if (currentUser_id == dm_target_id) {\n      this.channel = directChannels.find((channel) => channel.members[0] == channel.members[1] || channel.members.length == 1);\n    } else {\n      this.channel = directChannels.find((channel) =>\n        channel.members.includes(dm_target_id)\n      );\n    }\n    if (this.channel) return this.channel.id;\n    else return '';\n  }\n\n\n  setCurrentChannel(channel_id: string) {\n    let channel = this.channels.find((channel) => channel.id == channel_id);\n    if (channel) this.currentChannel = channel;\n  }\n\n\n  async getCurrentChannel(channel_id: string) {\n    return onSnapshot(this.getChannelRef(channel_id), (channel) => {\n      const channelData = channel.data();\n      if (!channelData) {\n        return;\n      }\n      this.currentChannel = this.setChannel(channel.data(), channel.id);\n    });\n  }\n\n\n  getCurrentThread(thread_id: string) {\n    return onSnapshot(this.getChannelRef(thread_id), (channel) => {\n      this.currentThread = this.setChannel(channel.data(), channel.id);\n    });\n  }\n\n\n  ngOnDestroy(): void {\n    if (this.unsubChannels === typeof function () { }) this.unsubChannels();\n    this.unsubCurrentChannel();\n  }\n\n\n  getChannelsRef() {\n    return collection(this.firestore, 'channels');\n  }\n\n\n  getChannelRef(channel_id: string) {\n    return doc(collection(this.firestore, 'channels'), channel_id);\n  }\n\n\n  setChannel(data: any, id: string): Channel {\n    return {\n      id: id || '',\n      name: data.name || '',\n      description: data.description || '',\n      created_at: data.created_at || 0,\n      creator: data.creator || '', // 'user_id'\n      members: data.members || [],\n      active_members: data.active_members || [],\n      channel_type: data.channel_type || '',\n    };\n  }\n\n  \n  /* CREATE */\n  async addChannel(channel: Channel): Promise {\n    let ref = this.getChannelsRef();\n    const docRef = await addDoc(ref, channel);\n    return docRef.id;\n  }\n\n\n  /* READ */\n  subChannels(user_id: string) {\n    const q = query(\n      this.getChannelsRef(),\n      where('members', 'array-contains', user_id)\n    );\n    return onSnapshot(q, (channels) => {\n      this.channels = [];\n      channels.forEach((channel) => {\n        this.channels.push(this.setChannel(channel.data(), channel.id));\n      });\n    });\n  }\n\n\n  /* UPDATE */\n  async updateChannel(channel: Channel) {\n    if (channel.id) {\n      let docRef = doc(this.getChannelsRef(), channel.id);\n      await updateDoc(docRef, JSON.parse(JSON.stringify(channel)))\n    }\n  }\n\n\n  async updateChannelMembers(channelId: string, newMemberIds: string[]): Promise {\n    const docRef = doc(this.getChannelsRef(), channelId);\n    await runTransaction(this.firestore, async (transaction) => {\n      const docSnapshot = await transaction.get(docRef);\n      if (!docSnapshot.exists()) {\n        throw new Error('Channel nicht gefunden'); // wird das gebraucht?\n      }\n      const currentChannel = docSnapshot.data();\n      const updatedMemberIds = Array.from(\n        new Set([currentChannel['creator'], ...newMemberIds])\n      );\n      transaction.update(docRef, { members: updatedMemberIds });\n      currentChannel['members'] = updatedMemberIds;\n    });\n  }\n\n\n  async removeUserFromChannel(channelId: string, userId: string) {\n    if (!channelId) return;\n    const docRef = doc(this.getChannelsRef(), channelId);\n    const docSnap = await getDoc(docRef);\n    if (docSnap.exists()) {\n      const channelData = docSnap.data() as Channel;\n      const newMembers = channelData.members.filter(memberId => memberId !== userId);\n      channelData.members = newMembers;\n      if (newMembers.length === 0) {\n        this.deleteChannel(channelId);\n      } else {\n        await updateDoc(docRef, { members: newMembers })\n      }\n    }\n  }\n\n\n  async deleteChannel(channelId: string) {\n    if (!channelId) return;\n    const docRef = doc(this.getChannelsRef(), channelId);\n    await deleteDoc(docRef);\n    this.channels = this.channels.filter(channel => channel.id !== channelId);\n  }\n\n\n  async getAllChannels(): Promise {\n    const allChannelsQuery = query(this.getChannelsRef());\n    return getDocs(allChannelsQuery)\n      .then((querySnapshot) => {\n        this.channels = [];\n        querySnapshot.forEach((doc) => {\n          const channel = this.setChannel(doc.data(), doc.id);\n          this.channels.push(channel);\n        });\n        return this.channels;\n      })\n      .catch((error) => {\n        return [];\n      });\n  }\n\n\n  async createNewChannel(channel: Omit): Promise {\n    const newChannel: Channel = {\n      ...channel,\n      channel_type: ChannelTypeEnum.new,\n    };\n    return this.addChannel(newChannel);\n  }\n\n\n  async openNewChannel(currentUserId: string) {\n    const channelFound = this.channels.find(channel => channel.members.includes(currentUserId) && channel.channel_type === 'main');\n    if (channelFound) {\n      this.setCurrentChannel(channelFound.id);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckEmailComponent.html":{"url":"components/CheckEmailComponent.html","title":"component - CheckEmailComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckEmailComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/check-email/check-email.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-check-email\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            MatSnackBarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./check-email.component.html\n            \n\n\n\n            \n                styleUrl\n                ./check-email.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                resetEmail\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPopup\n                            \n                            \n                                goToLogin\n                            \n                            \n                                sendPasswordResetEmail\n                            \n                            \n                                triggerAnimation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _snackBar: MatSnackBar, userAuth: UserAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/check-email/check-email.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPopup\n                        \n                    \n                \n            \n            \n                \nconfirmPopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/check-email/check-email.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToLogin\n                        \n                    \n                \n            \n            \n                \ngoToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/check-email/check-email.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendPasswordResetEmail\n                        \n                    \n                \n            \n            \n                \nsendPasswordResetEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/check-email/check-email.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerAnimation\n                        \n                    \n                \n            \n            \n                \ntriggerAnimation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/check-email/check-email.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/check-email/check-email.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/check-email/check-email.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar,MatSnackBarModule} from '@angular/material/snack-bar';\nimport { EmailSnackbarComponent } from '../../popups/email-snackbar/email-snackbar.component';\nimport { send } from 'process';\nimport { UserAuthService } from '../../firebase.service/user.auth.service';\nimport { updateProfile } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-check-email',\n  standalone: true,\n  imports: [CommonModule, FormsModule, MatSnackBarModule],\n  templateUrl: './check-email.component.html',\n  styleUrl: './check-email.component.scss'\n})\nexport class CheckEmailComponent {\n  resetEmail: string = '';\n  error = false;\n\n  constructor(private router: Router, private _snackBar: MatSnackBar, private userAuth: UserAuthService) { }\n\n\n  goToLogin(){\n    this.router.navigate(['/login-page/login']);\n  }\n\n\n  sendPasswordResetEmail(){\n    this.userAuth.resetPassword(this.resetEmail).then(() => {\n      this.confirmPopup();\n      this.triggerAnimation();\n      this.resetEmail = '';\n      this.error = false;\n    })\n  }\n\n\n  triggerAnimation() {\n    const element = document.querySelector('.cdk-overlay-container');\n    if (element) {\n      element.classList.add('animate');\n      setTimeout(() => {\n        element.classList.remove('animate');\n      }, 2000);\n    }\n  }\n\n\n  confirmPopup(){\n    this._snackBar.openFromComponent(EmailSnackbarComponent, {\n      duration: 2000,\n      horizontalPosition: 'start',\n      verticalPosition: 'bottom',\n      direction: 'rtl',\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        Passwort zurücksetzen\n        Bitte geben Sie Ihre E-Mail-Adresse ein.\n        \n            \n                \n                *Diese E-Mail-Adresse ist leider ungültig.\n            \n        \n        Wir senden Ihnen ein E-Mail, über die Sie Ihr Passwort ändern können\n        \n            E-Mail senden\n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Passwort zurücksetzen        Bitte geben Sie Ihre E-Mail-Adresse ein.                                                    *Diese E-Mail-Adresse ist leider ungültig.                            Wir senden Ihnen ein E-Mail, über die Sie Ihr Passwort ändern können                    E-Mail senden        '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'CheckEmailComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CursorPositionService.html":{"url":"injectables/CursorPositionService.html","title":"injectable - CursorPositionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CursorPositionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/cursor-position.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                lastCursorPosition\n                            \n                            \n                                lastElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTextNodeToContainer\n                            \n                            \n                                getTextWithLineBreaks\n                            \n                            \n                                restoreCursorPosition\n                            \n                            \n                                saveCursorPosition\n                            \n                            \n                                setLastCursorPosition\n                            \n                            \n                                setRange\n                            \n                            \n                                setRangeAfterParentElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/cursor-position.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTextNodeToContainer\n                        \n                    \n                \n            \n            \n                \naddTextNodeToContainer(container: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cursor-position.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTextWithLineBreaks\n                        \n                    \n                \n            \n            \n                \ngetTextWithLineBreaks(range: Range)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cursor-position.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                range\n                                            \n                                                        Range\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreCursorPosition\n                        \n                    \n                \n            \n            \n                \nrestoreCursorPosition(container: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cursor-position.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Range | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveCursorPosition\n                        \n                    \n                \n            \n            \n                \nsaveCursorPosition(container: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cursor-position.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLastCursorPosition\n                        \n                    \n                \n            \n            \n                \nsetLastCursorPosition(container: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cursor-position.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                container\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRange\n                        \n                    \n                \n            \n            \n                \nsetRange(range: Range, node: Node, charIndex: number, selection: Selection)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cursor-position.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                range\n                                            \n                                                        Range\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                node\n                                            \n                                                        Node\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                charIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                selection\n                                            \n                                                        Selection\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Range\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRangeAfterParentElement\n                        \n                    \n                \n            \n            \n                \nsetRangeAfterParentElement(range: Range, parentElement: HTMLElement, selection: Selection)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/cursor-position.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                range\n                                            \n                                                        Range\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                parentElement\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                selection\n                                            \n                                                        Selection\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Range\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        lastCursorPosition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cursor-position.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/cursor-position.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CursorPositionService {\n  lastCursorPosition: number = 0;\n  lastElement: any;\n\n  constructor() {}\n\n  setLastCursorPosition(container: HTMLElement) {\n    this.lastCursorPosition = this.saveCursorPosition(container);\n  }\n\n  saveCursorPosition(container: HTMLElement): number {\n    const selection = window.getSelection();\n    if (!selection || selection.rangeCount === 0) return 0;\n    const range = selection.getRangeAt(0);\n    const preCaretRange = range.cloneRange();\n    preCaretRange.selectNodeContents(container);\n    preCaretRange.setEnd(range.startContainer, range.startOffset);\n    const preCaretText = this.getTextWithLineBreaks(preCaretRange);\n    this.lastElement = container;\n    this.lastCursorPosition = preCaretText.length;\n    return this.lastCursorPosition;\n  }\n\n  getTextWithLineBreaks(range: Range): string {\n    const div = document.createElement('div');\n    div.appendChild(range.cloneContents());\n    return div.innerHTML\n      .replace(//gi, '\\n')\n      .replace(//gi, '\\n')\n      .replace(//gi, '\\n')\n      .replace(/&nbsp;/g, ' ')\n      .replace(/]+>/g, '');\n  }\n\n  //#region  restore position\n  restoreCursorPosition(container: HTMLElement): Range | null {\n\n    if (!container.hasChildNodes()) this.addTextNodeToContainer(container);\n\n    const range = document.createRange();\n    const selection = window.getSelection();\n    let charIndex = 0;\n    let nodeStack: Node[] = [container];\n    let node: Node | undefined;\n\n    if(selection) {\n      while ((node = nodeStack.pop()) != undefined) {\n        if (node.nodeType === Node.TEXT_NODE) {\n          const nextCharIndex = charIndex + node.textContent!.length;\n          if (this.lastCursorPosition = 0; i--) nodeStack.push(node.childNodes[i]);\n        }\n      }\n    }\n   \n    return null; // fail\n  }\n\n  addTextNodeToContainer(container: HTMLElement) {\n    const textNode = document.createTextNode('');\n    container.appendChild(textNode);\n  }\n\n  setRangeAfterParentElement(range : Range, parentElement: HTMLElement, selection: Selection) {\n    range.setStartAfter(parentElement);\n    range.setEndAfter(parentElement);\n    range.collapse(true);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    return range;\n  }\n\n  setRange(range: Range, node: Node, charIndex: number, selection: Selection) {\n    range.setStart(node, this.lastCursorPosition - charIndex);\n    range.setEnd(node, this.lastCursorPosition - charIndex);\n    range.collapse(true);\n    selection.removeAllRanges();\n    selection.addRange(range);\n    return range;\n  }\n\n\n  //#endregion restore position\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomDialogService.html":{"url":"injectables/CustomDialogService.html","title":"injectable - CustomDialogService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomDialogService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/custom-dialog.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMobilePosition\n                            \n                            \n                                getPanelClass\n                            \n                            \n                                getPosition\n                            \n                            \n                                isMobile\n                            \n                            \n                                    Public\n                                openDialog\n                            \n                            \n                                    Public\n                                openDialogAbsolute\n                            \n                            \n                                updateDialogPosition\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/custom-dialog.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMobilePosition\n                        \n                    \n                \n            \n            \n                \ngetMobilePosition(mobilePosition: \"mid\" | \"bottom\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/custom-dialog.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                mobilePosition\n                                            \n                                                        \"mid\" | \"bottom\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { left?: undefined; bottom?: undefined; } | { left: string; bottom: string; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPanelClass\n                        \n                    \n                \n            \n            \n                \ngetPanelClass(position: \"left\" | \"right\" | \"mid\", mobilePosition?: \"mid\" | \"bottom\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/custom-dialog.service.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                position\n                                            \n                                                        \"left\" | \"right\" | \"mid\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mobilePosition\n                                            \n                                                        \"mid\" | \"bottom\"\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPosition\n                        \n                    \n                \n            \n            \n                \ngetPosition(button: HTMLElement, position: \"left\" | \"right\" | \"mid\", mobilePosition?: \"mid\" | \"bottom\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/custom-dialog.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                position\n                                            \n                                                        \"left\" | \"right\" | \"mid\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mobilePosition\n                                            \n                                                        \"mid\" | \"bottom\"\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { left?: undefined; bottom?: undefined; } | { left: string; bottom: string; } | { top: string; left: string; right?: undefined; } | { top: string; right: string; left?: undefined; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n            \n                \nisMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/custom-dialog.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openDialog\n                        \n                    \n                \n            \n            \n                \n                        \n                    openDialog(component: ComponentType)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/custom-dialog.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                component\n                                            \n                                                        ComponentType\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     MatDialogRef\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openDialogAbsolute\n                        \n                    \n                \n            \n            \n                \n                        \n                    openDialogAbsolute(undefined: DialogParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/custom-dialog.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                            \n                                                            DialogParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDialogPosition\n                        \n                    \n                \n            \n            \n                \nupdateDialogPosition(button: HTMLElement, position: \"left\" | \"right\" | \"mid\", mobilePosition?: \"mid\" | \"bottom\", mobileButton?: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/custom-dialog.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                position\n                                            \n                                                        \"left\" | \"right\" | \"mid\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                mobilePosition\n                                            \n                                                        \"mid\" | \"bottom\"\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                mobileButton\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/custom-dialog.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialogRef | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/custom-dialog.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\n\n\ninterface DialogParams {\n  button: HTMLElement;\n  component: ComponentType;\n  position: 'left' | 'right' | 'mid';\n  mobilePosition?: 'mid' | 'bottom';\n  mobileButton?: HTMLElement;\n  maxWidth: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomDialogService {\n  dialogRef: MatDialogRef | null = null;\n\n  constructor(public dialog: MatDialog) {}\n\n\n  public openDialog(component: ComponentType): MatDialogRef {\n    return this.dialog.open(component, {\n      panelClass: 'custom-dialog',\n    });\n  }\n\n\n  isMobile() {\n    return window.innerWidth \n        this.updateDialogPosition(button, position, mobilePosition, mobileButton)\n      );\n    }\n  }\n\n\n  updateDialogPosition(button: HTMLElement, position: 'left' | 'right' | 'mid', \n    mobilePosition?: 'mid' | 'bottom', mobileButton?: HTMLElement,): void {\n    if (this.dialogRef) {\n      let buttonUsed = this.isMobile() && mobileButton ? mobileButton : button;\n      let positionAsJSON = this.getPosition(buttonUsed, position, mobilePosition);\n      this.dialogRef.updatePosition(positionAsJSON);\n    }\n  }\n\n\n  getPosition(button: HTMLElement, position: 'left' | 'right' | 'mid', mobilePosition?: 'mid' | 'bottom') {\n    if (this.isMobile() && mobilePosition) {\n      return this.getMobilePosition(mobilePosition);\n    } else {\n      const rect = button.getBoundingClientRect();\n      if (position == 'left') return {\n        top: rect.bottom + 'px',\n        left:  rect.left + 'px',\n      };\n      else if (position == 'right') return {\n        top: rect.bottom + 'px',\n        right:  (window.innerWidth - rect.right) + 'px',\n      };\n      else return {};\n    }\n  }\n\n\n  getMobilePosition(mobilePosition: 'mid' | 'bottom') {\n    switch (mobilePosition) {\n      case 'mid':\n        return {};\n      case 'bottom':\n        return { left: '0px', bottom: '0px' };\n    }\n  }\n  \n\n  getPanelClass(position: 'left' | 'right' | 'mid', mobilePosition?: 'mid' | 'bottom') {\n    let pannelClass = '';\n    switch (position) {\n      case 'left': pannelClass = 'custom-dialog-anchorTopLeft';\n      break;\n      case 'right' : pannelClass = 'custom-dialog-anchorTopRight';\n      break;\n      case 'mid': pannelClass = 'custom-dialog';\n      break;\n      default : pannelClass = 'custom-dialog';\n    }\n    if (mobilePosition) pannelClass += '-mobile';\n    return pannelClass;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogAddMemberComponent.html":{"url":"components/DialogAddMemberComponent.html","title":"component - DialogAddMemberComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogAddMemberComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-add-member\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-add-member.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-add-member.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                currentChannel\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                newlyAddedUsers\n                            \n                            \n                                searchInput\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                    Public\n                                userManagementService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFilterUsers\n                            \n                            \n                                onRemoveSelectedUser\n                            \n                            \n                                onSelectUser\n                            \n                            \n                                onUpdateMembers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, userService: UserService, channelService: ChannelFirebaseService, userManagementService: UserManagementService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userManagementService\n                                                  \n                                                        \n                                                                        UserManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilterUsers\n                        \n                    \n                \n            \n            \n                \nonFilterUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveSelectedUser\n                        \n                    \n                \n            \n            \n                \nonRemoveSelectedUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectUser\n                        \n                    \n                \n            \n            \n                \nonSelectUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdateMembers\n                        \n                    \n                \n            \n            \n                \nonUpdateMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : this.channelService.currentChannel\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newlyAddedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userManagementService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserManagementService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from '../../../firebase.service/user.service';\nimport { User } from '../../../interfaces/user.interface';\nimport { ChannelFirebaseService } from '../../../firebase.service/channelFirebase.service';\nimport { UserManagementService } from '../../../services/user-management.service';\nimport { Channel } from '../../../interfaces/channel.interface';\n\n@Component({\n  selector: 'app-dialog-add-member',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, FormsModule],\n  templateUrl: './dialog-add-member.component.html',\n  styleUrl: './dialog-add-member.component.scss',\n})\nexport class DialogAddMemberComponent implements OnInit {\n  searchInput: string = '';\n  filteredUsers: User[] = [];\n  selectedUsers: User[] = [];\n  newlyAddedUsers: User[] = [];\n  currentChannel: Channel =\n    this.channelService.currentChannel;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    public userManagementService: UserManagementService,\n  ) { }\n\n\n  ngOnInit(): void {\n    if (this.channelService.currentChannel && this.channelService.currentChannel.members) {\n      this.selectedUsers = this.userService.getUsersByIds(this.channelService.currentChannel.members);\n      this.newlyAddedUsers = [];\n    }\n  }\n\n\n  onFilterUsers(): void {\n    this.filteredUsers = this.userManagementService.filterUsers(this.searchInput, this.selectedUsers);\n  }\n\n\n  onSelectUser(user: User): void {\n    this.selectedUsers = this.userManagementService.selectUser(this.selectedUsers, user);\n    if (!this.newlyAddedUsers.find(u => u.id === user.id)) {\n      this.newlyAddedUsers.push(user);\n    }\n    this.filteredUsers = this.filteredUsers.filter(u => u.id !== user.id);\n    this.searchInput = '';\n    this.onFilterUsers();\n  }\n\n\n  onRemoveSelectedUser(user: User): void {\n    this.selectedUsers = this.userManagementService.removeSelectedUser(this.selectedUsers, user);\n    this.newlyAddedUsers = this.newlyAddedUsers.filter(u => u.id !== user.id);\n    this.onFilterUsers();\n  }\n\n\n  onUpdateMembers(): void {\n    const memberIds = this.userManagementService.getMemberIds(this.selectedUsers);\n    const channelId = this.userManagementService.getCurrentChannelId();\n    if (channelId) {\n      this.userManagementService.updateMembers(channelId, memberIds)\n        .then(() => {\n          this.dialogRef.close();\n        })\n        .catch(error => {\n          console.error('Fehler beim Aktualisieren der Mitgliederliste:', error);\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        Leute hinzufügen\n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n\n    \n        \n            \n                \n            \n            \n                \n            \n        \n        {{ currentChannel.name }}\n    \n\n    \n        @if (newlyAddedUsers.length > 0) {\n            \n        @for(user of newlyAddedUsers; track user.id) {\n        \n            \n                \n                @if (!user.logged_in){\n                \n                }\n                @if (user.logged_in){\n                \n                }\n            \n            \n                {{ user.name }}\n            \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n        \n        }\n            \n        }\n  \n\n    \n        \n            \n            @if (filteredUsers.length > 0) {\n            \n                \n                    @for(user of filteredUsers; track user.id) {\n                    \n                        \n                            \n                            @if (!user.logged_in){\n                            \n                            }\n                            @if (user.logged_in){\n                            \n                            }\n                        \n                        {{user.name}}\n                    \n                    }\n                \n            \n            }\n        \n    \n\n    Hinzufügen\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Leute hinzufügen                                                                                                                                                                                                                                                                {{ currentChannel.name }}                @if (newlyAddedUsers.length > 0) {                    @for(user of newlyAddedUsers; track user.id) {                                                    @if (!user.logged_in){                                }                @if (user.logged_in){                                }                                        {{ user.name }}                                                                                                                                                                                                                    }                    }                                      @if (filteredUsers.length > 0) {                                                @for(user of filteredUsers; track user.id) {                                                                                                    @if (!user.logged_in){                                                        }                            @if (user.logged_in){                                                        }                                                {{user.name}}                                        }                                        }                Hinzufügen'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogAddMemberComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogAddMemberMobileComponent.html":{"url":"components/DialogAddMemberMobileComponent.html","title":"component - DialogAddMemberMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogAddMemberMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-add-member-mobile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-add-member-mobile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-add-member-mobile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                currentChannel\n                            \n                            \n                                    Public\n                                customDialogService\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                newlyAddedUsers\n                            \n                            \n                                searchInput\n                            \n                            \n                                selectedUsers\n                            \n                            \n                                    Public\n                                userManagementService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFilterUsers\n                            \n                            \n                                onRemoveSelectedUser\n                            \n                            \n                                onSelectUser\n                            \n                            \n                                onUpdateMembers\n                            \n                            \n                                openUserProfile\n                            \n                            \n                                removeFilterUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, userService: UserService, channelService: ChannelFirebaseService, userManagementService: UserManagementService, customDialogService: CustomDialogService, profileService: ProfileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userManagementService\n                                                  \n                                                        \n                                                                        UserManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilterUsers\n                        \n                    \n                \n            \n            \n                \nonFilterUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRemoveSelectedUser\n                        \n                    \n                \n            \n            \n                \nonRemoveSelectedUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectUser\n                        \n                    \n                \n            \n            \n                \nonSelectUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUpdateMembers\n                        \n                    \n                \n            \n            \n                \nonUpdateMembers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserProfile\n                        \n                    \n                \n            \n            \n                \nopenUserProfile(userId: string, button: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFilterUsers\n                        \n                    \n                \n            \n            \n                \nremoveFilterUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : this.channelService.currentChannel\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        customDialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomDialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newlyAddedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userManagementService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserManagementService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { UserService } from '../../../firebase.service/user.service';\nimport { ChannelFirebaseService } from '../../../firebase.service/channelFirebase.service';\nimport { UserManagementService } from '../../../services/user-management.service';\nimport { CustomDialogService } from '../../../services/custom-dialog.service';\nimport { ProfileService } from '../../../services/profile.service';\nimport { DialogAddMemberComponent } from '../dialog-add-member/dialog-add-member.component';\nimport { Channel } from '../../../interfaces/channel.interface';\nimport { DialogShowProfileComponent } from '../../../shared/dialog-show-profile/dialog-show-profile.component';\nimport { User } from '../../../interfaces/user.interface';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-dialog-add-member-mobile',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, FormsModule],\n  templateUrl: './dialog-add-member-mobile.component.html',\n  styleUrl: './dialog-add-member-mobile.component.scss'\n})\nexport class DialogAddMemberMobileComponent {\n  searchInput: string = '';\n  filteredUsers: User[] = [];\n  selectedUsers: User[] = [];\n  newlyAddedUsers: User[] = [];\n\n  currentChannel: Channel =\n    this.channelService.currentChannel;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    public userManagementService: UserManagementService,\n    public customDialogService: CustomDialogService,\n    private profileService: ProfileService\n  ) { }\n\n\n  ngOnInit(): void {\n    if (this.channelService.currentChannel && this.channelService.currentChannel.members) {\n      this.selectedUsers = this.userService.getUsersByIds(this.channelService.currentChannel.members);\n      this.newlyAddedUsers = [];\n    }\n  }\n\n\n  onFilterUsers(): void {\n    this.filteredUsers = this.userManagementService.filterUsers(this.searchInput, this.selectedUsers);\n  }\n\n\n  removeFilterUsers(): void {\n    this.filteredUsers = [];\n  }\n\n\n  onSelectUser(user: User): void {\n    this.selectedUsers = this.userManagementService.selectUser(this.selectedUsers, user);\n    if (!this.newlyAddedUsers.find(u => u.id === user.id)) {\n      this.newlyAddedUsers.push(user);\n    }\n    this.filteredUsers = this.filteredUsers.filter(u => u.id !== user.id);\n    this.searchInput = '';\n    this.onFilterUsers();\n  }\n\n\n  onRemoveSelectedUser(user: User): void {\n    this.selectedUsers = this.userManagementService.removeSelectedUser(this.selectedUsers, user);\n    this.newlyAddedUsers = this.newlyAddedUsers.filter(u => u.id !== user.id);\n    this.onFilterUsers();\n  }\n\n\n  onUpdateMembers(): void {\n    const memberIds = this.userManagementService.getMemberIds(this.selectedUsers);\n    const channelId = this.userManagementService.getCurrentChannelId();\n    if (channelId) {\n      this.userManagementService.updateMembers(channelId, memberIds)\n        .then(() => {\n          this.dialogRef.close();\n        })\n        .catch(error => {\n          console.error('Fehler beim Aktualisieren der Mitgliederliste:', error);\n        });\n    } \n  }\n\n\n  openUserProfile(userId: string, button: HTMLElement): void {\n    this.profileService.setOwnProfileStatus(false);\n    this.profileService.setViewingUserId(userId);\n    const component = DialogShowProfileComponent;\n    this.customDialogService.openDialogAbsolute({ button, component, position: 'right', maxWidth: '500px' });\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n        Leute hinzufügen\n        \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n\n    \n        \n            \n                \n            \n            \n                \n            \n        \n        {{ currentChannel.name }}\n    \n\n    \n    @if (newlyAddedUsers.length > 0) {\n        \n            @for(user of newlyAddedUsers; track user.id) {\n            \n                \n                    \n                    @if (!user.logged_in){\n                    \n                    }\n                    @if (user.logged_in){\n                    \n                    }\n                \n            {{ user.name }}\n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n            \n            }\n        \n    }\n\n\n    \n        \n            \n            @if (filteredUsers.length > 0) {\n            \n                \n                    @for(user of filteredUsers; track user.id) {\n                    \n                        \n                            \n                            @if (!user.logged_in){\n                            \n                            }\n                            @if (user.logged_in){\n                            \n                            }\n                        \n                        {{user.name}}\n                    \n                    }\n                \n            \n            }\n        \n    \n\n    Hinzufügen\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Leute hinzufügen                                                                                                                                                                                                                                                                        {{ currentChannel.name }}            @if (newlyAddedUsers.length > 0) {                    @for(user of newlyAddedUsers; track user.id) {                                                                    @if (!user.logged_in){                                        }                    @if (user.logged_in){                                        }                            {{ user.name }}                                                                                                                                                                                                                }            }                                    @if (filteredUsers.length > 0) {                                                @for(user of filteredUsers; track user.id) {                                                                                                    @if (!user.logged_in){                                                        }                            @if (user.logged_in){                                                        }                                                {{user.name}}                                        }                                        }                Hinzufügen'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogAddMemberMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogEditChannelComponent.html":{"url":"components/DialogEditChannelComponent.html","title":"component - DialogEditChannelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogEditChannelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-edit-channel\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                            TextFieldModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-edit-channel.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-edit-channel.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                autosize\n                            \n                            \n                                channelExists\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                customDialogService\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                editChannelDescription\n                            \n                            \n                                editChannelName\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                selectedUserId\n                            \n                            \n                                tempChannelDescription\n                            \n                            \n                                tempChannelName\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelEditing\n                            \n                            \n                                    Async\n                                changeChannelName\n                            \n                            \n                                deleteChannelAndMessages\n                            \n                            \n                                duplicateChannelName\n                            \n                            \n                                getCreatorName\n                            \n                            \n                                    Async\n                                leaveChannel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openAddUserDialog\n                            \n                            \n                                openNewChannel\n                            \n                            \n                                triggerResize\n                            \n                            \n                                    Async\n                                updateEditedChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, _ngZone: NgZone, userService: UserService, channelService: ChannelFirebaseService, router: Router, customDialogService: CustomDialogService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelEditing\n                        \n                    \n                \n            \n            \n                \ncancelEditing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeChannelName\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeChannelName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteChannelAndMessages\n                        \n                    \n                \n            \n            \n                \ndeleteChannelAndMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:121\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        duplicateChannelName\n                        \n                    \n                \n            \n            \n                \nduplicateChannelName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCreatorName\n                        \n                    \n                \n            \n            \n                \ngetCreatorName(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        leaveChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    leaveChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddUserDialog\n                        \n                    \n                \n            \n            \n                \nopenAddUserDialog(button: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNewChannel\n                        \n                    \n                \n            \n            \n                \nopenNewChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerResize\n                        \n                    \n                \n            \n            \n                \ntriggerResize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateEditedChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateEditedChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        autosize\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CdkTextareaAutosize\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('autosize')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        customDialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomDialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editChannelDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editChannelName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tempChannelDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tempChannelName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, NgZone, ViewChild, OnInit } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { CdkTextareaAutosize, TextFieldModule } from '@angular/cdk/text-field';\nimport { UserService } from '../../../firebase.service/user.service';\nimport { ChannelFirebaseService } from '../../../firebase.service/channelFirebase.service';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { DialogAddMemberMobileComponent } from '../dialog-add-member-mobile/dialog-add-member-mobile.component';\nimport { CustomDialogService } from '../../../services/custom-dialog.service';\nimport { MessageService } from '../../../firebase.service/message.service';\n\n@Component({\n  selector: 'app-dialog-edit-channel',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, TextFieldModule, FormsModule],\n  templateUrl: './dialog-edit-channel.component.html',\n  styleUrl: './dialog-edit-channel.component.scss',\n})\nexport class DialogEditChannelComponent implements OnInit {\n  editChannelName: boolean = false;\n  editChannelDescription: boolean = false;\n  tempChannelName!: string;\n  tempChannelDescription!: string;\n  selectedUserId: string = '';\n  channelExists: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private _ngZone: NgZone,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    private router: Router,\n    public customDialogService: CustomDialogService,\n    public messageService: MessageService\n  ) { }\n\n  @ViewChild('autosize') autosize!: CdkTextareaAutosize;\n\n  ngOnInit(): void {\n    this.tempChannelName = this.channelService.currentChannel.name;\n    this.tempChannelDescription =\n      this.channelService.currentChannel.description;\n  }\n\n\n  openAddUserDialog(button: HTMLElement) {\n    const component = DialogAddMemberMobileComponent;\n    this.customDialogService.openDialogAbsolute({ button, component, position: 'mid', mobilePosition: 'bottom', maxWidth: '100dvw' });\n  }\n\n\n  getCreatorName(userId: string): string {\n    const user = this.userService.getUser(userId);\n    return user ? user.name : 'Unbekannter Benutzer';\n  }\n\n\n  triggerResize() {\n    this._ngZone.onStable\n      .pipe(take(1))\n      .subscribe(() => this.autosize.resizeToFitContent(true));\n  }\n\n\n  async updateEditedChannel(): Promise {\n      if (this.duplicateChannelName()) {\n        this.channelExists = true;\n        return;\n      } else {\n        this.changeChannelName();\n      }\n  }\n\n\n  async changeChannelName(): Promise {\n    this.channelExists = false;\n    this.channelService.currentChannel.name = this.tempChannelName;\n    this.channelService.currentChannel.description = this.tempChannelDescription;\n    await this.channelService.updateChannel(this.channelService.currentChannel);\n    this.cancelEditing();\n    this.dialogRef.close();\n  }\n\n\n  duplicateChannelName(): boolean {\n    return this.channelService.channels.some(\n      (channel) =>\n        channel.name === this.tempChannelName &&\n        channel.id !== this.channelService.currentChannel.id\n    );\n  }\n\n\n  cancelEditing(): void {\n    this.editChannelName = false;\n    this.editChannelDescription = false;\n  }\n\n\n  async leaveChannel(): Promise {\n    if (!this.channelService.currentChannel || !this.channelService.currentChannel.id) {\n      return;\n    }\n      if (this.channelService.currentChannel.members.length === 1){\n        this.deleteChannelAndMessages();\n      }\n      await this.channelService.removeUserFromChannel(this.channelService.currentChannel.id, this.userService.currentUser.id);\n      this.openNewChannel();\n  }\n\n\n  openNewChannel(){\n    this.dialogRef.close();\n    this.channelService.openNewChannel(this.userService.currentUser.id);\n    this.router.navigate(['/main-page/' + this.channelService.currentChannel.id]);\n  }\n\n\n  deleteChannelAndMessages(){\n    for (let thread of this.channelService.channels) {\n      if (thread.name === this.channelService.currentChannel.name) {\n        this.messageService.removeThreadMessagesFromChannel(thread.id);\n        this.messageService.removeThreadMessagesFromChannel(this.channelService.currentChannel.id);\n        this.channelService.deleteChannel(thread.id);\n      }\n    }\n    this.messageService.removeMessagesFromEmptyChannel(this.channelService.currentChannel.id);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        \n          \n        \n      \n    \n    {{ channelService.currentChannel.name }}\n  \n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      {{ channelService.currentChannel.name }}\n    \n    \n    \n      \n        \n          \n        \n        \n          \n        \n      \n    \n  \n  \n  \n    \n      \n        Channel-Name\n        @if (!editChannelName) {\n        \n          Bearbeiten\n        \n        \n        } @else {\n        \n          Speichern\n        \n        \n        }\n      \n      \n        \n          \n            \n              \n            \n            \n              \n            \n          \n        \n        \n      \n      @if(channelExists){\n        Dieser Channel existiert bereits.\n      }\n    \n    \n      \n        Beschreibung\n        @if (!editChannelDescription) {\n        \n          Bearbeiten\n        \n        \n        } @else {\n        \n          Speichern\n        \n        \n        }\n      \n      \n        {{ channelService.currentChannel.description }}\n      \n      \n      Erstellt von\n      {{ getCreatorName(channelService.currentChannel.creator) }}\n    \n\n    \n      Mitglieder\n      \n        @for(user of userService.allUsers; track user.id) {\n          @if(user.id != userService.currentUser?.id ) {\n          \n              \n                  \n                      \n                      \n                  \n      \n                  \n                      {{ user.name }}\n                  \n              \n          \n          }\n          }\n          \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n            Mitglieder hinzufügen\n        \n      \n\n    \n  Channel verlassen\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              {{ channelService.currentChannel.name }}                                                                                                                                                                {{ channelService.currentChannel.name }}                                                                                                        Channel-Name        @if (!editChannelName) {                  Bearbeiten                        } @else {                  Speichern                        }                                                                                                                                                @if(channelExists){        Dieser Channel existiert bereits.      }                      Beschreibung        @if (!editChannelDescription) {                  Bearbeiten                        } @else {                  Speichern                        }                    {{ channelService.currentChannel.description }}                  Erstellt von      {{ getCreatorName(channelService.currentChannel.creator) }}              Mitglieder              @for(user of userService.allUsers; track user.id) {          @if(user.id != userService.currentUser?.id ) {                                                                                                                                                      {{ user.name }}                                                    }          }                                                                                                                                                                                                              Mitglieder hinzufügen                    Channel verlassen  '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogEditChannelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogEditProfileComponent.html":{"url":"components/DialogEditProfileComponent.html","title":"component - DialogEditProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogEditProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-edit-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-edit-profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-edit-profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                avatars\n                            \n                            \n                                changeAvatar\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                editForm\n                            \n                            \n                                emailExists\n                            \n                            \n                                imageChanged\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                thisAvatar\n                            \n                            \n                                    Public\n                                userAuth\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeEmailOnly\n                            \n                            \n                                    Async\n                                changeNameOnly\n                            \n                            \n                                    Async\n                                changeUserAvatar\n                            \n                            \n                                closeAvatarDialog\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                isEmailDisabled\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                openAvatarDialog\n                            \n                            \n                                    Async\n                                uploadAvatar\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, userService: UserService, userAuth: UserAuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeEmailOnly\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeEmailOnly(email: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeNameOnly\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeNameOnly(displayName: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                displayName\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeUserAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeUserAvatar(i: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                i\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeAvatarDialog\n                        \n                    \n                \n            \n            \n                \ncloseAvatarDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailPlaceholder\n                        \n                    \n                \n            \n            \n                \nemailPlaceholder()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isEmailDisabled\n                        \n                    \n                \n            \n            \n                \nisEmailDisabled()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAvatarDialog\n                        \n                    \n                \n            \n            \n                \nopenAvatarDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        uploadAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    uploadAvatar(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        avatars\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'assets/img/avatar-1.jpg',\n    'assets/img/avatar-2.jpg',\n    'assets/img/avatar-3.jpg',\n    'assets/img/avatar-4.jpg',\n    'assets/img/avatar-5.jpg',\n    'assets/img/avatar-6.jpg',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeAvatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    email: new FormControl({ value: '', disabled: this.isEmailDisabled() }, [\n      Validators.required,\n      Validators.email,\n    ]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageChanged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        thisAvatar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : this.userService.currentUser?.profile_img\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userAuth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserAuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { UserService } from '../../firebase.service/user.service';\nimport { UserAuthService } from '../../firebase.service/user.auth.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-dialog-edit-profile',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, FormsModule, ReactiveFormsModule],\n  templateUrl: './dialog-edit-profile.component.html',\n  styleUrl: './dialog-edit-profile.component.scss',\n})\nexport class DialogEditProfileComponent implements OnInit {\n  editForm = new FormGroup({\n    name: new FormControl('', [Validators.required]),\n    email: new FormControl({ value: '', disabled: this.isEmailDisabled() }, [\n      Validators.required,\n      Validators.email,\n    ]),\n  });\n  avatars = [\n    'assets/img/avatar-1.jpg',\n    'assets/img/avatar-2.jpg',\n    'assets/img/avatar-3.jpg',\n    'assets/img/avatar-4.jpg',\n    'assets/img/avatar-5.jpg',\n    'assets/img/avatar-6.jpg',\n  ];\n  emailExists: boolean = false;\n  changeAvatar: boolean = false;\n  thisAvatar: string = this.userService.currentUser?.profile_img;\n  imageChanged: boolean = false;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public userService: UserService,\n    public userAuth: UserAuthService,\n    public router: Router\n  ) { }\n\n\n  ngOnInit(): void {\n    this.userAuth.currentUser().then((user) => {\n      if (user) {\n        this.editForm.patchValue({\n          name: user.displayName,\n          email: user.email,\n        });\n        if (this.isEmailDisabled()) {\n          this.editForm.get('email')?.disable();\n        } else {\n          this.editForm.get('email')?.enable();\n        }\n      }\n    });\n  }\n\n\n  emailPlaceholder(): string {\n    return this.userService.currentUser?.email == this.userAuth.googleEmail\n      ? 'Kann hier nicht bearbeitet werden'\n      : this.userService.currentUser?.email;\n  }\n\n\n  isEmailDisabled(): boolean {\n    return this.userService.currentUser?.email == this.userAuth.googleEmail;\n  }\n\n\n  openAvatarDialog() {\n    this.changeAvatar = true;\n  }\n\n\n  closeAvatarDialog() {\n    if (this.changeAvatar) {\n      this.userService.currentUser.profile_img = this.thisAvatar;\n      this.router.navigate(['/main-page']);\n      this.changeAvatar = false;\n    }\n  }\n\n\n  async changeUserAvatar(i: number) {\n    this.thisAvatar = this.avatars[i];\n    await this.userService.updateUserImage(this.userService.currentUser.id, this.thisAvatar);\n    this.imageChanged = true;\n  }\n\n\n  async uploadAvatar(event: any) {\n    const file = event.target.files[0];\n    const imageUrl = await this.userService.uploadImage(file);\n    this.thisAvatar = imageUrl;\n    await this.userService.updateUserImage(this.userService.currentUser.id, this.thisAvatar);\n    this.closeAvatarDialog();\n    this.imageChanged = true;\n  }\n\n\n  async onSubmit() {\n    if (this.editForm.valid) {\n      const displayName = this.editForm.get('name')?.value;\n      const email = this.editForm.get('email')?.value;\n      if (displayName != this.userService.currentUser.name) {\n        this.changeNameOnly(displayName);\n      }\n      if (email != this.userService.currentUser.email) {\n        this.changeEmailOnly(email);\n      }\n      else {\n        return;\n      }\n    }\n  }\n\n\n  async changeNameOnly(displayName: any) {\n    await this.userAuth.changeCurrentUser(displayName);\n    this.userService.currentUser.name = displayName;\n    this.dialogRef.close();\n  }\n  \n\n  async changeEmailOnly(email: any) {\n    const emailExists = await this.userAuth.emailExists(email);\n    if (emailExists) {\n      this.emailExists = true;\n      return;\n    }\n    this.emailExists = false;\n    await this.userAuth.changeCurrentUser(email);\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n\n    \n\n        \n            Dein Profil bearbeiten\n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n            \n        \n\n        \n            @if (!changeAvatar){\n            \n            }\n            @if (changeAvatar){\n            \n            \n                \n                    \n                    \n                    \n                    \n                    \n                    \n                \n                \n                    \n                    Bild Hochladen\n                \n            \n            }\n        \n\n        \n            \n                \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    Vollständiger Name\n                \n                \n                    \n                \n            \n\n            \n                \n                    \n                        \n                            \n                        \n                        \n                            \n                        \n                    \n                    E-Mail-Adresse\n                \n\n                \n                    \n                \n                @if (emailExists) {\n                Email existiert bereits\n                }\n\n            \n        \n\n        \n            \n                Abbrechen\n            \n            \n                Speichern\n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Dein Profil bearbeiten                                                                                                                                                                                                                    @if (!changeAvatar){                        }            @if (changeAvatar){                                                                                                                                                                                                                                        Bild Hochladen                                        }                                                                                                                                                                                                                                                                Vollständiger Name                                                                                                                                                                                                                                                                                                                                E-Mail-Adresse                                                                                    @if (emailExists) {                Email existiert bereits                }                                                        Abbrechen                                        Speichern                        '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogEditProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogEmojiPickerComponent.html":{"url":"components/DialogEmojiPickerComponent.html","title":"component - DialogEmojiPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogEmojiPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/channel/dialog-emoji-picker/dialog-emoji-picker.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-emoji-picker\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            PickerComponent\n                            MatDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-emoji-picker.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-emoji-picker.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addEmoji\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/channel/dialog-emoji-picker/dialog-emoji-picker.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addEmoji\n                        \n                    \n                \n            \n            \n                \naddEmoji(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-emoji-picker/dialog-emoji-picker.component.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-emoji-picker/dialog-emoji-picker.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { PickerComponent } from '@ctrl/ngx-emoji-mart';\n\n@Component({\n  selector: 'app-dialog-emoji-picker',\n  standalone: true,\n  imports: [PickerComponent, MatDialogModule],\n  templateUrl: './dialog-emoji-picker.component.html',\n  styleUrl: './dialog-emoji-picker.component.scss'\n})\nexport class DialogEmojiPickerComponent {\n\n  constructor(public dialogRef: MatDialogRef) { }\n\n  addEmoji(event : any) {\n    const emoji = event.emoji.native;\n    this.dialogRef.close(emoji);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogEmojiPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogParams.html":{"url":"interfaces/DialogParams.html","title":"interface - DialogParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/custom-dialog.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            button\n                                        \n                                \n                                \n                                        \n                                            component\n                                        \n                                \n                                \n                                        \n                                            maxWidth\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mobileButton\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mobilePosition\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        button\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        button:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        component\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        component:     ComponentType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ComponentType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxWidth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxWidth:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobileButton\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mobileButton:     HTMLElement\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HTMLElement\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mobilePosition\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mobilePosition:     \"mid\" | \"bottom\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"mid\" | \"bottom\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:     \"left\" | \"right\" | \"mid\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\" | \"mid\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { ComponentType } from '@angular/cdk/portal';\n\n\ninterface DialogParams {\n  button: HTMLElement;\n  component: ComponentType;\n  position: 'left' | 'right' | 'mid';\n  mobilePosition?: 'mid' | 'bottom';\n  mobileButton?: HTMLElement;\n  maxWidth: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomDialogService {\n  dialogRef: MatDialogRef | null = null;\n\n  constructor(public dialog: MatDialog) {}\n\n\n  public openDialog(component: ComponentType): MatDialogRef {\n    return this.dialog.open(component, {\n      panelClass: 'custom-dialog',\n    });\n  }\n\n\n  isMobile() {\n    return window.innerWidth \n        this.updateDialogPosition(button, position, mobilePosition, mobileButton)\n      );\n    }\n  }\n\n\n  updateDialogPosition(button: HTMLElement, position: 'left' | 'right' | 'mid', \n    mobilePosition?: 'mid' | 'bottom', mobileButton?: HTMLElement,): void {\n    if (this.dialogRef) {\n      let buttonUsed = this.isMobile() && mobileButton ? mobileButton : button;\n      let positionAsJSON = this.getPosition(buttonUsed, position, mobilePosition);\n      this.dialogRef.updatePosition(positionAsJSON);\n    }\n  }\n\n\n  getPosition(button: HTMLElement, position: 'left' | 'right' | 'mid', mobilePosition?: 'mid' | 'bottom') {\n    if (this.isMobile() && mobilePosition) {\n      return this.getMobilePosition(mobilePosition);\n    } else {\n      const rect = button.getBoundingClientRect();\n      if (position == 'left') return {\n        top: rect.bottom + 'px',\n        left:  rect.left + 'px',\n      };\n      else if (position == 'right') return {\n        top: rect.bottom + 'px',\n        right:  (window.innerWidth - rect.right) + 'px',\n      };\n      else return {};\n    }\n  }\n\n\n  getMobilePosition(mobilePosition: 'mid' | 'bottom') {\n    switch (mobilePosition) {\n      case 'mid':\n        return {};\n      case 'bottom':\n        return { left: '0px', bottom: '0px' };\n    }\n  }\n  \n\n  getPanelClass(position: 'left' | 'right' | 'mid', mobilePosition?: 'mid' | 'bottom') {\n    let pannelClass = '';\n    switch (position) {\n      case 'left': pannelClass = 'custom-dialog-anchorTopLeft';\n      break;\n      case 'right' : pannelClass = 'custom-dialog-anchorTopRight';\n      break;\n      case 'mid': pannelClass = 'custom-dialog';\n      break;\n      default : pannelClass = 'custom-dialog';\n    }\n    if (mobilePosition) pannelClass += '-mobile';\n    return pannelClass;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogShowMembersComponent.html":{"url":"components/DialogShowMembersComponent.html","title":"component - DialogShowMembersComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogShowMembersComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-show-members\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                            FormsModule\n                                OpenProfileDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-show-members.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-show-members.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                currentChannel\n                            \n                            \n                                    Public\n                                customDialogService\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openAddUserDialog\n                            \n                            \n                                openUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, customDialogService: CustomDialogService, userService: UserService, channelService: ChannelFirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openAddUserDialog\n                        \n                    \n                \n            \n            \n                \nopenAddUserDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserProfile\n                        \n                    \n                \n            \n            \n                \nopenUserProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : this.channelService.currentChannel\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        customDialogService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CustomDialogService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { FormsModule } from '@angular/forms';\nimport { UserService } from '../../../firebase.service/user.service';\nimport { ChannelFirebaseService } from '../../../firebase.service/channelFirebase.service';\nimport { Channel } from '../../../interfaces/channel.interface';\nimport { CustomDialogService } from '../../../services/custom-dialog.service';\nimport { DialogAddMemberComponent } from '../dialog-add-member/dialog-add-member.component';\nimport { OpenProfileDirective } from '../../../shared/directives/open-profile.directive';\n\n@Component({\n  selector: 'app-dialog-show-members',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule, FormsModule, OpenProfileDirective],\n  templateUrl: './dialog-show-members.component.html',\n  styleUrl: './dialog-show-members.component.scss',\n})\nexport class DialogShowMembersComponent {\n  currentChannel: Channel = this.channelService.currentChannel;\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    public customDialogService: CustomDialogService,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService\n  ) {}\n\n\n  openAddUserDialog() {\n    const component = DialogAddMemberComponent;\n    let button = document.getElementById('addMemberBtn');\n    if(button) this.customDialogService.openDialogAbsolute({button, component,position : 'right', maxWidth : '554px'});\n    this.dialogRef.close();\n  }\n  \n\n  openUserProfile(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n    \n        Mitglieder\n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n    \n        \n            @for(member of currentChannel.members; track member; let index = $index) {\n                @if(userService.getUser(member)) {\n                    \n                \n                    @if(userService.getUser(member).profile_img && userService.getUser(member).name) {\n                        \n                    }\n                    @if (!userService.getUser(member).logged_in){\n                    \n                    }\n                    @if (userService.getUser(member).logged_in){\n                    \n                    }    \n                \n                \n                    {{ userService.getUser(member).name }}{{ userService.getUser(member).name ===\n                    userService.currentUser?.name ? ' (Du)' : '' }}\n                \n                \n                }\n            }\n            \n        \n    \n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n        Mitglieder hinzufügen\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Mitglieder                                                                                                                                                                            @for(member of currentChannel.members; track member; let index = $index) {                @if(userService.getUser(member)) {                                                        @if(userService.getUser(member).profile_img && userService.getUser(member).name) {                                            }                    @if (!userService.getUser(member).logged_in){                                        }                    @if (userService.getUser(member).logged_in){                                        }                                                        {{ userService.getUser(member).name }}{{ userService.getUser(member).name ===                    userService.currentUser?.name ? \\' (Du)\\' : \\'\\' }}                                                }            }                                                                                                                                                                                    Mitglieder hinzufügen    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogShowMembersComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogShowProfileComponent.html":{"url":"components/DialogShowProfileComponent.html","title":"component - DialogShowProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogShowProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/dialog-show-profile/dialog-show-profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog-show-profile\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatDialogModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./dialog-show-profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./dialog-show-profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                newDirectChannel\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                user\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeThread\n                            \n                            \n                                    Async\n                                createNewDirectChannel\n                            \n                            \n                                editCurrentUser\n                            \n                            \n                                isOwnProfile\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                openDirectChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, profileService: ProfileService, customDialogService: CustomDialogService, userService: UserService, channelService: ChannelFirebaseService, router: Router, threadService: ThreadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeThread\n                        \n                    \n                \n            \n            \n                \ncloseThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:90\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createNewDirectChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    createNewDirectChannel(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editCurrentUser\n                        \n                    \n                \n            \n            \n                \neditCurrentUser(button: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOwnProfile\n                        \n                    \n                \n            \n            \n                \nisOwnProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openDirectChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    openDirectChannel(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newDirectChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    name: 'Direct Channel',\n    description: '',\n    created_at: new Date().getTime(),\n    creator: '',\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.direct,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/dialog-show-profile/dialog-show-profile.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { ProfileService } from '../../services/profile.service';\nimport { DialogEditProfileComponent } from '../../shared/dialog-edit-profile/dialog-edit-profile.component';\nimport { CustomDialogService } from '../../services/custom-dialog.service';\nimport { UserService } from '../../firebase.service/user.service';\nimport { User } from '../../interfaces/user.interface';\nimport { ChannelFirebaseService } from '../../firebase.service/channelFirebase.service';\nimport { Channel } from '../../interfaces/channel.interface';\nimport { ChannelTypeEnum } from '../../shared/enums/channel-type.enum';\nimport { Router } from '@angular/router';\nimport { ThreadService } from '../../services/thread.service';\n\n@Component({\n  selector: 'app-dialog-show-profile',\n  standalone: true,\n  imports: [CommonModule, MatDialogModule],\n  templateUrl: './dialog-show-profile.component.html',\n  styleUrl: './dialog-show-profile.component.scss',\n})\nexport class DialogShowProfileComponent implements OnInit {\n  user: User | null = null;\n  newDirectChannel : Channel = {\n    id: '',\n    name: 'Direct Channel',\n    description: '',\n    created_at: new Date().getTime(),\n    creator: '',\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.direct,\n  }\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private profileService: ProfileService,\n    private customDialogService: CustomDialogService,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    private router : Router,\n    public threadService : ThreadService,\n  ) {}\n\n\n  ngOnInit(): void {\n    const userId = this.profileService.getViewingUserId();\n    if (userId) {\n      this.user = this.userService.getUser(userId);\n    }\n  }\n\n\n  isOwnProfile(): boolean {\n    return this.profileService.getOwnProfileStatus();\n  }\n\n\n  editCurrentUser(button: HTMLElement): void {\n    const component = DialogEditProfileComponent;\n    let userHeadButton = document.getElementById('userHead');\n    if(userHeadButton) {this.customDialogService.openDialogAbsolute({button : userHeadButton, component, \n        position : 'right', mobilePosition: 'mid', maxWidth: '500px'});}\n    else {this.customDialogService.openDialog(component)};\n    this.dialogRef.close();\n  }\n\n\n  async openDirectChannel(user_id: string): Promise {\n    let channel_id = this.channelService.getDirectChannelId(this.userService.currentUser.id, user_id);\n    if (channel_id != '') {\n      this.router.navigateByUrl('/main-page/' + channel_id);\n    } else {\n      channel_id = await this.createNewDirectChannel(user_id);\n      this.router.navigateByUrl('/main-page/' + channel_id);\n    }\n    this.closeThread();\n    this.dialogRef.close();\n  }\n\n\n  async createNewDirectChannel(user_id : string) {\n    this.newDirectChannel.creator = this.userService.currentUser.id;\n    this.newDirectChannel.created_at = new Date().getTime();\n    this.newDirectChannel.members = [this.userService.currentUser.id, user_id];\n    return await this.channelService.addChannel(this.newDirectChannel);\n  }\n  \n\n  closeThread() {\n    this.userService.saveLastThread(this.userService.currentUser.id, '');\n    this.threadService.closeThread();\n  }\n}\n\n    \n\n    \n        \n\n    \n        Profil\n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n\n    \n        \n    \n\n    \n        \n            {{ isOwnProfile() ? userService.currentUser.name : user?.name }}\n            \n            @if (isOwnProfile()) {\n            Bearbeiten\n            \n            \n            }\n        \n\n        \n            \n            \n                {{ (userService.currentUser.id === user?.id || user?.logged_in) ? 'Aktiv' : 'Offline' }}\n        \n    \n\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n            E-Mail-Adresse\n        \n        {{ isOwnProfile() ? userService.currentUser.email : user?.email }}\n    \n\n    \n    @if (!isOwnProfile()) {\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n            Nachricht\n        \n    \n    }\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Profil                                                                                                                                                                                            {{ isOwnProfile() ? userService.currentUser.name : user?.name }}                        @if (isOwnProfile()) {            Bearbeiten                                    }                                                        {{ (userService.currentUser.id === user?.id || user?.logged_in) ? \\'Aktiv\\' : \\'Offline\\' }}                                                                                                                                                                    E-Mail-Adresse                {{ isOwnProfile() ? userService.currentUser.email : user?.email }}            @if (!isOwnProfile()) {                                                                                                                                                        Nachricht                }'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogShowProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EmailSnackbarComponent.html":{"url":"components/EmailSnackbarComponent.html","title":"component - EmailSnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EmailSnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/popups/email-snackbar/email-snackbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-email-snackbar\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./email-snackbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./email-snackbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                snackBarRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        snackBarRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBarRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/popups/email-snackbar/email-snackbar.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSnackBarRef } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-email-snackbar',\n  standalone: true,\n  imports: [],\n  templateUrl: './email-snackbar.component.html',\n  styleUrl: './email-snackbar.component.scss'\n})\nexport class EmailSnackbarComponent {\n  snackBarRef = inject(MatSnackBarRef);\n}\n\n    \n\n    \n        \n    \n    E-Mail gesendet\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        E-Mail gesendet'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'EmailSnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/header/header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToSignin\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/header/header.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToSignin\n                        \n                    \n                \n            \n            \n                \ngoToSignin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/header/header.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hideElement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/header/header.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './header.component.html',\n  styleUrl: './header.component.scss'\n})\nexport class HeaderComponent {\n  hideElement = false;\n\n  \n  constructor(\n    private router: Router\n  ) { \n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.hideElement = this.router.url !== '/login-page/login';\n      }\n    });\n  }\n\n\n  goToSignin() {\n    this.router.navigate(['/login-page/signin']);\n  }\n}\n\n    \n\n    \n        \n        \n            \n            \n                DABubble\n            \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                DABubble                    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImprintComponent.html":{"url":"components/ImprintComponent.html","title":"component - ImprintComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ImprintComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/imprint/imprint.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-imprint\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                HeaderComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./imprint.component.html\n            \n\n\n\n            \n                styleUrl\n                ./imprint.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/imprint/imprint.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/imprint/imprint.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HeaderComponent } from '../header/header.component';\n\n@Component({\n  selector: 'app-imprint',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  templateUrl: './imprint.component.html',\n  styleUrl: './imprint.component.scss'\n})\nexport class ImprintComponent {\n\n  constructor(private router: Router) { }\n\n  \n  goBack(){\n    this.router.navigate(['/login-page/login']);\n  }\n}\n\n    \n\n    \n        \n\n    \n    Impressum\n    \n        Bari Sopa\n        Ricardo Geada\n        Guiseppe Cino\n        Mesut Özertürk [Mentor]\n    \n    \n        PLZ und Stadt\n    \n    Contact\n    Email: EMAILADRESSE\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Impressum            Bari Sopa        Ricardo Geada        Guiseppe Cino        Mesut Özertürk [Mentor]                PLZ und Stadt        Contact    Email: EMAILADRESSE'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'ImprintComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogOutDialogComponent.html":{"url":"components/LogOutDialogComponent.html","title":"component - LogOutDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogOutDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-log-out-dialog\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                OpenProfileDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./log-out-dialog.component.html\n            \n\n\n\n            \n                styleUrl\n                ./log-out-dialog.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isMobile\n                            \n                            \n                                logOut\n                            \n                            \n                                openCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, userAuth: UserAuthService, router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n            \n                \nisMobile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openCurrentUser\n                        \n                    \n                \n            \n            \n                \nopenCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { UserAuthService } from '../../../firebase.service/user.auth.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../../../firebase.service/user.service';\nimport { OpenProfileDirective } from '../../../shared/directives/open-profile.directive';\n\n@Component({\n  selector: 'app-log-out-dialog',\n  standalone: true,\n  imports: [CommonModule, OpenProfileDirective],\n  templateUrl: './log-out-dialog.component.html',\n  styleUrl: './log-out-dialog.component.scss',\n})\nexport class LogOutDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    private userAuth: UserAuthService,\n    private router: Router,\n    public userService: UserService\n  ) {}\n\n\n  openCurrentUser(): void {\n    this.dialogRef.close();\n  }\n\n\n  isMobile() {\n    return window.innerWidth  {\n      this.router.navigate(['/login-page']);\n      localStorage.removeItem('currentUser');\n      this.dialogRef.close();\n      this.userService.updateOnlineStatus(this.userService.currentUser.id, false);\n    });\n  }\n}\n\n    \n\n    \n        \n    \n        @if(isMobile()){}\n        @if (userService.currentUser.email == 'guest') {\n         @if (isMobile()){}Logout\n        }\n        @if (userService.currentUser.email != 'guest'){\n            @if(isMobile()){} Profil\n        @if (isMobile()){}Logout\n        }\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            @if(isMobile()){}        @if (userService.currentUser.email == \\'guest\\') {         @if (isMobile()){}Logout        }        @if (userService.currentUser.email != \\'guest\\'){            @if(isMobile()){} Profil        @if (isMobile()){}Logout        }    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogOutDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterLink\n                            RouterModule\n                                ResetPasswordComponent\n                            MatProgressBarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                firestore\n                            \n                            \n                                iconSrc\n                            \n                            \n                                isLoading\n                            \n                            \n                                loginEmail\n                            \n                            \n                                loginPassword\n                            \n                            \n                                oobCode\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeIcon\n                            \n                            \n                                createUserObject\n                            \n                            \n                                loadUserData\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                loginAsGuest\n                            \n                            \n                                    Async\n                                loginWithGoogle\n                            \n                            \n                                navigateToMainPage\n                            \n                            \n                                ngonInit\n                            \n                            \n                                setGoogleUser\n                            \n                            \n                                updateLoggedInUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userAuth: UserAuthService, userService: UserService, router: Router, channelService: ChannelFirebaseService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeIcon\n                        \n                    \n                \n            \n            \n                \nchangeIcon(focus: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                focus\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createUserObject\n                        \n                    \n                \n            \n            \n                \ncreateUserObject(user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { name: any; email: any; profile_img: any; id: any; last_channel: any; last_thread: any; logged_in: boolean; is_typing: boolean; password: string; toJSON(): { name: any; email: any; profile_img: any; id: any; ... 4 more ...; password: any; }; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserData\n                        \n                    \n                \n            \n            \n                \nloadUserData(loginEmail: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginEmail\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loginAsGuest\n                        \n                    \n                \n            \n            \n                \n                        \n                    loginAsGuest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loginWithGoogle\n                        \n                    \n                \n            \n            \n                \n                        \n                    loginWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateToMainPage\n                        \n                    \n                \n            \n            \n                \nnavigateToMainPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:92\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngonInit\n                        \n                    \n                \n            \n            \n                \nngonInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setGoogleUser\n                        \n                    \n                \n            \n            \n                \nsetGoogleUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { name: any; email: any; profile_img: any; id: any; last_channel: any; last_thread: any; logged_in: boolean; is_typing: boolean; password: string; toJSON(): { name: any; email: any; profile_img: any; id: any; ... 4 more ...; password: any; }; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLoggedInUser\n                        \n                    \n                \n            \n            \n                \nupdateLoggedInUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login/login.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconSrc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/img/mail.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oobCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login/login.component.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ActivatedRoute, Router, RouterLink, RouterModule } from '@angular/router';\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component';\nimport { UserAuthService } from '../../firebase.service/user.auth.service';\nimport { Firestore } from '@angular/fire/firestore';\nimport { UserService } from '../../firebase.service/user.service';\nimport { ChannelFirebaseService } from '../../firebase.service/channelFirebase.service';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterLink, RouterModule, ResetPasswordComponent,\n    MatProgressBarModule\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})\nexport class LoginComponent {\n  firestore: Firestore = inject(Firestore);\n  error = false;\n  loginEmail: string = '';\n  loginPassword: string = '';\n  isLoading = false;\n  iconSrc = '/assets/img/mail.png';\n  oobCode: string = '';\n\n  constructor(private userAuth: UserAuthService, \n    private userService: UserService,\n    private router: Router, \n    private channelService: ChannelFirebaseService,\n    public route: ActivatedRoute\n  ) { }\n\n\n  ngonInit() {\n    this.error = false;\n  }\n\n\n  async login() {\n    this.isLoading = true;\n    this.userAuth.loginUser(this.loginEmail, this.loginPassword)\n      .then(() => {\n        return Promise.all([this.loadUserData(this.loginEmail)]);\n      })\n      .then(() => {\n        this.updateLoggedInUser();\n      })\n      .catch((error) => {\n        this.error = true;\n        this.isLoading = false;\n      });\n  }\n\n\n  updateLoggedInUser() {\n    this.error = false;\n    this.isLoading = false;\n    this.userService.updateOnlineStatus(this.userService.currentUser.id, true);\n    localStorage.setItem('currentUser', JSON.stringify(this.userService.currentUser));\n    this.navigateToMainPage();\n  }\n\n\n  loadUserData(loginEmail: string) {\n    this.error = false;\n    this.userService.getUsers();\n    this.userService.getCurrentUser(loginEmail);\n    this.channelService.getChannelsForCurrentUser();\n  }\n\n\n  async loginWithGoogle() {\n    await this.userAuth.loginWithGoogle();\n    this.isLoading = true;\n    let user = this.setGoogleUser();\n    let googleUserId = this.userService.allUsers.find(user => user.email === this.userAuth.googleEmail)?.id;\n    if (!googleUserId) {\n      await this.userService.addUser(user);\n    }\n    await Promise.all([\n      this.loadUserData(this.userAuth.googleEmail),\n    ]).then(() => {\n      this.updateLoggedInUser();\n    });\n  }\n\n\n  navigateToMainPage() {\n    this.router.navigate(['/main-page']);\n  }\n\n\n  setGoogleUser() {\n    let user = this.userService.allUsers.find(user => user.email === this.userAuth.googleEmail);\n    return this.createUserObject(user);\n  }\n\n\n  createUserObject(user: any) {\n    return {\n      name: this.userAuth.googleName,\n      email: this.userAuth.googleEmail,\n      profile_img: this.userAuth.googleProfileImg,\n      id: user.id,\n      last_channel: user.last_channel || '',\n      last_thread: user.last_thread || '',\n      logged_in: true,\n      is_typing: false,\n      password: '',\n      toJSON() {\n        return {\n          name: this.name,\n          email: this.email,\n          profile_img: this.profile_img,\n          id: this.id,\n          last_channel: this.last_channel,\n          last_thread: this.last_thread,\n          logged_in: this.logged_in,\n          is_typing: this.is_typing,\n          password: this.password\n        };\n      }\n    };\n  }\n\n\n  async loginAsGuest() {\n    this.isLoading = true;\n    this.error = false;\n    await this.userAuth.guestLogin();\n    await Promise.all([\n      this.loadUserData('guest'),\n    ]).then(() => {\n      this.updateLoggedInUser();\n    });\n  }\n\n\n  changeIcon(focus: boolean) {\n    this.iconSrc = focus ? '/assets/img/mail_b.png' : '/assets/img/mail.png';\n  }\n}\n\n    \n\n    \n        \n    @if (isLoading) {}\n        \n    Anmeldung\n\n    Wir empfehlen dir, die E-Mail-Adresse zu nutzen, die du bei der Arbeit verwendest.\n\n    \n        \n            \n            \n            *Diese E-Mail-Adresse ist leider ungültig.\n        \n\n        \n            \n            Falsches Passwort. Bitte noch einmal versuchen.\n        \n        \n    \n    \n\n    Passwort vergessen?\n\n    ODER\n\n    Anmelden mit Google\n\n    \n        Anmelden\n\n        Gäste-Login\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    @if (isLoading) {}            Anmeldung    Wir empfehlen dir, die E-Mail-Adresse zu nutzen, die du bei der Arbeit verwendest.                                                *Diese E-Mail-Adresse ist leider ungültig.                                        Falsches Passwort. Bitte noch einmal versuchen.                            Passwort vergessen?    ODER    Anmelden mit Google            Anmelden        Gäste-Login    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPageComponent.html":{"url":"components/LoginPageComponent.html","title":"component - LoginPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/login-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                                LoginComponent\n                                SignInComponent\n                                ResetPasswordComponent\n                                AvatarComponent\n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideElement\n                            \n                            \n                                hideExtras\n                            \n                            \n                                oobCode\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToSignin\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userAuth: UserAuthService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/login-page.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToSignin\n                        \n                    \n                \n            \n            \n                \ngoToSignin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetUser\n                        \n                    \n                \n            \n            \n                \nresetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/login-page.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        hideElement\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideExtras\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        oobCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        route\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ActivatedRoute\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/login-page.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignInComponent } from './sign-in/sign-in.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\nimport { AvatarComponent } from './avatar/avatar.component';\nimport { CommonModule } from '@angular/common';\nimport { UserAuthService } from '../firebase.service/user.auth.service';\n\n@Component({\n  selector: 'app-login-page',\n  standalone: true,\n  imports: [RouterModule, LoginComponent, SignInComponent, ResetPasswordComponent,\n    AvatarComponent, CommonModule],\n  templateUrl: './login-page.component.html',\n  styleUrl: './login-page.component.scss'\n})\nexport class LoginPageComponent {\n  hideElement = false;\n  hideExtras = false;\n  oobCode: string = '';\n\n  constructor(private router: Router, private userAuth: UserAuthService, public route: ActivatedRoute) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.hideElement = this.router.url !== '/login-page/login';\n      }\n    });\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.hideExtras = this.router.url == '/login-page/imprint' || this.router.url == '/login-page/privacy-policy';\n      }\n    });\n    this.resetUser();\n  }\n\n\n  goToSignin() {\n    this.router.navigate(['/login-page/signin']);\n  }\n\n\n  ngOnInit(): void {\n    if (this.router.url.includes('/login-page/email-reset')) {\n      this.oobCode = this.route.snapshot.queryParams['oobCode'];\n      if (this.oobCode) {\n        this.userAuth.handleActionCode(this.oobCode);\n      }\n    } else {\n      this.router.navigate(['login-page/login']);\n    }\n  }\n\n\n  resetUser(): void {\n    if (typeof window !== 'undefined' && window.localStorage) {\n      localStorage.removeItem('currentUser');\n    }\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n            \n                DABubble\n            \n        \n    \n\n    \n\n    \n        Neu bei DABubble?\n        Konto erstellen\n    \n\n    \n        Impressum\n        Datenschutz\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            DABubble                                        Neu bei DABubble?        Konto erstellen                Impressum        Datenschutz    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginSnackbarComponent.html":{"url":"components/LoginSnackbarComponent.html","title":"component - LoginSnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginSnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/popups/login-snackbar/login-snackbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-snackbar\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./login-snackbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login-snackbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                snackBarRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        snackBarRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBarRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/popups/login-snackbar/login-snackbar.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSnackBarRef } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-login-snackbar',\n  standalone: true,\n  imports: [],\n  templateUrl: './login-snackbar.component.html',\n  styleUrl: './login-snackbar.component.scss'\n})\nexport class LoginSnackbarComponent {\n  snackBarRef = inject(MatSnackBarRef);\n}\n\n    \n\n    \n        \n    Anmelden\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Anmelden'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginSnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainHeaderComponent.html":{"url":"components/MainHeaderComponent.html","title":"component - MainHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-header/main-header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                SearchBarComponent\n                            MatCardModule\n                                MainMenuComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                anonymImg\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                isMenuOpen\n                            \n                            \n                                    Public\n                                mainPage\n                            \n                            \n                                serverName\n                            \n                            \n                                    Public\n                                sharedService\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToChannels\n                            \n                            \n                                hideMobileWorkspace\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                openLogOutDialog\n                            \n                            \n                                showMobileWorkspace\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(customDialogService: CustomDialogService, userService: UserService, channelService: ChannelFirebaseService, renderer: Renderer2, el: ElementRef, sharedService: SharedService, mainPage: MainPageComponent, threadService: ThreadService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-header/main-header.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainPage\n                                                  \n                                                        \n                                                                        MainPageComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backToChannels\n                        \n                    \n                \n            \n            \n                \nbackToChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/main-header.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hideMobileWorkspace\n                        \n                    \n                \n            \n            \n                \nhideMobileWorkspace()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/main-header.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/main-header.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openLogOutDialog\n                        \n                    \n                \n            \n            \n                \nopenLogOutDialog(button: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/main-header.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMobileWorkspace\n                        \n                    \n                \n            \n            \n                \nshowMobileWorkspace()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-header/main-header.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        anonymImg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/img/person.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mainPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MainPageComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : 'Dabbuble'\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sharedService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SharedService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-header/main-header.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Renderer2 } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { SearchBarComponent } from './search-bar/search-bar.component';\nimport { LogOutDialogComponent } from './log-out-dialog/log-out-dialog.component';\nimport { CustomDialogService } from '../../services/custom-dialog.service';\nimport { UserService } from '../../firebase.service/user.service';\nimport { MainMenuComponent } from '../main-menu/main-menu.component';\nimport { ChannelFirebaseService } from '../../firebase.service/channelFirebase.service';\nimport { SharedService } from '../../services/shared.service';\nimport { MainPageComponent } from '../main-page.component';\nimport { ThreadService } from '../../services/thread.service';\n@Component({\n  selector: 'app-main-header',\n  standalone: true,\n  imports: [CommonModule, SearchBarComponent, MatCardModule, MainMenuComponent],\n  templateUrl: './main-header.component.html',\n  styleUrl: './main-header.component.scss',\n})\nexport class MainHeaderComponent {\n  anonymImg = 'assets/img/person.png';\n  serverName: any = 'Dabbuble';\n  isMenuOpen: boolean = true;\n\n  constructor(\n    private customDialogService: CustomDialogService,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    private renderer: Renderer2, \n    private el: ElementRef,\n    public sharedService: SharedService,\n    public mainPage: MainPageComponent,\n    public threadService: ThreadService) {\n  }\n\n\n  ngAfterViewInit() {\n    this.showMobileWorkspace();\n    this.hideMobileWorkspace();\n  }\n\n\n  showMobileWorkspace(){\n    this.sharedService.showMobileDiv$.subscribe(() => {\n      const mobileDiv = this.el.nativeElement.querySelector('.mobileDiv');\n      this.renderer.addClass(mobileDiv, 'show');\n    });\n  }\n\n\n  hideMobileWorkspace(){\n    this.sharedService.backToChannels$.subscribe(() => {\n      const mobileDiv = this.el.nativeElement.querySelector('.mobileDiv');\n      this.renderer.removeClass(mobileDiv, 'show');\n    });\n  }\n\n\n  backToChannels() {\n    this.sharedService.backToChannels();\n    this.threadService.closeThread();\n  }\n\n\n  openLogOutDialog(button: HTMLElement) {\n    const component = LogOutDialogComponent;\n    this.customDialogService.openDialogAbsolute({button, component, position : 'right', mobilePosition : 'bottom', maxWidth : '282px'});\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n        DABubble\n    \n    \n    \n        \n            \n        \n        \n        Devspace\n    \n\n    \n\n    \n        {{userService.currentUser?.name}}\n        \n            \n            \n        \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    DABubble                                                        Devspace                    {{userService.currentUser?.name}}                                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuChannelsComponent.html":{"url":"components/MainMenuChannelsComponent.html","title":"component - MainMenuChannelsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuChannelsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu-channels\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatCardModule\n                            MatExpansionModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-menu-channels.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-menu-channels.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeChannelId\n                            \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                isExpanded\n                            \n                            \n                                    Public\n                                mainPage\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                sharedService\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                mobileChange\n                            \n                            \n                                openAddChannelDialog\n                            \n                            \n                                selectChannel\n                            \n                            \n                                toggleExpansion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(customDialogService: CustomDialogService, channelService: ChannelFirebaseService, messageService: MessageService, userService: UserService, router: Router, threadService: ThreadService, mainPage: MainPageComponent, sharedService: SharedService, stateService: StateManagementService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainPage\n                                                  \n                                                        \n                                                                        MainPageComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        mobileChange\n                        \n                    \n                \n            \n            \n                \nmobileChange()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openAddChannelDialog\n                        \n                    \n                \n            \n            \n                \nopenAddChannelDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectChannel\n                        \n                    \n                \n            \n            \n                \nselectChannel(channelId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExpansion\n                        \n                    \n                \n            \n            \n                \ntoggleExpansion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeChannelId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpanded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mainPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MainPageComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sharedService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SharedService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { AddChannelCardComponent } from './add-channel-card/add-channel-card.component';\nimport { CustomDialogService } from '../../../services/custom-dialog.service';\nimport { ChannelFirebaseService } from '../../../firebase.service/channelFirebase.service';\nimport { MessageService } from '../../../firebase.service/message.service';\nimport { UserService } from '../../../firebase.service/user.service';\nimport { Router, RouterModule } from '@angular/router';\nimport { ThreadService } from '../../../services/thread.service';\nimport { MainPageComponent } from '../../main-page.component';\nimport { SharedService } from '../../../services/shared.service';\nimport { StateManagementService } from '../../../services/state-management.service';\n\n@Component({\n  selector: 'app-main-menu-channels',\n  standalone: true,\n  imports: [CommonModule, MatCardModule, MatExpansionModule, RouterModule],\n  templateUrl: './main-menu-channels.component.html',\n  styleUrl: './main-menu-channels.component.scss',\n})\nexport class MainMenuChannelsComponent {\n  isExpanded: boolean = true;\n  activeChannelId: string = '';\n\n  constructor(\n    private customDialogService: CustomDialogService,\n    public channelService: ChannelFirebaseService,\n    public messageService: MessageService,\n    public userService: UserService,\n    public router: Router,\n    public threadService: ThreadService,\n    public mainPage: MainPageComponent,\n    public sharedService: SharedService,\n    private stateService: StateManagementService\n  ) {}\n\n\n  selectChannel(channelId: string) {\n    this.stateService.setSelectedChannelId(channelId);\n    this.userService.saveLastThread(this.userService.currentUser.id, '');\n    this.threadService.closeThread();\n  }\n\n\n  mobileChange() {\n    this.mainPage.toggleMenu();\n    this.sharedService.showMobileDiv();\n  }\n\n\n  toggleExpansion(): void {\n    this.isExpanded = !this.isExpanded;\n  }\n\n\n  openAddChannelDialog(): void {\n    const component = AddChannelCardComponent;\n    this.customDialogService.openDialog(component);\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n                Channels\n            \n        \n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n                \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        @if (isExpanded) {\n        @for(channel of channelService.channels; track channel.id) {\n        @if (channel.channel_type === 'main') {\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n                {{channel.name}}\n            \n        \n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n                {{channel.name}}\n            \n        \n        }\n        }\n\n        \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n                Channel hinzufügen\n            \n        \n        }\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                        Channels                                                                                                                                                                                                                                                                                                                                            @if (isExpanded) {        @for(channel of channelService.channels; track channel.id) {        @if (channel.channel_type === \\'main\\') {                                                                                                                                                                                                    {{channel.name}}                                                                                                                                                                                                                        {{channel.name}}                            }        }                                                                                                                                                                                                    Channel hinzufügen                            }    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuChannelsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuComponent.html":{"url":"components/MainMenuComponent.html","title":"component - MainMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-menu/main-menu.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatCardModule\n                                MainMenuHeaderComponent\n                                MainMenuDmComponent\n                                MainMenuChannelsComponent\n                                SearchBarComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-menu.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-menu.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                isMenuOpen\n                            \n                            \n                                    Public\n                                mainPage\n                            \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                sharedService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getChannelData\n                            \n                            \n                                openNewChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelFirebaseService, sharedService: SharedService, userService: UserService, router: Router, mainPage: MainPageComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-menu/main-menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainPage\n                                                  \n                                                        \n                                                                        MainPageComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getChannelData\n                        \n                    \n                \n            \n            \n                \ngetChannelData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu.component.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { id: string; name: string; description: string; created_at: number; creator: any; members: {}; active_members: {}; channel_type: any; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openNewChannel\n                        \n                    \n                \n            \n            \n                \nopenNewChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : this.sharedService.isMenuOpen\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mainPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MainPageComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sharedService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SharedService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu.component.ts:36\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { MainMenuHeaderComponent } from './main-menu-header/main-menu-header.component';\nimport { MainMenuDmComponent } from './main-menu-dm/main-menu-dm.component';\nimport { ChannelFirebaseService } from '../../firebase.service/channelFirebase.service';\nimport { SharedService } from '../../services/shared.service';\nimport { MainMenuChannelsComponent } from './main-menu-channels/main-menu-channels.component';\nimport { UserService } from '../../firebase.service/user.service';\nimport { Router } from '@angular/router';\nimport { Channel } from '../../interfaces/channel.interface';\nimport { ChannelTypeEnum } from '../../shared/enums/channel-type.enum';\nimport { MainPageComponent } from '../main-page.component';\nimport { SearchBarComponent } from '../main-header/search-bar/search-bar.component';\n\n@Component({\n  selector: 'app-main-menu',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatCardModule,\n    MainMenuHeaderComponent,\n    MainMenuDmComponent,\n    MainMenuChannelsComponent,\n    SearchBarComponent\n  ],\n  templateUrl: './main-menu.component.html',\n  styleUrl: './main-menu.component.scss',\n})\nexport class MainMenuComponent{\n  isMenuOpen: boolean = this.sharedService.isMenuOpen;\n\n  constructor(\n    public channelService: ChannelFirebaseService, \n    public sharedService: SharedService,\n    public userService: UserService,\n    public router: Router,\n    public mainPage: MainPageComponent\n  ) { }\n    \n\n  openNewChannel(){\n    const newChannel: Channel = this.getChannelData();\n    this.sharedService.backToChannels();\n    this.sharedService.showMobileDiv(); \n    this.channelService.addChannel(newChannel).then(channelId => {\n      newChannel.id = channelId;\n      this.userService.updateLastChannel(this.userService.currentUser.id, channelId); \n      localStorage.setItem('currentUser', JSON.stringify(this.userService.currentUser));\n      this.router.navigate(['/main-page/', channelId]); \n    });\n  }\n\n\n  getChannelData(){\n    return {\n      id: '',\n      name: '',\n      description: '',\n      created_at: 0,\n      creator: this.userService.currentUser.id,\n      members: [this.userService.currentUser.id],\n      active_members: [this.userService.currentUser.id],\n      channel_type: ChannelTypeEnum.new,\n  };\n  }\n}\n    \n\n    \n        \n    \n    \n    \n        \n        \n    \n    \n\n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuDmComponent.html":{"url":"components/MainMenuDmComponent.html","title":"component - MainMenuDmComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuDmComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu-dm\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-menu-dm.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-menu-dm.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                isExpanded\n                            \n                            \n                                    Public\n                                mainpage\n                            \n                            \n                                newDirectChannel\n                            \n                            \n                                profileImg\n                            \n                            \n                                selectedUserId\n                            \n                            \n                                    Public\n                                sharedService\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                users\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeThread\n                            \n                            \n                                    Async\n                                createNewDirectChannel\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                openChannel\n                            \n                            \n                                    Async\n                                openDirectChannel\n                            \n                            \n                                    Async\n                                openDirectChannelMobile\n                            \n                            \n                                toggleExpansion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, channelService: ChannelFirebaseService, router: Router, threadService: ThreadService, stateService: StateManagementService, mainpage: MainPageComponent, sharedService: SharedService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stateService\n                                                  \n                                                        \n                                                                        StateManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainpage\n                                                  \n                                                        \n                                                                        MainPageComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeThread\n                        \n                    \n                \n            \n            \n                \ncloseThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:97\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createNewDirectChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    createNewDirectChannel(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:89\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    openChannel(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openDirectChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    openDirectChannel(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openDirectChannelMobile\n                        \n                    \n                \n            \n            \n                \n                        \n                    openDirectChannelMobile(user_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExpansion\n                        \n                    \n                \n            \n            \n                \ntoggleExpansion()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpanded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mainpage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MainPageComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newDirectChannel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: '',\n    name: 'Direct Channel',\n    description: '',\n    created_at: new Date().getTime(),\n    creator: '',\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.direct,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileImg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.userService.currentUser?.profile_img\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sharedService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SharedService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../../firebase.service/user.service';\nimport { User } from '../../../interfaces/user.interface';\nimport { ChannelFirebaseService } from '../../../firebase.service/channelFirebase.service';\nimport { Router } from '@angular/router';\nimport { Channel } from '../../../interfaces/channel.interface';\nimport { ChannelTypeEnum } from '../../../shared/enums/channel-type.enum';\nimport { ThreadService } from '../../../services/thread.service';\nimport { StateManagementService } from '../../../services/state-management.service';\nimport { MainPageComponent } from '../../main-page.component';\nimport { SharedService } from '../../../services/shared.service';\n\n\n@Component({\n  selector: 'app-main-menu-dm',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './main-menu-dm.component.html',\n  styleUrl: './main-menu-dm.component.scss',\n})\nexport class MainMenuDmComponent implements OnInit {\n  isExpanded: boolean = true;\n  users: User[] = [];\n  selectedUserId: string = '';\n  profileImg = this.userService.currentUser?.profile_img;\n  newDirectChannel : Channel = {\n    id: '',\n    name: 'Direct Channel',\n    description: '',\n    created_at: new Date().getTime(),\n    creator: '',\n    members: [],\n    active_members: [],\n    channel_type: ChannelTypeEnum.direct,\n  }\n\n  constructor(\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    private router : Router,\n    public threadService : ThreadService,\n    private stateService: StateManagementService,\n    public mainpage: MainPageComponent,\n    public sharedService: SharedService\n  ) {}\n\n\n  ngOnInit(): void {\n    this.users = this.userService.allUsers;\n    this.stateService.getSelectedUserId().subscribe(id => {\n      this.selectedUserId = id ? id : '';\n    });\n  }\n\n\n  toggleExpansion(): void {\n    this.isExpanded = !this.isExpanded;\n  }\n\n\n  async openDirectChannel(user_id: string): Promise {\n    this.openChannel(user_id);\n    this.closeThread();\n    this.stateService.setSelectedUserId(user_id);\n  }\n\n\n  async openDirectChannelMobile(user_id: string): Promise {\n    this.mainpage.toggleMenu();\n    this.sharedService.showMobileDiv();\n    this.openChannel(user_id);\n    this.closeThread();\n    this.stateService.setSelectedUserId(user_id);\n  }\n\n\n  async openChannel(user_id: string): Promise {\n    let channel_id = this.channelService.getDirectChannelId(this.userService.currentUser.id, user_id);\n    if (channel_id != '') {\n      this.router.navigateByUrl('/main-page/' + channel_id);\n    } else {\n      channel_id = await this.createNewDirectChannel(user_id);\n      this.router.navigateByUrl('/main-page/' + channel_id);\n    }\n  }\n\n\n  async createNewDirectChannel(user_id : string) {\n    this.newDirectChannel.creator = this.userService.currentUser.id;\n    this.newDirectChannel.created_at = new Date().getTime();\n    this.newDirectChannel.members = [this.userService.currentUser.id, user_id];\n    return await this.channelService.addChannel(this.newDirectChannel);\n  }\n\n\n  closeThread() {\n    this.userService.saveLastThread(this.userService.currentUser.id, '');\n    this.threadService.closeThread();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                \n                \n                    \n                \n            \n            \n                \n                    \n                        \n                    \n                    \n                        \n                    \n                \n                Direktnachrichten\n            \n        \n    \n    \n        \n            @if (isExpanded) {\n            \n            \n                \n                    \n                        \n                        \n\n                    \n                    \n                        {{ userService.currentUser?.name }} (Du)\n                    \n                \n            \n\n            \n            @for(user of userService.allUsers; track user?.id) {\n            @if(user?.id != userService.currentUser?.id ) {\n            \n                \n                    \n                        \n                        \n                    \n\n                    \n                        {{ user.name }}\n                    \n                \n            \n            }\n            }\n            }\n        \n        \n            @if (isExpanded) {\n            \n            \n                \n                    \n                        \n                        \n                    \n                    \n                        {{ userService.currentUser?.name }} (Du)\n                    \n                \n            \n\n            \n            @for(user of userService.allUsers; track user?.id) {\n            @if(user?.id != userService.currentUser?.id ) {\n            \n                \n                    \n                        \n                        \n                    \n\n                    \n                        {{ user.name }}\n                    \n                \n            \n            }\n            }\n\n            }\n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                                                                                        Direktnachrichten                                                @if (isExpanded) {                                                                                                                                                                            {{ userService.currentUser?.name }} (Du)                                                                        @for(user of userService.allUsers; track user?.id) {            @if(user?.id != userService.currentUser?.id ) {                                                                                                                                                                {{ user.name }}                                                            }            }            }                            @if (isExpanded) {                                                                                                                                                                            {{ userService.currentUser?.name }} (Du)                                                                        @for(user of userService.allUsers; track user?.id) {            @if(user?.id != userService.currentUser?.id ) {                                                                                                                                                                {{ user.name }}                                                            }            }            }            '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuDmComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainMenuHeaderComponent.html":{"url":"components/MainMenuHeaderComponent.html","title":"component - MainMenuHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainMenuHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-menu/main-menu-header/main-menu-header.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-menu-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            MatCardModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-menu-header.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-menu-header.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                mainMenu\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                openNewChannel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, mainMenu: MainMenuComponent)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-menu/main-menu-header/main-menu-header.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mainMenu\n                                                  \n                                                        \n                                                                        MainMenuComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        openNewChannel\n                        \n                    \n                \n            \n            \n                \nopenNewChannel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-menu/main-menu-header/main-menu-header.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mainMenu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MainMenuComponent\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-header/main-menu-header.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-menu/main-menu-header/main-menu-header.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\nimport { Router, RouterModule} from '@angular/router';\nimport { MainMenuComponent } from '../main-menu.component';\n\n\n@Component({\n  selector: 'app-main-menu-header',\n  standalone: true,\n  imports: [CommonModule, MatCardModule, RouterModule],\n  templateUrl: './main-menu-header.component.html',\n  styleUrl: './main-menu-header.component.scss',\n})\nexport class MainMenuHeaderComponent {\n\n  constructor( public router: Router,\n    public mainMenu: MainMenuComponent,\n  ) {}\n\n  \n  openNewChannel() {\n    this.mainMenu.openNewChannel();\n  }\n}\n\n    \n\n    \n        \n    \n        \n        Devspace\n    \n    \n        \n            \n                \n            \n            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Devspace                                                                                                            '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainMenuHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainPageComponent.html":{"url":"components/MainPageComponent.html","title":"component - MainPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MainPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/main-page.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            MatCardModule\n                                ChannelComponent\n                                MainMenuComponent\n                                MainHeaderComponent\n                            RouterModule\n                            CommonModule\n                                ThreadComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./main-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./main-page.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                sharedService\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                toggleMenu\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, channelService: ChannelFirebaseService, threadService: ThreadService, sharedService: SharedService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/main-page.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:51\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: literal type)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/main-page.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sharedService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SharedService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/main-page.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { ChannelComponent } from './channel/channel.component';\nimport { MainMenuComponent } from './main-menu/main-menu.component';\nimport { MainHeaderComponent } from './main-header/main-header.component';\nimport { ChannelFirebaseService } from '../firebase.service/channelFirebase.service';\nimport { UserService } from '../firebase.service/user.service';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ThreadComponent } from './thread/thread.component';\nimport { ThreadService } from '../services/thread.service';\nimport { SharedService } from '../services/shared.service';\n\n@Component({\n  selector: 'app-main-page',\n  standalone: true,\n  imports: [MatCardModule, ChannelComponent, MainMenuComponent, MainHeaderComponent, RouterModule, CommonModule, ThreadComponent],\n  templateUrl: './main-page.component.html',\n  styleUrl: './main-page.component.scss',\n})\n\nexport class MainPageComponent {\n\n  constructor(public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    public threadService: ThreadService,\n    public sharedService: SharedService) {\n    if (this.userService.currentUser) this.channelService.getChannelsForCurrentUser();\n  }\n\n\n  ngOnInit(): void {\n    this.sharedService.backToChannels$.subscribe(() => {\n      this.toggleMenu();\n    });\n    if (typeof window !== 'undefined' && window.innerWidth > 768 && window.innerWidth  768 && window.innerWidth  768 && this.sharedService.isMenuOpen) {\n        this.sharedService.isMenuOpen = false;\n        this.sharedService.showMobileDiv();\n      } if (event.target.innerWidth > 1200 && event.target.innerWidth  1200 && !this.sharedService.isMenuOpen) {\n          this.sharedService.isMenuOpen = true;\n          this.sharedService.showMobileDiv();\n        }\n      }\n    }\n  }\n}\n    \n\n    \n        \n  \n  \n    \n    \n      \n    \n    @if(threadService.threadOpen) {\n    \n    }\n  \n\n\n\n\n  \n    {{ sharedService.isMenuOpen ? 'Workspace-Menü schließen' : 'Workspace-Menü öffnen' }}\n\n    @if (!sharedService.isMenuOpen) {\n    \n      \n      \n      \n    \n    }\n\n    @if (sharedService.isMenuOpen) {\n    \n      \n      \n      \n    \n    }\n\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          @if(threadService.threadOpen) {        }        {{ sharedService.isMenuOpen ? \\'Workspace-Menü schließen\\' : \\'Workspace-Menü öffnen\\' }}    @if (!sharedService.isMenuOpen) {                              }    @if (sharedService.isMenuOpen) {                              }  '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'MainPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/message.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            channel_id\n                                        \n                                \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            is_deleted\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            last_reply\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            modified_at\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            thread_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            total_replies\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        channel_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        channel_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        is_deleted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        is_deleted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last_reply\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_reply:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modified_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modified_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thread_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thread_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total_replies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total_replies:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Message {\n    id?: string,\n    user_id: string,\n    channel_id: string,\n    thread_id?: string,\n    message: {\n        text: string, \n        reactions?: string[],\n        attachements?: string[], \n    },\n    created_at: number,\n    modified_at?: number,\n    is_deleted: boolean,\n    total_replies?: number,\n    last_reply?: number,\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/firebase.service/message.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allMessages\n                            \n                            \n                                currentMessage\n                            \n                            \n                                firestore\n                            \n                            \n                                message\n                            \n                            \n                                messages\n                            \n                            \n                                    Private\n                                messageSource\n                            \n                            \n                                messagesThread\n                            \n                            \n                                unsubAllMessages\n                            \n                            \n                                unsubMessages\n                            \n                            \n                                unsubMessagesThread\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMessage\n                            \n                            \n                                changeMessage\n                            \n                            \n                                createElement\n                            \n                            \n                                deleteFile\n                            \n                            \n                                    Async\n                                downloadFile\n                            \n                            \n                                    Async\n                                getFileData\n                            \n                            \n                                getMessageRef\n                            \n                            \n                                getMessagesFromChannel\n                            \n                            \n                                getMessagesFromThread\n                            \n                            \n                                getMessagesRef\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                removeMessagesFromEmptyChannel\n                            \n                            \n                                    Async\n                                removeThreadMessagesFromChannel\n                            \n                            \n                                setMessage\n                            \n                            \n                                subAllMessages\n                            \n                            \n                                subMessages\n                            \n                            \n                                subMessagesThread\n                            \n                            \n                                    Async\n                                updateMessage\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/firebase.service/message.service.ts:51\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    addMessage(message: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeMessage\n                        \n                    \n                \n            \n            \n                \nchangeMessage(messageId: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messageId\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createElement\n                        \n                    \n                \n            \n            \n                \ncreateElement(blobUrl: string, metadata: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:215\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blobUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                metadata\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFile\n                        \n                    \n                \n            \n            \n                \ndeleteFile(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:227\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        downloadFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadFile(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:202\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFileData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFileData(path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:188\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessageRef\n                        \n                    \n                \n            \n            \n                \ngetMessageRef(message_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromChannel\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromChannel(channel_id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel_id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromThread\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromThread(thread_id: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                thread_id\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesRef\n                        \n                    \n                \n            \n            \n                \ngetMessagesRef()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:63\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeMessagesFromEmptyChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeMessagesFromEmptyChannel(channelId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:243\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        removeThreadMessagesFromChannel\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeThreadMessagesFromChannel(threadId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:234\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                threadId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMessage\n                        \n                    \n                \n            \n            \n                \nsetMessage(data: any, id?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Message\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subAllMessages\n                        \n                    \n                \n            \n            \n                \nsubAllMessages()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:149\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subMessages\n                        \n                    \n                \n            \n            \n                \nsubMessages(channel_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channel_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subMessagesThread\n                        \n                    \n                \n            \n            \n                \nsubMessagesThread(thread_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                thread_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateMessage(message: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:161\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(file: File, path: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/message.service.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                file\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                path\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allMessages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.messageSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message\n\n                    \n                \n                \n                    \n                        Default value : {\n    user_id: '',\n    channel_id: '',\n    thread_id: '',\n    message: {\n      text: '',\n      reactions: [],\n      attachements: [],\n    },\n    created_at: 0,\n    modified_at: 0,\n    is_deleted: false,\n    total_replies: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messageSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messagesThread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubAllMessages\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubMessages\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubMessagesThread\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/message.service.ts:50\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport {\n  Firestore,\n  collection,\n  onSnapshot,\n  addDoc,\n  doc,\n  updateDoc,\n  where,\n  query,\n  orderBy,\n  deleteDoc,\n  getDocs,\n} from '@angular/fire/firestore';\nimport { Message } from '../interfaces/message.interface';\nimport {\n  getStorage,\n  ref,\n  uploadBytesResumable,\n  getDownloadURL,\n} from 'firebase/storage';\nimport { deleteObject, getMetadata } from '@angular/fire/storage';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  private messageSource = new Subject();\n  currentMessage = this.messageSource.asObservable();\n  firestore: Firestore = inject(Firestore);\n  messages: Message[] = [];\n  allMessages: any[] = [];\n  messagesThread: Message[] = [];\n  message: Message = {\n    user_id: '',\n    channel_id: '',\n    thread_id: '',\n    message: {\n      text: '',\n      reactions: [],\n      attachements: [],\n    },\n    created_at: 0,\n    modified_at: 0,\n    is_deleted: false,\n    total_replies: 0,\n  };\n  unsubMessages = () => { };\n  unsubMessagesThread = () => { };\n  unsubAllMessages;\n\n  constructor() {\n    this.unsubAllMessages = this.subAllMessages();\n  }\n\n\n  changeMessage(messageId: any) {\n    this.messageSource.next(messageId);\n  }\n\n\n  ngOnDestroy() {\n    this.unsubMessages();\n    this.unsubMessagesThread();\n    this.unsubAllMessages();\n  }\n\n\n  getMessagesFromChannel(channel_id: any) {\n    this.unsubMessages = this.subMessages(channel_id);\n  }\n\n\n  getMessagesFromThread(thread_id: any) {\n    this.unsubMessagesThread = this.subMessagesThread(thread_id);\n  }\n\n\n  getMessagesRef() {\n    return collection(this.firestore, 'messages');\n  }\n\n\n  getMessageRef(message_id: string) {\n    return doc(collection(this.firestore, 'messages', message_id));\n  }\n\n\n  setMessage(data: any, id?: string): Message {\n    return {\n      id: id || '',\n      user_id: data.user_id || '',\n      channel_id: data.channel_id || '',\n      thread_id: data.thread_id || '',\n      message: {\n        text: data.message.text || '',\n        reactions: data.message.reactions || [],\n        attachements: data.message.attachements || [],\n      },\n      created_at: data.created_at || 0,\n      modified_at: data.modified_at || 0,\n      is_deleted: data.is_deleted || false,\n      total_replies: data.total_replies || 0,\n      last_reply: data.last_reply || 0,\n    };\n  }\n\n\n  /* CREATE */\n  async addMessage(message: Message) {\n    let ref = this.getMessagesRef();\n    const docRef = await addDoc(ref, message);\n    return docRef.id;\n  }\n\n\n  /* READ */\n  subMessages(channel_id: string) {\n    const q = query(\n      this.getMessagesRef(),\n      where('channel_id', '==', channel_id),\n      orderBy('created_at')\n    );\n    return onSnapshot(q, (messages) => {\n      this.messages = [];\n      messages.forEach((message) => {\n        this.messages.push(this.setMessage(message.data(), message.id));\n      });\n    });\n  }\n\n\n  subMessagesThread(thread_id: string) {\n    const q = query(\n      this.getMessagesRef(),\n      where('thread_id', '==', thread_id),\n      orderBy('created_at')\n    );\n    return onSnapshot(q, (messages) => {\n      this.messagesThread = [];\n      messages.forEach((message) => {\n        this.messagesThread.push(this.setMessage(message.data(), message.id));\n      });\n    });\n  }\n\n\n  subAllMessages() {\n    const q = query(this.getMessagesRef(), orderBy('created_at'));\n    return onSnapshot(q, (messages) => {\n      this.allMessages = [];\n      messages.forEach((message) => {\n        this.allMessages.push(this.setMessage(message.data(), message.id));\n      });\n    });\n  }\n\n\n  /* UPDATE */\n  async updateMessage(message: Message) {\n    if (message.id) {\n      let docRef = doc(this.getMessagesRef(), message.id);\n      await updateDoc(docRef, JSON.parse(JSON.stringify(message))).catch(\n        (err) => console.error(err)\n      );\n    }\n  }\n\n\n  /* STORAGE */\n  uploadFile(file: File, path: string): Promise {\n    return new Promise((resolve, reject) => {\n      const storage = getStorage();\n      const storageRef = ref(storage, path);\n      const uploadTask = uploadBytesResumable(storageRef, file);\n      uploadTask.on('state_changed', (snapshot) => { },\n        (error) => {\n          reject(error);\n        }, () => {\n          resolve();\n        }\n      );\n    });\n  }\n\n\n  async getFileData(path: string) {\n    const storage = getStorage();\n    const storageRef = ref(storage, path);\n    const url = await getDownloadURL(storageRef);\n    const metadata = await getMetadata(storageRef);\n    return {\n      path: path,\n      name: metadata.name,\n      type: metadata.contentType,\n      url: url,\n    };\n  }\n\n\n  async downloadFile(path: string) {\n    const storage = getStorage();\n    const storageRef = ref(storage, path);\n    const metadata = await getMetadata(storageRef);\n    const url = await getDownloadURL(storageRef);\n    const response = await fetch(url, { mode: 'cors' });\n    if (!response.ok) throw new Error('Netzwerkantwort war nicht ok.');\n    const blob = await response.blob();\n    const blobUrl = window.URL.createObjectURL(blob);\n    this.createElement(blobUrl, metadata);\n  }\n\n\n  createElement(blobUrl: string, metadata: any){\n    const a = document.createElement('a');\n    a.style.display = 'none';\n    a.href = blobUrl;\n    a.download = metadata.name;\n    document.body.appendChild(a);\n    a.click();\n    window.URL.revokeObjectURL(blobUrl);\n    document.body.removeChild(a);\n  }\n\n\n  deleteFile(path: string) {\n    const storage = getStorage();\n    const storageRef = ref(storage, path);\n    deleteObject(storageRef);\n  }\n\n\n  async removeThreadMessagesFromChannel(threadId: string) {\n    const q = query(this.getMessagesRef(), where('thread_id', '==', threadId));\n    const querySnapshot = await getDocs(q);\n    for (let doc of querySnapshot.docs) {\n      await deleteDoc(doc.ref);\n    }\n  }\n\n\n  async removeMessagesFromEmptyChannel(channelId: string) {\n    const q = query(this.getMessagesRef(), where('channel_id', '==', channelId));\n    const querySnapshot = await getDocs(q);\n    for (let doc of querySnapshot.docs) {\n      await deleteDoc(doc.ref);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/OpenProfileDirective.html":{"url":"directives/OpenProfileDirective.html","title":"directive - OpenProfileDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  OpenProfileDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/open-profile.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appOpenProfile]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                button\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(profileService: ProfileService, elRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/open-profile.directive.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        profileService\n                                                  \n                                                        \n                                                                        ProfileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        button\n                    \n                \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/open-profile.directive.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/open-profile.directive.ts:9\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            click\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/open-profile.directive.ts:18\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onClick()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('click')\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/open-profile.directive.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, Input, HostListener, ElementRef } from '@angular/core';\nimport { ProfileService } from '../../services/profile.service';\n\n@Directive({\n  selector: '[appOpenProfile]',\n  standalone: true,\n})\nexport class OpenProfileDirective {\n  @Input() userId!: string;\n  @Input() button!: HTMLElement;\n\n  constructor(\n    private profileService: ProfileService,\n    private elRef: ElementRef\n  ) {}\n\n  @HostListener('click')\n  onClick(): void {\n    const element = this.button || this.elRef.nativeElement;\n    this.profileService.openProfile(this.userId, element);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopupSearchComponent.html":{"url":"components/PopupSearchComponent.html","title":"component - PopupSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PopupSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/popup-search/popup-search.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-popup-search\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./popup-search.component.html\n            \n\n\n\n            \n                styleUrl\n                ./popup-search.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                    Public\n                                cursorPositionService\n                            \n                            \n                                filteredChannels\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                    Public\n                                searchService\n                            \n                            \n                                selectedUserId\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addProfileButton\n                            \n                            \n                                extendRangeToSearchTerm\n                            \n                            \n                                filter\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                replaceRangeWithHTML\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                inputElement\n                            \n                            \n                                searchTerm\n                            \n                            \n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(searchService: SearchService, userService: UserService, threadService: ThreadService, channelService: ChannelFirebaseService, renderer: Renderer2, cursorPositionService: CursorPositionService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/popup-search/popup-search.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchService\n                                                  \n                                                        \n                                                                        SearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cursorPositionService\n                                                  \n                                                        \n                                                                        CursorPositionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        inputElement\n                    \n                \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/popup-search/popup-search.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        searchTerm\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/popup-search/popup-search.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        viewContainerRef\n                    \n                \n                \n                    \n                        Type :     ViewContainerRef\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/popup-search/popup-search.component.ts:37\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addProfileButton\n                        \n                    \n                \n            \n            \n                \naddProfileButton(user: User, event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/popup-search/popup-search.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extendRangeToSearchTerm\n                        \n                    \n                \n            \n            \n                \nextendRangeToSearchTerm(range: Range, searchTerm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/popup-search/popup-search.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                range\n                                            \n                                                        Range\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Range\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter(searchTerm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/popup-search/popup-search.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/popup-search/popup-search.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                changes\n                                            \n                                                        SimpleChanges\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/popup-search/popup-search.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceRangeWithHTML\n                        \n                    \n                \n            \n            \n                \nreplaceRangeWithHTML(range: Range, newHTML: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/popup-search/popup-search.component.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                range\n                                            \n                                                        Range\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newHTML\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/popup-search/popup-search.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        cursorPositionService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CursorPositionService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/popup-search/popup-search.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredChannels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Channel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/popup-search/popup-search.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/popup-search/popup-search.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        searchService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SearchService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/popup-search/popup-search.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/popup-search/popup-search.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/popup-search/popup-search.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/popup-search/popup-search.component.ts:42\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  ComponentRef,\n  ElementRef,\n  Input,\n  Renderer2,\n  SimpleChanges,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Channel } from '../../interfaces/channel.interface';\nimport { SearchService } from '../../services/search.service';\nimport { UserService } from '../../firebase.service/user.service';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { ThreadService } from '../../services/thread.service';\nimport { ChannelTypeEnum } from '../enums/channel-type.enum';\nimport { ChannelFirebaseService } from '../../firebase.service/channelFirebase.service';\nimport { User } from '../../interfaces/user.interface';\nimport { ProfileButtonComponent } from '../profile-button/profile-button.component';\nimport { CursorPositionService } from '../../services/cursor-position.service';\n\n@Component({\n  selector: 'app-popup-search',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './popup-search.component.html',\n  styleUrl: './popup-search.component.scss',\n})\nexport class PopupSearchComponent {\n\n  filteredUsers: User[] = [];\n  filteredChannels: Channel[] = [];\n  selectedUserId: string = '';\n\n  @Input() searchTerm: string = '';\n  @Input() inputElement!: ElementRef;\n  @Input() viewContainerRef!: ViewContainerRef;\n\n\n  constructor(\n    public searchService: SearchService,\n    public userService: UserService,\n    public threadService: ThreadService,\n    public channelService: ChannelFirebaseService,\n    private renderer: Renderer2,\n    public cursorPositionService :CursorPositionService,\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['searchTerm']) this.filter(this.searchTerm);\n  }\n\n  ngOnDestroy(): void {}\n\n\n  filter(searchTerm: string): void {\n    if (searchTerm.startsWith('@')) {\n      // Suche Benutzer mit dem Präfix '@'\n      this.filteredUsers = this.searchService.filterUsersByPrefix(\n        searchTerm,\n        this.userService.allUsers\n      );\n      this.filteredChannels = [];\n    } else if (searchTerm.startsWith('#')) {\n      // Suche Kanäle vom Typ 'main' mit dem Präfix '#'\n      this.filteredChannels = this.searchService.filterChannelsByTypeAndPrefix(\n        searchTerm,\n        ChannelTypeEnum.main\n      );\n      this.filteredUsers = [];\n    } else {\n      // Klare Filter, wenn kein Suchbegriff vorhanden ist\n      const results = this.searchService.clearFilters();\n      this.filteredUsers = results.users;\n      this.filteredChannels = results.channels;\n    }\n  }\n\n\n  addProfileButton(user: User, event : Event) {\n    // replace searchTerm with HMTL Element\n    event.preventDefault();\n    let container = this.inputElement.nativeElement;\n    let range = this.cursorPositionService.restoreCursorPosition(container);\n    if(range) {range = this.extendRangeToSearchTerm(range!, this.searchTerm);\n    \n      // Ersetzen Sie den Range durch neuen Text\n      this.replaceRangeWithHTML(range, `${user.name}`);\n      \n      // Replace placeholders with dynamic components\n      const dynamicUserElements = container.querySelectorAll('.dynamic-user');\n      dynamicUserElements.forEach((element: HTMLElement) => {\n        const userId = element.getAttribute('data-userid');\n        const userName = element.innerText;\n\n        const componentRef: ComponentRef = this.viewContainerRef.createComponent(ProfileButtonComponent);\n        componentRef.instance.userId = userId!;\n        componentRef.instance.userName = userName;\n\n        range!.setStartAfter(element); // set cursor after tag\n        this.renderer.insertBefore(container,componentRef.location.nativeElement,element);\n        this.renderer.removeChild(container, element);\n\n        this.searchTerm = '';\n      });\n    }\n  }\n\n\n  extendRangeToSearchTerm(range: Range, searchTerm: string) {\n    // Hole den Startpunkt der Range\n    const startContainer = range.startContainer;\n    const startOffset = range.startOffset;\n    const inputLength = searchTerm.length;\n  \n    let currentNode = startContainer;\n    let newStartOffset = startOffset;\n  \n    while (newStartOffset \n    \n\n    \n        @if (searchTerm != '' && (filteredUsers.length > 0 || filteredChannels.length > 0 )) {\n    \n      \n        @if (filteredUsers.length > 0) {\n          \n            Users:\n            @for(user of filteredUsers; track user.id) {\n              \n                \n                  \n                    \n                    \n                  \n                  {{user.name}}\n                \n              \n            }\n          \n          }\n      \n      \n    \n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@if (searchTerm != \\'\\' && (filteredUsers.length > 0 || filteredChannels.length > 0 )) {                  @if (filteredUsers.length > 0) {                      Users:            @for(user of filteredUsers; track user.id) {                                                                                                                            {{user.name}}                                          }                    }                }'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopupSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileButtonComponent.html":{"url":"components/ProfileButtonComponent.html","title":"component - ProfileButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/profile-button/profile-button.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-button\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                OpenProfileDirective\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./profile-button.component.html\n            \n\n\n\n            \n                styleUrl\n                ./profile-button.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userId\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/profile-button/profile-button.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/profile-button/profile-button.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/profile-button/profile-button.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/profile-button/profile-button.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { OpenProfileDirective } from '../directives/open-profile.directive';\n\n@Component({\n  selector: 'app-profile-button',\n  standalone: true,\n  imports: [OpenProfileDirective],\n  templateUrl: './profile-button.component.html',\n  styleUrl: './profile-button.component.scss'\n})\nexport class ProfileButtonComponent {\n\n  constructor(private el: ElementRef, private renderer: Renderer2) { }\n\n  @Input() userId: string = '';\n  @Input() userName!: string;\n\n  ngOnInit(): void {\n    this.renderer.setAttribute(this.el.nativeElement, 'contenteditable', 'false');\n    this.renderer.addClass(this.el.nativeElement, 'tag');\n  }\n\n}\n\n    \n\n    \n        &#64;{{userName}}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '@{{userName}}'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfileService.html":{"url":"injectables/ProfileService.html","title":"injectable - ProfileService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProfileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/profile.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isOwnProfile\n                            \n                            \n                                    Private\n                                viewingUserId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOwnProfileStatus\n                            \n                            \n                                getViewingUserId\n                            \n                            \n                                openProfile\n                            \n                            \n                                setOwnProfileStatus\n                            \n                            \n                                setViewingUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, customDialogService: CustomDialogService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/profile.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customDialogService\n                                                  \n                                                        \n                                                                        CustomDialogService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOwnProfileStatus\n                        \n                    \n                \n            \n            \n                \ngetOwnProfileStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/profile.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getViewingUserId\n                        \n                    \n                \n            \n            \n                \ngetViewingUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/profile.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openProfile\n                        \n                    \n                \n            \n            \n                \nopenProfile(userId: string, button: HTMLElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/profile.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                button\n                                            \n                                                        HTMLElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOwnProfileStatus\n                        \n                    \n                \n            \n            \n                \nsetOwnProfileStatus(status: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/profile.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                status\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setViewingUserId\n                        \n                    \n                \n            \n            \n                \nsetViewingUserId(userId: string | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/profile.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isOwnProfile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/profile.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        viewingUserId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/profile.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserService } from '../firebase.service/user.service';\nimport { CustomDialogService } from './custom-dialog.service';\nimport { DialogShowProfileComponent } from '../shared/dialog-show-profile/dialog-show-profile.component';\n\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProfileService {\n  public isOwnProfile: boolean = false;\n  private viewingUserId: string | null = null;\n\n  constructor(private userService: UserService, private customDialogService: CustomDialogService) {}\n\n\n  openProfile(userId: string, button: HTMLElement): void {\n    const isOwnProfile = userId === this.userService.currentUser.id;\n    this.setOwnProfileStatus(isOwnProfile);\n    this.setViewingUserId(userId);\n    const component = DialogShowProfileComponent;\n    let userHeadButton = document.getElementById('userHead');\n    if (isOwnProfile && userHeadButton) {\n      this.customDialogService.openDialogAbsolute({button : userHeadButton, component, position : 'right', mobilePosition: 'mid', maxWidth: '500px'});\n    } else {\n      this.customDialogService.openDialog(component);\n    }\n  }\n\n\n  setOwnProfileStatus(status: boolean): void {\n    this.isOwnProfile = status;\n  }\n\n\n  getOwnProfileStatus(): boolean {\n    return this.isOwnProfile;\n  }\n\n\n  setViewingUserId(userId: string | null): void {\n    this.viewingUserId = userId;\n  }\n  \n\n  getViewingUserId(): string | null {\n    return this.viewingUserId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Reaction.html":{"url":"interfaces/Reaction.html","title":"interface - Reaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Reaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/reaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastTimeUsed\n                                        \n                                \n                                \n                                        \n                                            message_id\n                                        \n                                \n                                \n                                        \n                                            unicode\n                                        \n                                \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastTimeUsed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastTimeUsed:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unicode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unicode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Reaction {\n    id: string,\n    message_id: string,\n    unicode: string, \n    users: string[],\n    created_at: number;\n    lastTimeUsed: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReactionService.html":{"url":"injectables/ReactionService.html","title":"injectable - ReactionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ReactionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/firebase.service/reaction.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firestore\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addReaction\n                            \n                            \n                                getReactionsRef\n                            \n                            \n                                setReaction\n                            \n                            \n                                subReactionsForMessage\n                            \n                            \n                                    Async\n                                updateReaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/firebase.service/reaction.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        addReaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    addReaction(reaction: Reaction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/reaction.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reaction\n                                            \n                                                            Reaction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReactionsRef\n                        \n                    \n                \n            \n            \n                \ngetReactionsRef()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/reaction.service.ts:16\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setReaction\n                        \n                    \n                \n            \n            \n                \nsetReaction(data: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/reaction.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Reaction\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subReactionsForMessage\n                        \n                    \n                \n            \n            \n                \nsubReactionsForMessage(message_id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/reaction.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message_id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { snapshot: any; reactionsArray: {}; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateReaction\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateReaction(reaction: Reaction)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/reaction.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                reaction\n                                            \n                                                            Reaction\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/reaction.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Firestore, collection, onSnapshot, addDoc, doc, updateDoc, query, where, orderBy } from '@angular/fire/firestore';\nimport { Reaction } from '../interfaces/reaction.interface';\n\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ReactionService {\n    firestore: Firestore = inject(Firestore);\n\n    constructor() {  }\n\n    // References\n    getReactionsRef() {\n        return collection(this.firestore, 'reactions');\n    }\n\n\n    setReaction(data: any, id: string) : Reaction {\n        return {\n            id: id || '',\n            message_id: data.message_id || '',\n            users: data.users || [],\n            unicode: data.unicode || '',\n            created_at: data.created_at || 0,\n            lastTimeUsed: data.lastTimeUsed || 0,\n        }\n    }\n\n\n    // CREATE\n    async addReaction(reaction : Reaction) {\n        let ref = this.getReactionsRef();\n        const docRef = await addDoc(ref, reaction);\n        return docRef.id;\n    }\n\n\n    // READ\n    subReactionsForMessage(message_id : string) {\n        const q = query(this.getReactionsRef(), where('message_id', '==', message_id), orderBy('created_at'));\n        let reactionsArray : Reaction[] = [];\n        const snapshot =  onSnapshot(q, (reactions) => {\n            reactionsArray.length = 0;\n            reactions.forEach((reaction) => {\n                reactionsArray.push(this.setReaction(reaction.data(), reaction.id));\n            })\n        });\n        return {snapshot, reactionsArray};\n    }\n\n\n    // UPDATE\n    async updateReaction(reaction : Reaction) {\n        if (reaction.id) {\n          let docRef = doc(this.getReactionsRef(), reaction.id);\n          await updateDoc(docRef, JSON.parse(JSON.stringify(reaction)))\n        }\n      }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResetPasswordComponent.html":{"url":"components/ResetPasswordComponent.html","title":"component - ResetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/reset-password/reset-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-reset-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            MatSnackBarModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./reset-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./reset-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                oobCode\n                            \n                            \n                                resetPassword\n                            \n                            \n                                resetPasswordAgain\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                confirmPopup\n                            \n                            \n                                goToCheckEmail\n                            \n                            \n                                returnToLogin\n                            \n                            \n                                triggerAnimation\n                            \n                            \n                                updateUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _snackBar: MatSnackBar, userAuth: UserAuthService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/reset-password/reset-password.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/reset-password/reset-password.component.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPopup\n                        \n                    \n                \n            \n            \n                \nconfirmPopup()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/reset-password/reset-password.component.ts:37\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToCheckEmail\n                        \n                    \n                \n            \n            \n                \ngoToCheckEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/reset-password/reset-password.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        returnToLogin\n                        \n                    \n                \n            \n            \n                \nreturnToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/reset-password/reset-password.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        triggerAnimation\n                        \n                    \n                \n            \n            \n                \ntriggerAnimation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/reset-password/reset-password.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUserPassword\n                        \n                    \n                \n            \n            \n                \nupdateUserPassword(newPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/reset-password/reset-password.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        oobCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/reset-password/reset-password.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/reset-password/reset-password.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetPasswordAgain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/reset-password/reset-password.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/reset-password/reset-password.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoginSnackbarComponent } from '../../popups/login-snackbar/login-snackbar.component';\nimport { MatSnackBar, MatSnackBarModule } from '@angular/material/snack-bar';\nimport { UserAuthService } from '../../firebase.service/user.auth.service';\n\n@Component({\n  selector: 'app-reset-password',\n  standalone: true,\n  imports: [CommonModule, FormsModule, MatSnackBarModule],\n  templateUrl: './reset-password.component.html',\n  styleUrl: './reset-password.component.scss'\n})\nexport class ResetPasswordComponent {\n  userId: string | any;\n  resetPassword: string = '';\n  resetPasswordAgain: string = '';\n  oobCode: string = '';\n  constructor(private router: Router, private _snackBar: MatSnackBar,\n    private userAuth: UserAuthService, private route: ActivatedRoute) { }\n\n\n  goToCheckEmail() {\n    this.router.navigate(['/login-page/check-email']);\n  }\n\n\n  returnToLogin() {\n    setTimeout(() => {\n      this.router.navigate(['/login-page/login']);\n    }, 1000);\n  }\n\n\n  confirmPopup() {\n    this._snackBar.openFromComponent(LoginSnackbarComponent, {\n      duration: 2000,\n      horizontalPosition: 'start',\n      verticalPosition: 'bottom',\n      direction: 'rtl',\n    });\n  }\n\n\n  triggerAnimation() {\n    const element = document.querySelector('.cdk-overlay-container');\n    if (element) {\n      element.classList.add('animate');\n\n      setTimeout(() => {\n        element.classList.remove('animate');\n      }, 2000);\n    }\n  }\n\n\n  updateUserPassword(newPassword: string) {\n    this.oobCode = this.route.snapshot.queryParams['oobCode'];\n    this.userAuth.changePassword(newPassword, this.oobCode);\n  }\n  \n\n  changePassword(newPassword: string) {\n    Promise.resolve(this.updateUserPassword(newPassword)).then(() => {\n      this.confirmPopup();\n      this.returnToLogin();\n      this.triggerAnimation();\n    }).catch((error) => {\n      console.error(error);\n    });\n\n  }\n}\n\n    \n\n    \n        \n    \n        Passwort zurücksetzen\n        \n            \n                \n            \n            \n                \n                \n                    Ihre Passwörter stimmen nicht überein\n                \n            \n            \n        \n        \n            Passwort ändern\n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Passwort zurücksetzen                                                                                                                Ihre Passwörter stimmen nicht überein                                                                    Passwort ändern        '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SearchResultsComponent.html":{"url":"components/SearchResultsComponent.html","title":"component - SearchResultsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchResultsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/search-results/search-results.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-results\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                OpenProfileDirective\n                            RouterModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./search-results.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search-results.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                router\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                    Public\n                                utilityService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeThread\n                            \n                            \n                                displayChannelTime\n                            \n                            \n                                getUserDisplayName\n                            \n                            \n                                shouldShowSearchResults\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filteredChannels\n                            \n                            \n                                filteredMessages\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                searchControl\n                            \n                            \n                                userService\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, threadService: ThreadService, utilityService: UtilityService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/search-results/search-results.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilityService\n                                                  \n                                                        \n                                                                        UtilityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filteredChannels\n                    \n                \n                \n                    \n                        Type :         Channel[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/search-results/search-results.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filteredMessages\n                    \n                \n                \n                    \n                        Type :         Message[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/search-results/search-results.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        filteredUsers\n                    \n                \n                \n                    \n                        Type :         User[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/search-results/search-results.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        searchControl\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/search-results/search-results.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        userService\n                    \n                \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/search-results/search-results.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeThread\n                        \n                    \n                \n            \n            \n                \ncloseThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/search-results/search-results.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayChannelTime\n                        \n                    \n                \n            \n            \n                \ndisplayChannelTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/search-results/search-results.component.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserDisplayName\n                        \n                    \n                \n            \n            \n                \ngetUserDisplayName(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/search-results/search-results.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldShowSearchResults\n                        \n                    \n                \n            \n            \n                \nshouldShowSearchResults()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/search-results/search-results.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/search-results/search-results.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/search-results/search-results.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        utilityService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UtilityService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/search-results/search-results.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { User } from '../../interfaces/user.interface';\nimport { Channel } from '../../interfaces/channel.interface';\nimport { Message } from '../../interfaces/message.interface';\nimport { OpenProfileDirective } from '../../shared/directives/open-profile.directive';\nimport { Router, RouterModule } from '@angular/router';\nimport { ThreadService } from '../../services/thread.service';\nimport { UtilityService } from '../../services/utility.service';\nimport { UserService } from '../../firebase.service/user.service';\nimport { FormControl } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-search-results',\n  standalone: true,\n  imports: [CommonModule, OpenProfileDirective, RouterModule],\n  templateUrl: './search-results.component.html',\n  styleUrl: './search-results.component.scss',\n})\nexport class SearchResultsComponent {\n  @Input() searchControl!: FormControl;\n  @Input() filteredUsers: User[] = [];\n  @Input() filteredChannels: Channel[] = []; \n  @Input() filteredMessages: Message[] = []; \n  @Input() userService!: UserService; \n\n\n  constructor(\n    public router: Router,\n    public threadService: ThreadService,\n    public utilityService: UtilityService,\n  ) { }\n\n\n  getUserDisplayName(userId: string): string {\n    if (!this.userService) {\n      return 'User Name';\n    }\n    const user = this.userService.getUser(userId);\n    return user ? user.name : 'User Name';\n  }\n\n\n  shouldShowSearchResults(): boolean {\n    return this.searchControl.value.trim().length > 0 &&\n      (this.filteredUsers.length > 0 || this.filteredChannels.length > 0 || this.filteredMessages.length > 0);\n  }\n\n\n  displayChannelTime(): string {\n    return this.utilityService.getChannelCreationTime();\n  }\n  \n\n  closeThread() {\n    this.userService.saveLastThread(this.userService.currentUser.id, '');\n    this.threadService.closeThread();\n  }\n}\n\n    \n\n    \n        \n     0\">\n      Users:\n      \n        \n          \n            \n            \n          \n          {{ getUserDisplayName(user.id) }}{{ getUserDisplayName(user.id) === userService.currentUser?.name ? ' (Du)' : '' }}\n        \n      \n    \n  \n     0\">\n      Channels:\n      \n        \n          \n            #\n            {{channel.name}}\n          \n        \n      \n    \n  \n     0\">\n      Messages:\n      \n        \n          \n          \n            \n              \n              {{ displayChannelTime() }}\n            \n            {{message.message.text}}\n            {{message.channel_id}}\n          \n        \n      \n    \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     0\">      Users:                                                                    {{ getUserDisplayName(user.id) }}{{ getUserDisplayName(user.id) === userService.currentUser?.name ? \\' (Du)\\' : \\'\\' }}                         0\">      Channels:                                    #            {{channel.name}}                                   0\">      Messages:                                                                          {{ displayChannelTime() }}                        {{message.message.text}}            {{message.channel_id}}                                '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'SearchResultsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SearchService.html":{"url":"injectables/SearchService.html","title":"injectable - SearchService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/search.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                channelExists\n                            \n                            \n                                clearFilters\n                            \n                            \n                                filterChannels\n                            \n                            \n                                filterChannelsByTypeAndPrefix\n                            \n                            \n                                filterMessages\n                            \n                            \n                                filterUsers\n                            \n                            \n                                filterUsersByPrefix\n                            \n                            \n                                    Private\n                                searchTerm\n                            \n                            \n                                threadExists\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, channelService: ChannelFirebaseService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/search.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters(searchTerm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        channelExists\n                        \n                    \n                \n            \n            \n                \nchannelExists(channelId: string, channels: Channel[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                channels\n                                            \n                                                            Channel[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearFilters\n                        \n                    \n                \n            \n            \n                \nclearFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterChannels\n                        \n                    \n                \n            \n            \n                \nfilterChannels(searchTerm: string, channels: Channel[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                channels\n                                            \n                                                            Channel[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Channel[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterChannelsByTypeAndPrefix\n                        \n                    \n                \n            \n            \n                \nfilterChannelsByTypeAndPrefix(prefix: string, channelType: ChannelTypeEnum)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                channelType\n                                            \n                                                            ChannelTypeEnum\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Channel[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterMessages\n                        \n                    \n                \n            \n            \n                \nfilterMessages(searchTerm: string, messages: Message[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                messages\n                                            \n                                                            Message[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Message[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterUsers\n                        \n                    \n                \n            \n            \n                \nfilterUsers(searchTerm: string, users: User[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                users\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterUsersByPrefix\n                        \n                    \n                \n            \n            \n                \nfilterUsersByPrefix(prefix: string, users: User[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                prefix\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                users\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        searchTerm\n                        \n                    \n                \n            \n            \n                \n                        \n                    searchTerm(searchTerm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        threadExists\n                        \n                    \n                \n            \n            \n                \nthreadExists(threadId: string, threads: Channel[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/search.service.ts:83\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                threadId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                threads\n                                            \n                                                            Channel[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../interfaces/user.interface';\nimport { Channel } from '../interfaces/channel.interface';\nimport { Message } from '../interfaces/message.interface';\nimport { UserService } from '../firebase.service/user.service';\nimport { ChannelFirebaseService } from '../firebase.service/channelFirebase.service';\nimport { MessageService } from '../firebase.service/message.service';\nimport { ChannelTypeEnum } from '../shared/enums/channel-type.enum';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchService {\n  constructor(\n    private userService: UserService,\n    private channelService: ChannelFirebaseService,\n    private messageService: MessageService\n  ) { }\n\n\n  applyFilters(searchTerm: string): {\n    users: User[];\n    channels: Channel[];\n    messages: Message[];\n  } {\n    return {\n      users: this.filterUsers(searchTerm, this.userService.allUsers),\n      channels: this.filterChannels(searchTerm, this.channelService.channels),\n      messages: this.filterMessages(searchTerm, this.messageService.allMessages),\n    };\n  }\n\n\n  clearFilters(): { users: User[]; channels: Channel[]; messages: Message[] } {\n    return {\n      users: [],\n      channels: [],\n      messages: [],\n    };\n  }\n\n\n  private searchTerm(searchTerm: string): string {\n    return searchTerm.trim().toLowerCase();\n  }\n\n\n  filterUsers(searchTerm: string, users: User[]): User[] {\n    const lowerCaseTerm = this.searchTerm(searchTerm);\n    return users.filter((user) =>\n      user.name\n        .split(' ')\n        .some((part: string) => part.toLowerCase().startsWith(lowerCaseTerm))\n    );\n  }\n\n\n  filterChannels(searchTerm: string, channels: Channel[]): Channel[] {\n    const lowerCaseTerm = this.searchTerm(searchTerm);\n    return channels.filter((channel) =>\n      channel.name\n        .split(' ')\n        .some((part: string) => part.toLowerCase().startsWith(lowerCaseTerm))\n    );\n  }\n\n\n  filterMessages(searchTerm: string, messages: Message[]): Message[] {\n    const lowerCaseTerm = this.searchTerm(searchTerm);\n    return messages.filter((message) =>\n      message.message.text.toLowerCase().includes(lowerCaseTerm) &&\n      this.channelExists(message.channel_id, this.channelService.channels) ||\n      this.threadExists(message.thread_id!, this.channelService.channels)\n    );\n  }\n\n\n  channelExists(channelId: string, channels: Channel[]): boolean {\n    return channels.some(channel => channel.id === channelId);\n  }\n\n\n  threadExists(threadId: string, threads: Channel[]): boolean {\n    return threads.some(thread => thread.id === threadId);\n  }\n\n\n  filterUsersByPrefix(prefix: string, users: User[]): User[] {\n    const lowerCaseTerm = this.searchTerm(prefix.slice(1));\n    return users.filter((user) =>\n      user.name\n        .split(' ')\n        .some((part: string) => part.toLowerCase().startsWith(lowerCaseTerm))\n    );\n  }\n\n\n  filterChannelsByTypeAndPrefix(\n    prefix: string,\n    channelType: ChannelTypeEnum\n  ): Channel[] {\n    const lowerCaseTerm = this.searchTerm(prefix.slice(1));\n    return this.channelService.channels.filter(\n      (channel) =>\n        channel.channel_type === channelType &&\n        channel.name\n          .split(' ')\n          .some((part: string) => part.toLowerCase().startsWith(lowerCaseTerm))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SharedService.html":{"url":"injectables/SharedService.html","title":"injectable - SharedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SharedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/shared.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backToChannels$\n                            \n                            \n                                    Private\n                                backToChannelsSubject\n                            \n                            \n                                isMenuOpen\n                            \n                            \n                                showMobileDiv$\n                            \n                            \n                                    Private\n                                showMobileDivSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                backToChannels\n                            \n                            \n                                ngonDestroy\n                            \n                            \n                                showMobileDiv\n                            \n                            \n                                subscribeToBackToChannels\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/shared.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        backToChannels\n                        \n                    \n                \n            \n            \n                \nbackToChannels()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/shared.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngonDestroy\n                        \n                    \n                \n            \n            \n                \nngonDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/shared.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMobileDiv\n                        \n                    \n                \n            \n            \n                \nshowMobileDiv()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/shared.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeToBackToChannels\n                        \n                    \n                \n            \n            \n                \nsubscribeToBackToChannels(toggleMenu: () => void)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/shared.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                toggleMenu\n                                            \n                                                            function\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Subscription\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        backToChannels$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.backToChannelsSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/shared.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        backToChannelsSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/shared.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMenuOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/services/shared.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMobileDiv$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.showMobileDivSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/shared.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        showMobileDivSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/shared.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n\n  isMenuOpen: boolean = true;\n  private showMobileDivSubject = new Subject();\n  private backToChannelsSubject = new Subject();\n\n  backToChannels$ = this.backToChannelsSubject.asObservable();\n  showMobileDiv$ = this.showMobileDivSubject.asObservable();\n  constructor() { }\n\n  \n  showMobileDiv() {\n    this.showMobileDivSubject.next();\n  }\n\n\n  backToChannels() {\n    this.backToChannelsSubject.next();         \n  }\n\n\n  subscribeToBackToChannels(toggleMenu: () => void): Subscription {\n    return this.backToChannels$.subscribe(toggleMenu);\n  }\n\n\n  ngonDestroy() {\n    this.backToChannelsSubject.unsubscribe();\n    this.showMobileDivSubject.unsubscribe();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignInComponent.html":{"url":"components/SignInComponent.html","title":"component - SignInComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SignInComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login-page/sign-in/sign-in.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-sign-in\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                LoginComponent\n                            RouterModule\n                                LoginPageComponent\n                            CommonModule\n                            FormsModule\n                            MatCheckboxModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./sign-in.component.html\n            \n\n\n\n            \n                styleUrl\n                ./sign-in.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                checkbox\n                            \n                            \n                                checked\n                            \n                            \n                                disabled\n                            \n                            \n                                emailExists\n                            \n                            \n                                firestore\n                            \n                            \n                                hoverState\n                            \n                            \n                                iconMail\n                            \n                            \n                                iconName\n                            \n                            \n                                passwordError\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeIconMail\n                            \n                            \n                                changeIconName\n                            \n                            \n                                checkEmail\n                            \n                            \n                                checkWindowWidth\n                            \n                            \n                                    Async\n                                goToAvatar\n                            \n                            \n                                goToLogin\n                            \n                            \n                                ngonInit\n                            \n                            \n                                validatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService, userAuth: UserAuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userAuth\n                                                  \n                                                        \n                                                                        UserAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeIconMail\n                        \n                    \n                \n            \n            \n                \nchangeIconMail(focus: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                focus\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeIconName\n                        \n                    \n                \n            \n            \n                \nchangeIconName(focus: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                focus\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmail\n                        \n                    \n                \n            \n            \n                \ncheckEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkWindowWidth\n                        \n                    \n                \n            \n            \n                \ncheckWindowWidth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        goToAvatar\n                        \n                    \n                \n            \n            \n                \n                        \n                    goToAvatar()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToLogin\n                        \n                    \n                \n            \n            \n                \ngoToLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngonInit\n                        \n                    \n                \n            \n            \n                \nngonInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validatePassword\n                        \n                    \n                \n            \n            \n                \nvalidatePassword(password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/login-page/sign-in/sign-in.component.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        checkbox\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : { checked: false }\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checked\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailExists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoverState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconMail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/img/mail.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        iconName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/assets/img/person_filled.png'\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new User()\n                    \n                \n                    \n                        \n                                Defined in src/app/login-page/sign-in/sign-in.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewChild, ElementRef, Renderer2, inject, viewChild } from '@angular/core';\nimport { LoginComponent } from '../login/login.component';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { LoginPageComponent } from '../login-page.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { Firestore, onSnapshot, doc } from '@angular/fire/firestore';\nimport { UserService } from '../../firebase.service/user.service';\nimport { User } from '../../models/user';\nimport { UserAuthService } from '../../firebase.service/user.auth.service';\n\n@Component({\n  selector: 'app-sign-in',\n  standalone: true,\n  imports: [LoginComponent, RouterModule, LoginPageComponent, CommonModule, FormsModule, MatCheckboxModule],\n  templateUrl: './sign-in.component.html',\n  styleUrl: './sign-in.component.scss'\n})\n\nexport class SignInComponent {\n  checkbox = { checked: false };\n  checked = false;\n  disabled = false;\n  hoverState = false;\n  firestore: Firestore = inject(Firestore);\n  user = new User();\n  emailExists: boolean = false;\n  iconName = '/assets/img/person_filled.png';\n  iconMail = '/assets/img/mail.png';\n  passwordError = false;\n\n\n  constructor(\n    private router: Router, private userService: UserService, private userAuth: UserAuthService) {\n  }\n\n\n  ngonInit() {\n    this.userService.getUsers();\n    if (window.innerWidth  user.email === this.user.email);\n    if (userExists) {\n      this.emailExists = true;\n    }\n    this.emailExists = false;\n    return userExists;\n  }\n\n\n  async goToAvatar() {\n    if (this.checkEmail()) { return; }\n    if (!this.validatePassword(this.user.password)) { return; }\n    await this.userAuth.registerUser(this.user.email, this.user.password).then(async () => {\n      await this.userService.addUser(this.user);\n      await this.userAuth.saveUser(this.user.name)\n    }).then(() => {\n      this.router.navigate(['/login-page/avatar'], { state: { user: this.user } });\n    });\n  }\n\n\n  checkWindowWidth() {\n    if (typeof window !== 'undefined') {\n      if (window.innerWidth \n    \n\n    \n        \n    \n    Konto erstellen\n    Mit deinem Namen und deiner E-Mail-Adresse hast du dein neues DABubble-Konto.\n\n    \n        \n            \n            \n            Bitte schreiben Sie einen Namen\n        \n        \n            \n            \n            *Diese E-Mail-Adresse ist leider ungültig.\n            *Diese E-Mail-Adresse existiert bereits.\n        \n        \n            \n            Bitte geben Sie ein Passwort ein.\n            @if (passwordError){\n                Mindestens 6 Zeichen, ein Großbuchstabe, ein Kleinbuchstabe, eine Zahl und ein Sonderzeichen\n            }\n            \n        \n    \n    \n    \n        \n        Ich stimme der Datenschutzerklärung zu.\n    \n    \n        @if (checkWindowWidth()){\n            Weiter\n        }\n        @if (!checkWindowWidth()) {\n            Weiter\n        }\n            \n        \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Konto erstellen    Mit deinem Namen und deiner E-Mail-Adresse hast du dein neues DABubble-Konto.                                                Bitte schreiben Sie einen Namen                                                    *Diese E-Mail-Adresse ist leider ungültig.            *Diese E-Mail-Adresse existiert bereits.                                        Bitte geben Sie ein Passwort ein.            @if (passwordError){                Mindestens 6 Zeichen, ein Großbuchstabe, ein Kleinbuchstabe, eine Zahl und ein Sonderzeichen            }                                                Ich stimme der Datenschutzerklärung zu.                @if (checkWindowWidth()){            Weiter        }        @if (!checkWindowWidth()) {            Weiter        }                            '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignInComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StateManagementService.html":{"url":"injectables/StateManagementService.html","title":"injectable - StateManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StateManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/state-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                selectedChannelId\n                            \n                            \n                                    Private\n                                selectedUserId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSelectedChannelId\n                            \n                            \n                                getSelectedUserId\n                            \n                            \n                                setSelectedChannelId\n                            \n                            \n                                setSelectedUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedChannelId\n                        \n                    \n                \n            \n            \n                \ngetSelectedChannelId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/state-management.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSelectedUserId\n                        \n                    \n                \n            \n            \n                \ngetSelectedUserId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/state-management.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedChannelId\n                        \n                    \n                \n            \n            \n                \nsetSelectedChannelId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/state-management.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedUserId\n                        \n                    \n                \n            \n            \n                \nsetSelectedUserId(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/state-management.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedChannelId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/state-management.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        selectedUserId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/state-management.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StateManagementService {\n  private selectedChannelId = new BehaviorSubject(null);\n  private selectedUserId = new BehaviorSubject(null);\n\n  setSelectedChannelId(id: string) {\n    this.selectedChannelId.next(id);\n    this.selectedUserId.next(null); \n  }\n\n\n  setSelectedUserId(id: string) {\n    this.selectedUserId.next(id);\n    this.selectedChannelId.next(null);\n  }\n\n\n  getSelectedChannelId() {\n    return this.selectedChannelId.asObservable();\n  }\n  \n\n  getSelectedUserId() {\n    return this.selectedUserId.asObservable();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TagToComponentDirective.html":{"url":"directives/TagToComponentDirective.html","title":"directive - TagToComponentDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  TagToComponentDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/tag-to-component.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appTagToComponent]\n                    \n\n                    \n                        Standalone\n                        true\n                    \n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isViewInitialized\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handlePaste\n                            \n                            \n                                loadDynamicComponents\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                paste\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainer: ViewContainerRef, elementRef: ElementRef, userService: UserService, renderer: Renderer2, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/tag-to-component.directive.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/tag-to-component.directive.ts:13\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            paste\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/tag-to-component.directive.ts:65\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handlePaste\n                        \n                    \n                \n            \n            \n                \n                        \n                    handlePaste(event: ClipboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('paste', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/tag-to-component.directive.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        ClipboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadDynamicComponents\n                        \n                    \n                \n            \n            \n                \nloadDynamicComponents()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/tag-to-component.directive.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/tag-to-component.directive.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/directives/tag-to-component.directive.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isViewInitialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/tag-to-component.directive.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/tag-to-component.directive.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { ChangeDetectorRef, ComponentRef, Directive, ElementRef, HostListener, Input, Renderer2, SimpleChange, SimpleChanges, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { UserService } from '../../firebase.service/user.service';\nimport { ProfileButtonComponent } from '../profile-button/profile-button.component';\nimport { SimpleSnackBar } from '@angular/material/snack-bar';\n\n@Directive({\n  selector: '[appTagToComponent]',\n  standalone: true\n})\nexport class TagToComponentDirective {\n\n  // @Input() dynamicHost! : ViewContainerRef;\n  @Input() message: string = '';\n  isViewInitialized : boolean = false;\n\n  constructor(\n    private viewContainer: ViewContainerRef,\n    // private template : TemplateRef,\n    private elementRef : ElementRef,\n    public userService : UserService,\n    private renderer: Renderer2,\n    private cdr: ChangeDetectorRef,\n\n  ) { }\n\n  ngAfterViewInit() {\n    this.loadDynamicComponents();\n    this.cdr.detectChanges();\n    this.isViewInitialized = true;\n  }\n\n  ngOnChanges() {\n    if(this.isViewInitialized) {\n      this.loadDynamicComponents();\n      this.cdr.detectChanges();\n      // console.log('triggered', this.message)\n    }\n\n  }\n\n  loadDynamicComponents() {\n    let container = this.elementRef.nativeElement;\n    this.userService.allUsers.forEach(user => {\n      const regex = new RegExp(`@${user.id}`, 'g');\n      container.innerHTML = container.innerHTML.replace(regex, `${user.name}`);\n    });\n\n    // Replace placeholders with dynamic components\n    const dynamicUserElements = container.querySelectorAll('.dynamic-user');\n    dynamicUserElements.forEach((element: HTMLElement) => {\n      const userId = element.getAttribute('data-userid');\n      const userName = element.innerText;\n\n      const componentRef: ComponentRef = this.viewContainer.createComponent(ProfileButtonComponent);\n      componentRef.instance.userId = userId!;\n      componentRef.instance.userName = userName;\n\n      this.renderer.insertBefore(container, componentRef.location.nativeElement, element);\n      this.renderer.removeChild(container, element);\n    });\n  }\n\n  // TODO: move to own directive?\n  @HostListener('paste', ['$event'])\n  handlePaste(event: ClipboardEvent): void {\n    // Prevent the default paste behavior\n    event.preventDefault();\n\n    // Get the text from the clipboard\n    const clipboardData = event.clipboardData || (window as any).clipboardData;\n    const text = clipboardData.getData('text');\n\n    // Insert the text into the contenteditable div\n    document.execCommand('insertText', false, text);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThreadComponent.html":{"url":"components/ThreadComponent.html","title":"component - ThreadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThreadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/main-page/thread/thread.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-thread\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                MessageComponent\n                            FormsModule\n                                MessageInputComponent\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./thread.component.html\n            \n\n\n\n            \n                styleUrl\n                ./thread.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                channelService\n                            \n                            \n                                currentDate\n                            \n                            \n                                currenThread\n                            \n                            \n                                currentUser\n                            \n                            \n                                message\n                            \n                            \n                                messageInput\n                            \n                            \n                                    Public\n                                messageService\n                            \n                            \n                                months\n                            \n                            \n                                    Public\n                                sharedService\n                            \n                            \n                                    Public\n                                threadService\n                            \n                            \n                                    Public\n                                userService\n                            \n                            \n                                weekdays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeThread\n                            \n                            \n                                convertToDate\n                            \n                            \n                                getDateFormat\n                            \n                            \n                                getDirectChannelUser\n                            \n                            \n                                getTextareaPlaceholderText\n                            \n                            \n                                isNewDate\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                setFocus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, userService: UserService, channelService: ChannelFirebaseService, threadService: ThreadService, sharedService: SharedService)\n                    \n                \n                        \n                            \n                                Defined in src/app/main-page/thread/thread.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        threadService\n                                                  \n                                                        \n                                                                        ThreadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sharedService\n                                                  \n                                                        \n                                                                        SharedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeThread\n                        \n                    \n                \n            \n            \n                \ncloseThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:143\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        convertToDate\n                        \n                    \n                \n            \n            \n                \nconvertToDate(dateAsNumber: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dateAsNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDateFormat\n                        \n                    \n                \n            \n            \n                \ngetDateFormat(dateInput: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dateInput\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirectChannelUser\n                        \n                    \n                \n            \n            \n                \ngetDirectChannelUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:136\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTextareaPlaceholderText\n                        \n                    \n                \n            \n            \n                \ngetTextareaPlaceholderText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isNewDate\n                        \n                    \n                \n            \n            \n                \nisNewDate(date: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:88\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFocus\n                        \n                    \n                \n            \n            \n                \nsetFocus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/main-page/thread/thread.component.ts:149\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        channelService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChannelFirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1970/01/01'\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currenThread\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : this.userService.currentUser\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Message\n\n                    \n                \n                \n                    \n                        Default value : {\n    user_id: '',\n    channel_id: '',\n    thread_id: this.channelService.currentThread.id,\n    message: {\n      text: '',\n      attachements: [],\n    },\n    created_at: 0,\n    modified_at: 0,\n    is_deleted: false,\n    last_reply: 0,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        messageService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        months\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Januar',\n    'Februar',\n    'März',\n    'April',\n    'Mai',\n    'Juni',\n    'Juli',\n    'August',\n    'September',\n    'Oktober',\n    'November',\n    'Dezember',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sharedService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SharedService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        threadService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ThreadService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weekdays\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Sonntag',\n    'Montag',\n    'Dienstag',\n    'Mittwoch',\n    'Donnerstag',\n    'Freitag',\n    'Samstag',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/main-page/thread/thread.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MessageService } from '../../firebase.service/message.service';\nimport { UserService } from '../../firebase.service/user.service';\nimport { ChannelFirebaseService } from '../../firebase.service/channelFirebase.service';\nimport { MessageComponent } from '../channel/message/message.component';\nimport { FormsModule } from '@angular/forms';\nimport { User } from '../../interfaces/user.interface';\nimport { Message } from '../../interfaces/message.interface';\nimport { ThreadService } from '../../services/thread.service';\nimport { MessageInputComponent } from '../message-input/message-input.component';\nimport { HostListener } from '@angular/core';\nimport { doc } from '@angular/fire/firestore';\nimport { SharedService } from '../../services/shared.service';\n\n\n@Component({\n  selector: 'app-thread',\n  standalone: true,\n  imports: [MessageComponent, FormsModule, MessageInputComponent],\n  templateUrl: './thread.component.html',\n  styleUrl: './thread.component.scss',\n})\nexport class ThreadComponent {\n  currentUser: User = this.userService.currentUser;\n  currentDate: string = '1970/01/01';\n  messageInput: string = '';\n  message: Message = {\n    user_id: '',\n    channel_id: '',\n    thread_id: this.channelService.currentThread.id,\n    message: {\n      text: '',\n      attachements: [],\n    },\n    created_at: 0,\n    modified_at: 0,\n    is_deleted: false,\n    last_reply: 0,\n  };\n  weekdays = [\n    'Sonntag',\n    'Montag',\n    'Dienstag',\n    'Mittwoch',\n    'Donnerstag',\n    'Freitag',\n    'Samstag',\n  ];\n  months = [\n    'Januar',\n    'Februar',\n    'März',\n    'April',\n    'Mai',\n    'Juni',\n    'Juli',\n    'August',\n    'September',\n    'Oktober',\n    'November',\n    'Dezember',\n  ];\n\n  currenThread;\n\n\n  constructor(\n    public messageService: MessageService,\n    public userService: UserService,\n    public channelService: ChannelFirebaseService,\n    public threadService: ThreadService,\n    public sharedService: SharedService,\n  ) {\n    this.currenThread = this.userService.subCurrentUserForThread(this.userService.currentUser.id);\n    this.userService.currentUserThread$.subscribe(thread_id => {\n      if (thread_id && thread_id != '') {\n        this.channelService.unsubCurrentThread = this.channelService.getCurrentThread(thread_id);\n        this.messageService.getMessagesFromThread(thread_id);\n        this.setFocus();\n      }\n    })\n    if (this.userService.currentUser && this.userService.currentUser.last_thread == '') {\n      this.closeThread();\n    }\n  }\n\n\n  ngOnDestroy() {\n    this.channelService.unsubCurrentThread();\n    this.messageService.unsubMessagesThread();\n    this.currenThread();\n  }\n\n\n  isNewDate(date: number) {\n    let currentDate = this.currentDate;\n    let messageDate = this.convertToDate(date);\n    this.currentDate = messageDate;\n    return currentDate != messageDate;\n  }\n\n\n  getDateFormat(dateInput: number) {\n    let d = new Date(dateInput);\n    let date = d.getDate();\n    let day: number | string = d.getDay();\n    let month: number | string = d.getMonth() + 1;\n    day = this.weekdays[day];\n    month = this.months[month];\n    let result = day + ',' + ' ' + date + ' ' + month;\n    return result;\n  }\n\n  convertToDate(dateAsNumber: number) {\n    let date = new Date(dateAsNumber);\n    let d: number | string = date.getDate();\n    let m: number | string = date.getMonth() + 1;\n    let y: number | string = date.getFullYear();\n    if (d  member != this.currentUser.id);\n    if (contact) return this.userService.getUser(contact);\n    else return this.currentUser;\n  }\n\n\n  closeThread() {\n    this.userService.saveLastThread(this.userService.currentUser.id, '');\n    this.threadService.closeThread();\n  }\n\n\n  setFocus() {\n    document.getElementById('threadInput')?.focus();\n    this.messageInput = '';\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n          Thread\n          \n            \n            \n            \n            \n            \n            \n          \n          {{ channelService.currentThread.name }}  \n      \n      \n          \n              \n              \n              \n              \n              \n              \n           \n      \n     \n  \n    \n    \n      \n        \n        @for(message of messageService.messagesThread; track message.id; let i = $index) {\n  \n          \n          \n          \n          @if(i == 0 && message.total_replies && message.total_replies > 0) {\n            \n              {{ message.total_replies }} Antworten\n              \n            \n          }\n        }\n    \n       \n    \n  \n  \n    \n    \n      \n    \n  \n  \n  \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          Thread                                                                                                      {{ channelService.currentThread.name }}                                                                                                                                                                  @for(message of messageService.messagesThread; track message.id; let i = $index) {                                          @if(i == 0 && message.total_replies && message.total_replies > 0) {                          {{ message.total_replies }} Antworten                                    }        }                                           '\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'ThreadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThreadService.html":{"url":"injectables/ThreadService.html","title":"injectable - ThreadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThreadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/thread.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                threadOpen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeThread\n                            \n                            \n                                openThread\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/thread.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeThread\n                        \n                    \n                \n            \n            \n                \ncloseThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/thread.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openThread\n                        \n                    \n                \n            \n            \n                \nopenThread()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/thread.service.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        threadOpen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/thread.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThreadService {\n\n  threadOpen : boolean = false;\n\n  constructor() { }\n\n  \n  openThread() {\n    this.threadOpen = true;\n  }\n\n\n  closeThread() {\n    this.threadOpen = false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                is_typing\n                            \n                            \n                                    Optional\n                                last_channel\n                            \n                            \n                                    Optional\n                                last_thread\n                            \n                            \n                                logged_in\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                profile_img\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                toJSON\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(obj?: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/user.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        is_typing\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        last_channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        last_thread\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logged_in\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile_img\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        toJSON\n                        \n                    \n                \n            \n            \n                \n                        \n                    toJSON()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/models/user.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { id: string; name: string; email: string; password: string; logged_in: boolean; is_typing: boolean; profile_img: string; last_channel: string; last_thread: string; }\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n    id: string;\n    name: string;\n    email: string;\n    password: string;\n    logged_in: boolean;\n    is_typing: boolean;\n    profile_img: string;\n    last_channel?: string;\n    last_thread?: string;\n\n    constructor(obj?: any){\n        this.id = obj ? obj.id : '';\n        this.name = obj ?obj.name : '';\n        this.email = obj ? obj.email : '';\n        this.password = '';\n        this.logged_in = obj ? obj.logged_in : '';\n        this.is_typing = obj ? obj.is_typing : '';\n        this.profile_img = obj ? obj.profile_img : '';\n        this.last_channel = obj ? obj.last_channel : '';\n        this.last_thread = obj ? obj.last_thread : '';\n    }\n\n    public toJSON() {\n        return {\n            id: this.id,\n            name: this.name,\n            email: this.email,\n            password: 'Hackerman',\n            logged_in: this.logged_in,\n            is_typing: this.is_typing,\n            profile_img: this.profile_img,\n            last_channel: this.last_channel,\n            last_thread: this.last_thread\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserAuthService.html":{"url":"injectables/UserAuthService.html","title":"injectable - UserAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/firebase.service/user.auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                displayName\n                            \n                            \n                                firestore\n                            \n                            \n                                googleEmail\n                            \n                            \n                                googleName\n                            \n                            \n                                googleProfileImg\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changeCurrentUser\n                            \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                checkAuth\n                            \n                            \n                                checkAuthLoggedInAsGuest\n                            \n                            \n                                    Async\n                                checkEmailExistence\n                            \n                            \n                                    Async\n                                currentUser\n                            \n                            \n                                emailExists\n                            \n                            \n                                guestLogin\n                            \n                            \n                                    Async\n                                handleActionCode\n                            \n                            \n                                    Async\n                                loginUser\n                            \n                            \n                                    Async\n                                loginWithGoogle\n                            \n                            \n                                logout\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                            \n                                    Async\n                                resetPassword\n                            \n                            \n                                    Async\n                                saveUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: Auth, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/firebase.service/user.auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    Auth\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changeCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    changeCurrentUser(name?: any, email?: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:39\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                email\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(newPassword: string, oobCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                oobCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkAuth\n                        \n                    \n                \n            \n            \n                \ncheckAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        checkAuthLoggedInAsGuest\n                        \n                    \n                \n            \n            \n                \ncheckAuthLoggedInAsGuest()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        checkEmailExistence\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkEmailExistence(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:114\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        currentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    currentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailExists\n                        \n                    \n                \n            \n            \n                \nemailExists(email: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        guestLogin\n                        \n                    \n                \n            \n            \n                \nguestLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleActionCode\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleActionCode(oobCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                oobCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loginUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    loginUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        loginWithGoogle\n                        \n                    \n                \n            \n            \n                \n                        \n                    loginWithGoogle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerUser(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        resetPassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    resetPassword(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        saveUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    saveUser(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/firebase.service/user.auth.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        auth\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Auth\n\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/user.auth.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/user.auth.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firestore\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                \n                    \n                        Default value : inject(Firestore)\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/user.auth.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleEmail\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/user.auth.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/user.auth.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        googleProfileImg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/user.auth.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/firebase.service/user.auth.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, inject } from '@angular/core';\nimport { Auth, GoogleAuthProvider, applyActionCode, checkActionCode, confirmPasswordReset, getAuth, sendPasswordResetEmail, signInWithPopup, updateEmail, verifyPasswordResetCode,} from '@angular/fire/auth';\nimport { Firestore } from '@angular/fire/firestore';\nimport { createUserWithEmailAndPassword, updateProfile, signInWithEmailAndPassword, fetchSignInMethodsForEmail, signInAnonymously, signOut, onAuthStateChanged, verifyBeforeUpdateEmail,} from 'firebase/auth';\nimport { UserService } from './user.service';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserAuthService {\n  firestore: Firestore = inject(Firestore);\n  displayName: string = '';\n  googleName: any = '';\n  googleEmail: any = '';\n  googleProfileImg: any = '';\n\n  constructor(public auth: Auth, \n    public userService: UserService, \n    private router: Router) { }\n\n\n  //#region Sign In\n  async loginUser(email: string, password: string) {\n    return signInWithEmailAndPassword(this.auth, email, password);\n  }\n\n\n  guestLogin() {\n    return signInAnonymously(this.auth);\n  }\n\n\n  emailExists(email: any) {\n    return fetchSignInMethodsForEmail(this.auth, email);\n  }\n\n\n  async changeCurrentUser(name?: any, email?: any) {\n    const user = this.auth.currentUser;\n    if (email) {\n      await verifyBeforeUpdateEmail(user!, email);\n      await this.userService.updateUserEmail(this.userService.currentUser.id, email);\n      this.logout();\n    }\n    if (name) {\n      await updateProfile(user!, { displayName: name });\n      await this.userService.updateUserName(this.userService.currentUser.id, name);\n      this.router.navigate(['/main-page']);\n    }\n  }\n\n\n  async handleActionCode(oobCode: string) {\n    const auth = getAuth();\n    await applyActionCode(auth, oobCode);\n    const info = await checkActionCode(auth, oobCode);\n    const newEmail = info.data.email;\n    const user = auth.currentUser;\n    if (user) {\n      await updateEmail(user, newEmail!);\n    }\n  }\n\n\n  async currentUser() {\n    return this.auth.currentUser;\n  }\n\n\n  logout() {\n    return signOut(this.auth);\n  }\n\n\n  async loginWithGoogle() {\n    const provider = new GoogleAuthProvider();\n    return signInWithPopup(this.auth, provider)\n      .then((result) => {\n        let user = result.user;\n        this.googleName = user.displayName;\n        this.googleEmail = user.email;\n        this.googleProfileImg = user.photoURL;\n      })\n  }\n\n\n  async saveUser(name: string): Promise {\n    const user_auth: any = this.auth.currentUser;\n    if (user_auth) {\n        await updateProfile(user_auth, { displayName: name });\n        this.displayName = user_auth.displayName;\n    }\n  }\n\n\n  async resetPassword(email: string): Promise {\n      await sendPasswordResetEmail(this.auth, email);\n  }\n\n\n  async changePassword(newPassword: string, oobCode: string) {\n      const auth = getAuth();\n      const email = await verifyPasswordResetCode(auth, oobCode);\n      await confirmPasswordReset(auth, oobCode, newPassword);\n  }\n\n\n  async registerUser(email: string, password: string) {\n    return createUserWithEmailAndPassword(this.auth, email, password);\n  }\n\n\n  async checkEmailExistence(email: string) {\n    return fetchSignInMethodsForEmail(this.auth, email);\n  }\n\n\n  checkAuth() {\n    return new Promise(async (resolve, reject) => {\n      onAuthStateChanged(this.auth, (user) => {\n        if (user) {\n          resolve(true);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n\n\n  checkAuthLoggedInAsGuest() {\n    return new Promise((resolve, reject) => {\n      onAuthStateChanged(this.auth, (user) => {\n        if (user) {\n          const isAnonymous = user.isAnonymous;\n          resolve(isAnonymous);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserCreatedSnackbarComponent.html":{"url":"components/UserCreatedSnackbarComponent.html","title":"component - UserCreatedSnackbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserCreatedSnackbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/popups/user-created-snackbar/user-created-snackbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-created-snackbar\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./user-created-snackbar.component.html\n            \n\n\n\n            \n                styleUrl\n                ./user-created-snackbar.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                snackBarRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        snackBarRef\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(MatSnackBarRef)\n                    \n                \n                    \n                        \n                                Defined in src/app/popups/user-created-snackbar/user-created-snackbar.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, inject } from '@angular/core';\nimport { MatSnackBarRef } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-user-created-snackbar',\n  standalone: true,\n  imports: [],\n  templateUrl: './user-created-snackbar.component.html',\n  styleUrl: './user-created-snackbar.component.scss'\n})\nexport class UserCreatedSnackbarComponent {\n  snackBarRef = inject(MatSnackBarRef);\n}\n\n    \n\n    \n        \n    Konto erfolgreich erstellt!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Konto erfolgreich erstellt!'\n    var COMPONENTS = [{'name': 'AddChannelCardComponent', 'selector': 'app-add-channel-card'},{'name': 'AddMemberCardComponent', 'selector': 'app-add-member-card'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AvatarComponent', 'selector': 'app-avatar'},{'name': 'ChannelComponent', 'selector': 'app-channel'},{'name': 'CheckEmailComponent', 'selector': 'app-check-email'},{'name': 'DialogAddMemberComponent', 'selector': 'app-dialog-add-member'},{'name': 'DialogAddMemberMobileComponent', 'selector': 'app-dialog-add-member-mobile'},{'name': 'DialogEditChannelComponent', 'selector': 'app-dialog-edit-channel'},{'name': 'DialogEditProfileComponent', 'selector': 'app-dialog-edit-profile'},{'name': 'DialogEmojiPickerComponent', 'selector': 'app-dialog-emoji-picker'},{'name': 'DialogShowMembersComponent', 'selector': 'app-dialog-show-members'},{'name': 'DialogShowProfileComponent', 'selector': 'app-dialog-show-profile'},{'name': 'EditMessageComponent', 'selector': 'app-edit-message'},{'name': 'EmailSnackbarComponent', 'selector': 'app-email-snackbar'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LoginPageComponent', 'selector': 'app-login-page'},{'name': 'LoginSnackbarComponent', 'selector': 'app-login-snackbar'},{'name': 'LogOutDialogComponent', 'selector': 'app-log-out-dialog'},{'name': 'MainHeaderComponent', 'selector': 'app-main-header'},{'name': 'MainMenuChannelsComponent', 'selector': 'app-main-menu-channels'},{'name': 'MainMenuComponent', 'selector': 'app-main-menu'},{'name': 'MainMenuDmComponent', 'selector': 'app-main-menu-dm'},{'name': 'MainMenuHeaderComponent', 'selector': 'app-main-menu-header'},{'name': 'MainPageComponent', 'selector': 'app-main-page'},{'name': 'MessageComponent', 'selector': 'app-message'},{'name': 'MessageInputComponent', 'selector': 'app-message-input'},{'name': 'PopupSearchComponent', 'selector': 'app-popup-search'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ProfileButtonComponent', 'selector': 'app-profile-button'},{'name': 'ResetPasswordComponent', 'selector': 'app-reset-password'},{'name': 'SearchBarComponent', 'selector': 'app-search-bar'},{'name': 'SearchResultsComponent', 'selector': 'app-search-results'},{'name': 'SignInComponent', 'selector': 'app-sign-in'},{'name': 'ThreadComponent', 'selector': 'app-thread'},{'name': 'UserCreatedSnackbarComponent', 'selector': 'app-user-created-snackbar'}];\n    var DIRECTIVES = [{'name': 'OpenProfileDirective', 'selector': '[appOpenProfile]'},{'name': 'TagToComponentDirective', 'selector': '[appTagToComponent]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserCreatedSnackbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserManagementService.html":{"url":"injectables/UserManagementService.html","title":"injectable - UserManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-management.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterUsers\n                            \n                            \n                                getAllUserIds\n                            \n                            \n                                getCurrentChannelId\n                            \n                            \n                                getMemberIds\n                            \n                            \n                                removeSelectedUser\n                            \n                            \n                                selectUser\n                            \n                            \n                                updateMembers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, channelService: ChannelFirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user-management.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterUsers\n                        \n                    \n                \n            \n            \n                \nfilterUsers(searchInput: string, selectedUsers: User[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchInput\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                selectedUsers\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllUserIds\n                        \n                    \n                \n            \n            \n                \ngetAllUserIds()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentChannelId\n                        \n                    \n                \n            \n            \n                \ngetCurrentChannelId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management.service.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | undefined\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMemberIds\n                        \n                    \n                \n            \n            \n                \ngetMemberIds(selectedUsers: User[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management.service.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedUsers\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSelectedUser\n                        \n                    \n                \n            \n            \n                \nremoveSelectedUser(selectedUsers: User[], user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedUsers\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectUser\n                        \n                    \n                \n            \n            \n                \nselectUser(selectedUsers: User[], user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                selectedUsers\n                                            \n                                                            User[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User[]\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMembers\n                        \n                    \n                \n            \n            \n                \nupdateMembers(channelId: string, memberIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-management.service.ts:48\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                channelId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                memberIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { User } from '../interfaces/user.interface';\nimport { UserService } from '../firebase.service/user.service';\nimport { ChannelFirebaseService } from '../firebase.service/channelFirebase.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserManagementService {\n\n  constructor(\n    private userService: UserService,\n    private channelService: ChannelFirebaseService\n  ) {}\n\n\n  filterUsers(searchInput: string, selectedUsers: User[]): User[] {\n    const searchTerm = searchInput ? searchInput.trim().toLowerCase() : '';\n    return this.userService.allUsers.filter((user) => {\n      const isPartOfNameMatched = user.name\n        .split(' ')\n        .some((part: string) => part.toLowerCase().startsWith(searchTerm));\n      const isNotSelected = !selectedUsers.some(selected => selected.id === user.id);\n      const isNotCreator = this.channelService.currentChannel.creator !== user.id;\n      return isPartOfNameMatched && isNotSelected && isNotCreator;\n    });\n  }\n  \n\n  selectUser(selectedUsers: User[], user: User): User[] {\n    if (!selectedUsers.find((u) => u.id === user.id)) {\n      selectedUsers.push(user);\n    }\n    return selectedUsers;\n  }\n\n\n  removeSelectedUser(selectedUsers: User[], user: User): User[] {\n    return selectedUsers.filter((u) => u.id !== user.id);\n  }\n\n\n  getCurrentChannelId(): string | undefined {\n    return this.channelService.currentChannel.id;\n  }\n\n\n  updateMembers(channelId: string, memberIds: string[]): Promise {\n    return this.channelService.updateChannelMembers(channelId, memberIds);\n  }\n\n\n  getMemberIds(selectedUsers: User[]): string[] {\n    return selectedUsers.map(user => user.id).filter((id): id is string => id !== undefined);\n  }\n\n\n  getAllUserIds(): string[] {\n    return this.userService.allUsers.map(user => user.id).filter((id): id is string => id !== undefined);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilityService.html":{"url":"injectables/UtilityService.html","title":"injectable - UtilityService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/utility.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                months\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                convertToDate\n                            \n                            \n                                getChannelCreationTime\n                            \n                            \n                                getMessageCreationTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(channelService: ChannelFirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/utility.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        channelService\n                                                  \n                                                        \n                                                                        ChannelFirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        convertToDate\n                        \n                    \n                \n            \n            \n                \nconvertToDate(dateAsNumber: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/utility.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dateAsNumber\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChannelCreationTime\n                        \n                    \n                \n            \n            \n                \ngetChannelCreationTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/utility.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessageCreationTime\n                        \n                    \n                \n            \n            \n                \ngetMessageCreationTime(message: Message)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/utility.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            Message\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        months\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    'Januar',\n    'Februar',\n    'März',\n    'April',\n    'Mai',\n    'Juni',\n    'Juli',\n    'August',\n    'September',\n    'Oktober',\n    'November',\n    'Dezember',\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/services/utility.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ChannelFirebaseService } from '../firebase.service/channelFirebase.service';\nimport { Message } from '../interfaces/message.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilityService {\n  months = [\n    'Januar',\n    'Februar',\n    'März',\n    'April',\n    'Mai',\n    'Juni',\n    'Juli',\n    'August',\n    'September',\n    'Oktober',\n    'November',\n    'Dezember',\n  ];\n  constructor(private channelService: ChannelFirebaseService) { }\n\n\n  convertToDate(dateAsNumber: number) {\n    let date = new Date(dateAsNumber);\n    let d: number | string = date.getDate();\n    let m: number | string = date.getMonth() + 1;\n    let y: number | string = date.getFullYear();\n    if (d \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/firebase.service/channelFirebase.service.ts\n            \n            injectable\n            ChannelFirebaseService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/firebase.service/message.service.ts\n            \n            injectable\n            MessageService\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/firebase.service/reaction.service.ts\n            \n            injectable\n            ReactionService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/firebase.service/user.auth.service.ts\n            \n            injectable\n            UserAuthService\n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                \n                src/app/firebase.service/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/32)\n            \n        \n        \n            \n                \n                src/app/interfaces/channel.interface.ts\n            \n            interface\n            Channel\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/interfaces/message.interface.ts\n            \n            interface\n            Message\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/interfaces/reaction.interface.ts\n            \n            interface\n            Reaction\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/interfaces/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/login-page/avatar/avatar.component.ts\n            \n            component\n            AvatarComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/login-page/check-email/check-email.component.ts\n            \n            component\n            CheckEmailComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/login-page/login-page.component.ts\n            \n            component\n            LoginPageComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/login-page/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/login-page/reset-password/reset-password.component.ts\n            \n            component\n            ResetPasswordComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/login-page/sign-in/sign-in.component.ts\n            \n            component\n            SignInComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/channel.component.ts\n            \n            component\n            ChannelComponent\n            \n                0 %\n                (0/45)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/dialog-add-member-mobile/dialog-add-member-mobile.component.ts\n            \n            component\n            DialogAddMemberMobileComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/dialog-add-member/dialog-add-member.component.ts\n            \n            component\n            DialogAddMemberComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/dialog-edit-channel/dialog-edit-channel.component.ts\n            \n            component\n            DialogEditChannelComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/dialog-emoji-picker/dialog-emoji-picker.component.ts\n            \n            component\n            DialogEmojiPickerComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/dialog-show-members/dialog-show-members.component.ts\n            \n            component\n            DialogShowMembersComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/message/edit-message/edit-message.component.ts\n            \n            component\n            EditMessageComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/main-page/channel/message/message.component.ts\n            \n            component\n            MessageComponent\n            \n                0 %\n                (0/59)\n            \n        \n        \n            \n                \n                src/app/main-page/main-header/log-out-dialog/log-out-dialog.component.ts\n            \n            component\n            LogOutDialogComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/main-page/main-header/main-header.component.ts\n            \n            component\n            MainHeaderComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/main-page/main-header/search-bar/search-bar.component.ts\n            \n            component\n            SearchBarComponent\n            \n                0 %\n                (0/33)\n            \n        \n        \n            \n                \n                src/app/main-page/main-menu/main-menu-channels/add-channel-card/add-channel-card.component.ts\n            \n            component\n            AddChannelCardComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/main-page/main-menu/main-menu-channels/add-member-card/add-member-card.component.ts\n            \n            component\n            AddMemberCardComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/main-page/main-menu/main-menu-channels/main-menu-channels.component.ts\n            \n            component\n            MainMenuChannelsComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/app/main-page/main-menu/main-menu-dm/main-menu-dm.component.ts\n            \n            component\n            MainMenuDmComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/main-page/main-menu/main-menu-header/main-menu-header.component.ts\n            \n            component\n            MainMenuHeaderComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/main-page/main-menu/main-menu.component.ts\n            \n            component\n            MainMenuComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/main-page/main-page.component.ts\n            \n            component\n            MainPageComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/main-page/message-input/message-input.component.ts\n            \n            component\n            MessageInputComponent\n            \n                0 %\n                (0/43)\n            \n        \n        \n            \n                \n                src/app/main-page/thread/thread.component.ts\n            \n            component\n            ThreadComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/models/user.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/popups/email-snackbar/email-snackbar.component.ts\n            \n            component\n            EmailSnackbarComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/popups/login-snackbar/login-snackbar.component.ts\n            \n            component\n            LoginSnackbarComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/popups/user-created-snackbar/user-created-snackbar.component.ts\n            \n            component\n            UserCreatedSnackbarComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/services/cursor-position.service.ts\n            \n            injectable\n            CursorPositionService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/custom-dialog.service.ts\n            \n            injectable\n            CustomDialogService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/custom-dialog.service.ts\n            \n            interface\n            DialogParams\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/profile.service.ts\n            \n            injectable\n            ProfileService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/search.service.ts\n            \n            injectable\n            SearchService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/services/shared.service.ts\n            \n            injectable\n            SharedService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/services/state-management.service.ts\n            \n            injectable\n            StateManagementService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/thread.service.ts\n            \n            injectable\n            ThreadService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/user-management.service.ts\n            \n            injectable\n            UserManagementService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/utility.service.ts\n            \n            injectable\n            UtilityService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/dialog-edit-profile/dialog-edit-profile.component.ts\n            \n            component\n            DialogEditProfileComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                src/app/shared/dialog-show-profile/dialog-show-profile.component.ts\n            \n            component\n            DialogShowProfileComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/shared/directives/open-profile.directive.ts\n            \n            directive\n            OpenProfileDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/directives/tag-to-component.directive.ts\n            \n            directive\n            TagToComponentDirective\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/shared/imprint/imprint.component.ts\n            \n            component\n            ImprintComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/popup-search/popup-search.component.ts\n            \n            component\n            PopupSearchComponent\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/shared/privacy-policy/privacy-policy.component.ts\n            \n            component\n            PrivacyPolicyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/profile-button/profile-button.component.ts\n            \n            component\n            ProfileButtonComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/search-results/search-results.component.ts\n            \n            component\n            SearchResultsComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.2.0\n        \n            @angular/cdk : ^17.3.4\n        \n            @angular/common : ^17.2.0\n        \n            @angular/compiler : ^17.2.0\n        \n            @angular/core : ^17.2.0\n        \n            @angular/fire : ^17.0.1\n        \n            @angular/forms : ^17.2.0\n        \n            @angular/material : ^17.3.4\n        \n            @angular/platform-browser : ^17.2.0\n        \n            @angular/platform-browser-dynamic : ^17.2.0\n        \n            @angular/platform-server : ^17.2.0\n        \n            @angular/router : ^17.2.0\n        \n            @angular/ssr : ^17.2.2\n        \n            @ctrl/ngx-emoji-mart : ^9.2.0\n        \n            express : ^4.18.2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ChannelTypeEnum   (src/.../channel-type.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/enums/channel-type.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ChannelTypeEnum\n                    \n                \n                        \n                            \n                                 main\n                            \n                        \n                        \n                            \n                                Value : main\n                            \n                        \n                        \n                            \n                                 direct\n                            \n                        \n                        \n                            \n                                Value : direct\n                            \n                        \n                        \n                            \n                                 thread\n                            \n                        \n                        \n                            \n                                Value : thread\n                            \n                        \n                        \n                            \n                                 new\n                            \n                        \n                        \n                            \n                                Value : new\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDABubble\nThis project was generated with Angular CLI version 17.2.2.\nThis is a 3-man project for educational purpose only. The project is a webbrowser slack clone with firebase backend. \nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    38 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    14 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideClientHydration(),\n    provideAnimationsAsync(),\n    importProvidersFrom(\n      provideFirebaseApp(() =>\n        initializeApp(environment.firebase)\n      )\n    ),\n    importProvidersFrom(provideAuth(() => getAuth())),\n    importProvidersFrom(provideFirestore(() => getFirestore())),\n    importProvidersFrom(provideStorage(() => getStorage())),\n  ],\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
